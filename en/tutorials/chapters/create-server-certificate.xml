<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE procedure
 [  <!ENTITY % entities SYSTEM "../../shared/syslog-ng-entities.ent">
 %entities;]>
<procedure xml:id="create-server-certificate" xmlns="http://docbook.org/ns/docbook" version="5.0" condition="ose">
    <title>Creating a server certificate</title>
    <formalpara>
        <title>Purpose:</title>
        <para/>
    </formalpara>
    <para>To create a server certificate, complete the following steps:</para>
    <formalpara>
        <title>Steps:</title>
        <para/>
    </formalpara>
    <step>
        <para>The next step is to create and sign a certificate for your &abbrev; server. The common name should contain the FQDN or IP address of your server, and the e-mail address should be left blank.</para>
        <para><command>openssl req -nodes -new -x509 -keyout serverkey.pem -out serverreq.pem -days 365 -config openssl.cnf</command></para>
    </step>
    <step>
        <para>The following will be displayed. Answer the questions as in the example:</para>
        <synopsis>Generating a 1024 bit RSA private key
........................................++++++
.++++++
writing new private key to 'serverkey.pem'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:HU
State or Province Name (full name) [Some-State]:Budapest
Locality Name (eg, city) []:Budapest
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Balabit
Organizational Unit Name (eg, section) []:.
Common Name (e.g. server FQDN or YOUR name) []:172.16.177.147
Email Address []:
czanik@linux-modi:~/CA> openssl x509 -x509toreq -in serverreq.pem -signkey serverkey.pem -out tmp.pem
Getting request Private Key
Generating certificate request
czanik@linux-modi:~/CA> openssl ca -config openssl.cnf -policy policy_anything -out servercert.pem -infiles tmp.pem
Using configuration from openssl.cnf
Enter pass phrase for ./private/cakey.pem:
Check that the request matches the signature
Signature ok
Certificate Details:
        Serial Number: 1 (0x1)
        Validity
            Not Before: Jun 25 10:27:39 2014 GMT
            Not After : Jun 25 10:27:39 2015 GMT
        Subject:
            countryName               = HU
            stateOrProvinceName       = Budapest
            localityName              = Budapest
            organizationName          = Balabit
            commonName                = 172.16.177.147
        X509v3 extensions:
            X509v3 Basic Constraints:
                CA:FALSE
            Netscape Comment:
                OpenSSL Generated Certificate
            X509v3 Subject Key Identifier:
                55:4E:B1:47:33:CF:0C:83:5F:29:64:9B:E9:99:77:DF:0E:72:52:76
            X509v3 Authority Key Identifier:
                keyid:D1:FF:ED:B4:0B:66:E6:45:EE:70:4F:DC:6C:C5:34:48:42:38:E9:38

Certificate is to be certified until Jun 25 10:27:39 2015 GMT (365 days)
Sign the certificate? [y/n]:y

1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
    Data Base Updated </synopsis>
    </step>
    <step>
        <para>Enter the following:</para>
        <para><command>rm tmp.pem</command></para>
    </step>
</procedure>
