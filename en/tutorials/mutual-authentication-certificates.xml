<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
[
<!ENTITY % entities SYSTEM "../common/syslog-ng-entities.ent">
%entities;
]>
<section xml:id="mutual-authentication-certificates" xmlns="http://docbook.org/ns/docbook">
    <title>Creating self-signed certificates</title>
    <para>TLS-encryption uses certificates to authenticate the server, and in case of mutual authentication, the client as well. The following sections show you how to create the required certificates.</para>
    <para>To use mutual authentication in &abbrev;, certificates are required. There are several commercial certificate authorities (CAs) who can help you, but the process costs both money and time (waiting until the submitted certificate is signed). This guide demonstrates how to create your very own Certificate Authority (CA) for creating self-signed certificates. It does not cover all the details, for example, changing expiration dates, only the minimally required steps to be able to use mutual authentication in &abbrev;.</para>
    <para>There are handy tools, such as CA.pl, which can make certificate creation and signing easier, but they are not available on all platforms, even if it is part of the OpenSSL software suite. On the other hand, the OpenSSL command line tool is available on all Linux distributions and BSD variants, so this tool will be used in the guide.</para>
    <procedure xml:id="create-ca">
        <title>Creating a CA</title>
        <formalpara>
            <title>Purpose:</title>
            <para/>
        </formalpara>
        <para>To create a CA, complete the following steps:</para>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>Create an empty directory and navigate into that directory:</para>
            <para><command>mkdir CA</command></para>
            <para><command>cd CA</command></para>
        </step>
        <step>
            <para>Create a few directories and give starting values to some support files:</para>
            <para><command>mkdir certs crl newcerts private</command></para>
            <para><command>echo "01" > serial</command></para>
            <para><command>cp /dev/null index.txt</command></para>
        </step>
        <step>
            <para>Copy <filename>openssl.conf</filename> to the current directory. Depending on your distributions, the source directory might be different, so check the list of files in the OpenSSL package before copying:</para>
            <para><command>cp /etc/ssl/openssl.cnf openssl.cnf</command></para>
        </step>
        <step>
            <para>Edit <filename>openssl.conf</filename> in the current directory:</para>
            <para><command>vi openssl.cnf</command></para>
        </step>
        <step>
            <para>Search for the following part and replace <filename>./DemoCA</filename> with a single dot:</para>
            <synopsis>[ CA_default ]

dir             = ./demoCA              # Where everything is kept
certs           = $dir/certs            # Where the issued certs are kept </synopsis>
            <para>Change it to:</para>
            <synopsis>[ CA_default ]

dir             = .                     # Where everything is kept
certs           = $dir/certs            # Where the issued certs are kept </synopsis>
        </step>
        <step>
            <para>As a last step, generate the certificate for the CA:</para>
            <para><command>openssl req -new -x509 -keyout private/cakey.pem -out cacert.pem -days 365 -config openssl.cnf</command></para>
            <para>The following will be displayed. Answer the questions as in the example:</para>
            <synopsis>Generating a 1024 bit RSA private key
.++++++
......................++++++
writing new private key to 'private/cakey.pem'
Enter PEM pass phrase:
Verifying - Enter PEM pass phrase:
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:HU
State or Province Name (full name) [Some-State]:Budapest
Locality Name (eg, city) []:Budapest
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Balabit
Organizational Unit Name (eg, section) []:.
Common Name (e.g. server FQDN or YOUR name) []:Peter Czanik
Email Address []:czanik@balabit.com</synopsis>
        </step>
    </procedure>
    <procedure xml:id="create-server-certificate">
        <title>Creating a server certificate</title>
        <formalpara>
            <title>Purpose:</title>
            <para/>
        </formalpara>
        <para>To create a server certificate, complete the following steps:</para>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>The next step is to create and sign a certificate for your &abbrev; server. The common name should contain the FQDN or IP address of your server, and the e-mail address should be left blank.</para>
            <para><command>openssl req -nodes -new -x509 -keyout serverkey.pem -out serverreq.pem -days 365 -config openssl.cnf</command></para>
        </step>
        <step>
            <para>The following will be displayed. Answer the questions as in the example:</para>
            <synopsis>Generating a 1024 bit RSA private key
........................................++++++
.++++++
writing new private key to 'serverkey.pem'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:HU
State or Province Name (full name) [Some-State]:Budapest
Locality Name (eg, city) []:Budapest
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Balabit
Organizational Unit Name (eg, section) []:.
Common Name (e.g. server FQDN or YOUR name) []:172.16.177.147
Email Address []:
czanik@linux-modi:~/CA> openssl x509 -x509toreq -in serverreq.pem -signkey serverkey.pem -out tmp.pem
Getting request Private Key
Generating certificate request
czanik@linux-modi:~/CA> openssl ca -config openssl.cnf -policy policy_anything -out servercert.pem -infiles tmp.pem
Using configuration from openssl.cnf
Enter pass phrase for ./private/cakey.pem:
Check that the request matches the signature
Signature ok
Certificate Details:
        Serial Number: 1 (0x1)
        Validity
            Not Before: Jun 25 10:27:39 2014 GMT
            Not After : Jun 25 10:27:39 2015 GMT
        Subject:
            countryName               = HU
            stateOrProvinceName       = Budapest
            localityName              = Budapest
            organizationName          = Balabit
            commonName                = 172.16.177.147
        X509v3 extensions:
            X509v3 Basic Constraints:
                CA:FALSE
            Netscape Comment:
                OpenSSL Generated Certificate
            X509v3 Subject Key Identifier:
                55:4E:B1:47:33:CF:0C:83:5F:29:64:9B:E9:99:77:DF:0E:72:52:76
            X509v3 Authority Key Identifier:
                keyid:D1:FF:ED:B4:0B:66:E6:45:EE:70:4F:DC:6C:C5:34:48:42:38:E9:38

Certificate is to be certified until Jun 25 10:27:39 2015 GMT (365 days)
Sign the certificate? [y/n]:y

1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
    Data Base Updated </synopsis>
        </step>
        <step>
            <para>Enter the following:</para>
            <para><command>rm tmp.pem</command></para>
        </step>
    </procedure>
    <procedure xml:id="create-client-certificate">
        <title>Creating a client certificate</title>
        <formalpara>
            <title>Purpose:</title>
            <para/>
        </formalpara>
        <para>To create a client certificate, complete the following steps:</para>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>The steps for the client(s) are very similar, only the file names and the embedded common name (host identifier: FQDN or IP address) are different. If you have multiple clients, make sure that each has the right host identifier.</para>
            <para><command>openssl req -nodes -new -x509 -keyout clientkey.pem -out clientreq.pem -days 365 -config openssl.cnf</command></para>
        </step>
        <step>
            <para>The following will be displayed. Answer the questions as in the example:</para>
            <synopsis>Generating a 1024 bit RSA private key
.................................................................................++++++
...............................++++++
writing new private key to 'clientkey.pem'
-----
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:HU
State or Province Name (full name) [Some-State]:Budapest
Locality Name (eg, city) []:Budapest
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Balabit
Organizational Unit Name (eg, section) []:.
Common Name (e.g. server FQDN or YOUR name) []:172.16.177.129
Email Address []:

czanik@linux-modi:~/CA> openssl x509 -x509toreq -in clientreq.pem -signkey clientkey.pem -out tmp.pem
Getting request Private Key
Generating certificate request
czanik@linux-modi:~/CA> openssl ca -config openssl.cnf -policy policy_anything -out clientcert.pem -infiles tmp.pem
Using configuration from openssl.cnf
Enter pass phrase for ./private/cakey.pem:
Check that the request matches the signature
Signature ok
Certificate Details:
        Serial Number: 2 (0x2)
        Validity
            Not Before: Jun 25 10:28:49 2014 GMT
            Not After : Jun 25 10:28:49 2015 GMT
        Subject:
            countryName               = HU
            stateOrProvinceName       = Budapest
            localityName              = Budapest
            organizationName          = Balabit
            commonName                = 172.16.177.129
        X509v3 extensions:
            X509v3 Basic Constraints:
                CA:FALSE
            Netscape Comment:
                OpenSSL Generated Certificate
            X509v3 Subject Key Identifier:
                91:D9:99:95:F2:0D:22:BF:72:95:56:9A:C0:DF:A3:07:5C:E2:3F:63
            X509v3 Authority Key Identifier:
                keyid:D1:FF:ED:B4:0B:66:E6:45:EE:70:4F:DC:6C:C5:34:48:42:38:E9:38

Certificate is to be certified until Jun 25 10:28:49 2015 GMT (365 days)
Sign the certificate? [y/n]:y

1 out of 1 certificate requests certified, commit? [y/n]y
Write out database with 1 new entries
Data Base Updated</synopsis>
        </step>
        <step>
            <para>Enter the following:</para>
            <para><command>rm tmp.pem</command></para>
        </step>
    </procedure>
</section>
