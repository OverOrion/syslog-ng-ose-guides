<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE itemizedlist
 [  <!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]>
<itemizedlist xmlns="http://docbook.org/ns/docbook" version="5.0">
    <!-- Applies to Python template functions and Python parsers -->
    <listitem>
        <para>To reference a name-value pair or a macro in the Python code, use the following format. For example, if the first argument in the definition of the function is called <userinput>log-message</userinput>, the value of the HOST macro is <userinput>log-message['HOST']</userinput>, and so on. (The <userinput>log-message</userinput> contains the entire log message (not just the text body) in a structure similar to a Python dict, but it is actually an object.)</para>
    </listitem>
    <listitem>
        <para>You can define new name-value pairs in the Python function. For example, if the first argument in the definition of the function is called <userinput>log-message</userinput>, you can create a new name-value pair like this: <userinput>log_message["new-macro-name"]="value"</userinput>. This is useful when you parse a part of the message from Python, or lookup a value based on data extracted from the log message.</para>
        <para>Note that the names of the name-value pairs are case-sensitive. If you create a new name-value pair called <userinput>new-macro-name</userinput> in Python, and want to reference it in another part of the &abbrev; configuration file (for example, in a template), use the <userinput>${new-macro-name}</userinput> macro.</para>
    </listitem>
    <listitem>
        <para>You cannot override hard macros (see <xref linkend="macros-hard-vs-soft"/>).</para>
    </listitem>
    <listitem>
        <para>To list all available keys (names of name-value pairs), use the <userinput>log_message.keys()</userinput> function.</para>
    </listitem>
</itemizedlist>
