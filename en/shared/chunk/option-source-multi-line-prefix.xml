<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
 [  <!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]>
<topic xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>multi-line-prefix()</title>
    <indexterm type="parameter">
        <primary>multi-line-prefix()</primary>
    </indexterm>
    <indexterm>
        <primary>processing multi-line messages</primary>
    </indexterm>
    <indexterm>
        <primary>multi-line messages</primary>
    </indexterm>
    <informaltable frame="topbot" colsep="0" rowsep="0">
        <tgroup cols="2">
            <colspec colnum="1" colwidth="40pt"/>
            <tbody>
                <row>
                    <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                    </entry>
                    <entry>regular expression starting with the ^ character</entry>
                </row>
                <row>
                    <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                    </entry>
                    <entry>empty string</entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <para><emphasis role="bold">Description:</emphasis> Use the <parameter>multi-line-prefix()</parameter> option to process multi-line messages, that is, log messages that contain newline characters (for example, Tomcat logs). Specify a string or regular expression that matches the beginning of the log messages (always start with the <userinput>^</userinput> character). Use as simple regular expressions as possible, because complex regular expressions can severely reduce the rate of processing multi-line messages. If the <parameter>multi-line-prefix()</parameter> option is set, &abbrev; ignores newline characters from the source until a line matches the regular expression again, and treats the lines between the matching lines as a single message. See also the <parameter>multi-line-garbage()</parameter> option.</para>
    <xi:include href="../../shared/wnt/tip-multi-line-output.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <example>
        <title>Processing Tomcat logs</title>
        <indexterm>
            <primary>multi-line messages</primary>
        </indexterm>
        <indexterm>
            <primary>Tomcat logs</primary>
        </indexterm>
        <para>The log messages of the Apache Tomcat server are a typical example for multi-line log messages. The messages start with the date and time of the query in the <userinput>YYYY.MM.DD HH:MM:SS</userinput> format, as you can see in the following example.</para>
        <synopsis>2010.06.09. 12:07:39 org.apache.catalina.startup.Catalina start
SEVERE: Catalina.start:
LifecycleException:  service.getName(): "Catalina";  Protocol handler start failed: java.net.BindException: Address already in use null:8080
       at org.apache.catalina.connector.Connector.start(Connector.java:1138)
       at org.apache.catalina.core.StandardService.start(StandardService.java:531)
       at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
       at org.apache.catalina.startup.Catalina.start(Catalina.java:583)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.apache.commons.daemon.support.DaemonLoader.start(DaemonLoader.java:177)
2010.06.09. 12:07:39 org.apache.catalina.startup.Catalina start
INFO: Server startup in 1206 ms
2010.06.09. 12:45:08 org.apache.coyote.http11.Http11Protocol pause
INFO: Pausing Coyote HTTP/1.1 on http-8080
2010.06.09. 12:45:09 org.apache.catalina.core.StandardService stop
INFO: Stopping service Catalina</synopsis>
        <para>To process these messages, specify a regular expression matching the timestamp of the messages in the <parameter>multi-line-prefix()</parameter> option. Such an expression is the following:</para>
        <synopsis>source s_file{file("/var/log/tomcat6/catalina.2010-06-09.log" follow-freq(0) <phrase condition="ose">multi-line-mode(regexp) </phrase>multi-line-prefix("[0-9]{4}\.[0-9]{2}\.[0-9]{2}\.") flags(no-parse));};
};</synopsis>
        <para>Note that <userinput>flags(no-parse)</userinput> is needed to prevent &abbrev; trying to interpret the date in the message.</para>
    </example>
</topic>
