<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
 [  <!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]>
<chapter xml:id="chapter-destinations" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Sending and storing log messages &mdash; destinations and destination drivers</title>
        <indexterm significance="preferred">
            <primary>destinations</primary>
        </indexterm>
        <indexterm significance="preferred">
            <primary>destination drivers</primary>
        </indexterm>
        <para>A destination is where a log message is sent if the filtering rules match. Similarly
            to sources, destinations consist of one or more drivers, each defining where and how
            messages are sent.</para>
        <tip>
            <para>If no drivers are defined for a destination, all messages sent to the destination
                are discarded. This is equivalent to omitting the destination from the log
                statement.</para>
        </tip>
        <para>To define a destination, add a destination statement to the syslog-ng configuration
            file using the following syntax: <indexterm>
                <primary>destinations</primary>
                <secondary>defining</secondary>
            </indexterm>
            <synopsis>destination &lt;identifier&gt; {
                destination-driver(params); destination-driver(params); ... };</synopsis>
        </para>
        <example>
            <title>A simple destination statement</title>
            <para>The following destination statement sends messages to the TCP port
                <parameter>1999</parameter> of the <parameter>10.1.2.3</parameter> host.</para>
            <synopsis>destination d_demo_tcp { tcp("10.1.2.3" port(1999)); };</synopsis>
            <para>If name resolution is configured, the hostname of the target server can be used as
                well.</para>
            <synopsis>destination d_tcp { tcp("target_host" port(1999); localport(999)); };</synopsis>
        </example>
        <note>
            <para>Sources and destinations are initialized only when they are used in a log statement. For example, &abbrev; connects a remote destination only if the destination is used in a log statement. For details on creating log statements, see <xref linkend="chapter-routing-filters"/>.</para>
        </note>
        <para>The following table lists the destination drivers available in syslog-ng.</para>
        <xi:include href="chunks/table-destination-drivers.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <section xml:id="configuring_destinations_file">
            <title>Storing messages in plain-text files</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>file()</parameter> driver</secondary>
            </indexterm>
            <para>The file driver is one of the most important destination drivers in syslog-ng. It
                allows to output messages to the specified text file, or to a set of files. </para>
            <para>The destination filename may include macros which get expanded when the message is
                written, thus a simple <parameter>file()</parameter> driver may create several
                files: for example, &abbrev; can store the messages of client hosts in a separate file for each host. For more information on available macros see <xref linkend="reference_macros"
                />. </para>
            <para>If the expanded filename refers to a directory which does not exist, it will be
                created depending on the <parameter>create_dirs()</parameter> setting (both global
                and a per destination option).</para>
            <para>The <parameter>file()</parameter> has a single required parameter that specifies
                the filename that stores the log messages. For the list of available optional
                parameters, see <xref linkend="reference_destination_file"/>.</para>
            <synopsis>Declaration:
                file(filename options());</synopsis>
            <example xml:id="example_destination_file">
                <title>Using the file() driver</title>
                <synopsis>destination d_file { file("/var/log/messages" ); };</synopsis>
            </example>
            <example xml:id="example_destination_file_macro">
                <title>Using the file() driver with macros in the file name and a template for the
                        message</title>
                <synopsis>destination d_file {
        file("/var/log/${YEAR}.${MONTH}.${DAY}/messages"
             template("${HOUR}:${MIN}:${SEC} ${TZ} ${HOST} [${LEVEL}] ${MSG} ${MSG}\n")
             template_escape(no));
};</synopsis>
            </example>
            <xi:include href="chunks/note-logrotate.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <warning>
                <para>Since the state of each created file must be tracked by syslog-ng, it consumes
                    some memory for each file. If no new messages are written to a file within 60
                    seconds (controlled by the <parameter>time_reap()</parameter> global option), it
                    is closed, and its state is freed. </para>
                <para>Exploiting this, a DoS attack can be mounted against the system. If the number
                    of possible destination files and its needed memory is more than the amount
                    available on the syslog-ng server. </para>
                <para>The most suspicious macro is <parameter>${PROGRAM}</parameter>, where the number
                    of possible variations is rather high. Do not use the
                    <parameter>${PROGRAM}</parameter> macro in insecure environments.</para>
            </warning>
            <section xml:id="reference_destination_file">
                <title>file() destination options</title>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>file()</parameter> driver</secondary>
                </indexterm>
                <para>The <parameter>file()</parameter> driver outputs messages to the specified text file, or to a set of files. The <parameter>file()</parameter> destination has the following options:</para>
                <xi:include href="chunks/warning-fd-ulimit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <!-- FIXME required parameters?? -->
                <simplesect>
                    <xi:include href="chunks/option-destination-create-dirs.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-dir-group.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-dir-owner.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-dir-perm.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                    <itemizedlist>
                        <listitem>
                            <indexterm type="parameter">
                                <primary>threaded</primary>
                            </indexterm>
                            <para><emphasis>threaded</emphasis>: The <parameter>threaded</parameter> flag enables multithreading for the destination. For details on multithreading, see <xref linkend="chapter-multithreading"/>.</para>
                            <note>
                                <para>The <parameter>file</parameter> destination uses multiple threads only if the destination filename contains macros.</para>
                            </note>
                        </listitem>
                    </itemizedlist>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-lines.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-timeout.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-frac-digits.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-fsync.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <title>group()</title>
                    <indexterm type="parameter">
                        <primary>group()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>root</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Set the group of the created file to the one specified.</para>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-local-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect condition="pe">
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_freq)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_mode)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
                <simplesect>
                    <title>overwrite_if_older()</title>
                    <indexterm type="parameter">
                        <primary>overwrite_if_older()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>number</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>0</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> If set to a value higher than 0, syslog-ng checks when the file
                                    was last modified before starting to write into the file. If the
                                    file is older than the specified amount of time (in seconds), then
                                    syslog-ng removes the existing file and opens a new file with the
                                    same name. In combination with for example the
                                    <parameter>${WEEKDAY}</parameter> macro, this can be used for simple
                                    log rotation, in case not all history has to be kept. (Note that in
                                    this weekly log rotation example if its Monday 00:01, then the file
                                    from last Monday is not seven days old, because it was probably last
                                    modified shortly before 23:59 last Monday, so it is actually not
                                    even six days old. So in this case, set the
                                        <parameter>overwrite_if_older()</parameter> parameter to
                                    a-bit-less-than-six-days, for example, to
                                    <parameter>518000</parameter> seconds.</para>
                </simplesect>
                <simplesect>
                    <title>owner()</title>
                    <indexterm type="parameter">
                        <primary>owner()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>root</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Set the owner of the created file to the one specified.</para>
                </simplesect>
                <simplesect>
					<xi:include href="chunks/option-destination-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
				</simplesect>
                <simplesect>
                    <title>perm()</title>
                    <indexterm type="parameter">
                        <primary>perm()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>number</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>0600</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The permission mask of the file if it is created by syslog-ng.
                                    For octal numbers prefix the number with <parameter>0</parameter>,
                                    for example use <parameter>0755</parameter> for
                                    <parameter>rwxr-xr-x</parameter>.</para>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-suppress.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template-escape.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-throttle.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                 <simplesect>
		            <title>time_reap()</title>
		                <indexterm type="parameter">
		                    <primary>time_reap()</primary>
		                </indexterm>
		            <informaltable frame="topbot" colsep="0" rowsep="0">
		                <tgroup cols="2">
		                    <colspec colnum="1" colwidth="80pt"/>
		                    <tbody>
		                        <row>
		                            <entry>Accepted values:
		                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
		                            <entry>number</entry>
		                        </row>
		                        <row>
		                            <entry>Default:
		                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
		                            <entry>Use global settings</entry>
		                        </row>
		                    </tbody>
		                </tgroup>
		            </informaltable>
		            <xi:include href="chunks/option-description-destination-file-time-reap.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
		        </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-ts-format.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
            </section>
        </section>
		<section xml:id="configuring_destinations_logstore" condition="pe">
	        <title>Storing messages in encrypted files</title>
	        <indexterm>
	            <primary>logstore</primary>
	        </indexterm>
	        <indexterm>
	            <primary>encrypting log messages</primary>
	            <secondary>on the hard disk</secondary>
	        </indexterm>
	        <indexterm>
	            <primary>encrypting log files</primary>
	        </indexterm>
	        <indexterm>
	            <primary>signing log files</primary>
	        </indexterm>
	        <indexterm>
	            <primary>file encryption</primary>
	        </indexterm>
	        <indexterm>
	            <primary>Timestamping Authority</primary>
	        </indexterm>
	        <indexterm>
	            <primary>TSA</primary>
	        </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>logstore()</parameter> driver</secondary>
            </indexterm>
	        <para>The &abbrev; application can store log messages securely in encrypted, compressed and timestamped binary files. Timestamps can be requested from an external Timestamping Authority (TSA).</para>
	        <para>Logstore files consist of individual chunks, every chunk can be encrypted, compressed, and timestamped separately. Chunks contain compressed log messages and header information needed for retrieving messages from the logstore file.</para>
	        <para>The &abbrev; application generates an SHA-1 hash for every chunk to verify the integrity of the chunk. The hashes of the chunks are chained together to prevent injecting chunks into the logstore file. The &abbrev; application can encrypt the logstore using various algorithms, using the <parameter>aes128</parameter> encryption algorithm in CBC mode and the <parameter>hmac-sha1</parameter> hashing (HMAC) algorithm as default. For other algorithms, see <xref linkend="destination-logstore-options-cipher"/> and <xref linkend="destination-logstore-options-digest"/>.</para>
	         <para>The destination filename may include macros which get expanded when the message is written, thus a simple <parameter>logstore()</parameter> driver may create several files. For more information on available macros see <xref linkend="reference_macros"/>. </para>
            <para>If the expanded filename refers to a directory which does not exist, it will be created depending on the <parameter>create_dirs()</parameter> setting (both global and a per destination option).</para>
            <para>The <parameter>logstore()</parameter> has a single required parameter that specifies the filename that stores the log messages. For the list of available optional parameters, see <xref linkend="reference_destination_logstore"/>.</para>
            <synopsis>Declaration:
                logstore(filename options());</synopsis>
            <example xml:id="example_destination_logstore">
                    <title>Using the logstore() driver</title>
                    <para>A simple example saving and compressing log messages.</para>
                    <synopsis>destination d_logstore { logstore("/var/log/messages.lgs" compress(5) ); };</synopsis>
                    <para>A more detailed example that encrypts messages, modifies the parameters for
                    closing chunks, and sets file privileges.</para>
                    <synopsis>destination d_logstore { logstore("/var/log/messages-logstore.lgs"
    encrypt_certificate("/opt/syslog-ng/etc/syslog-ng/keys/10-100-20-40/public-certificate-of-the-server.pem")
    owner("balabit")
    group("balabit")
    perm(0777)
); };</synopsis>
                <para>The URL to the Timestamping Authority and if needed, the OID of the timestamping policy can be set as global options, or also per logstore destination. The following example specifies the URL and the OID as global options:</para>
                <synopsis>options {
        timestamp_url("http://10.50.50.50:8080/");
        timestamp_policy("0.4.0.2023.1.1");
};</synopsis>
	        </example>
            <note>
                <para>When using the <parameter>logstore()</parameter> destination, update the configuration of your log rotation program to rotate these files. Otherwise, the log files can become very large.</para>
            </note>
            <warning>
                <para>Since the state of each created file must be tracked by syslog-ng, it consumes some memory for each file. If no new messages are written to a file within 60 seconds (controlled by the <parameter>time_reap()</parameter> global option), it is closed, and its state is freed. </para>
                <para>Exploiting this, a DoS attack can be mounted against the system. If the number of possible destination files and its needed memory is more than the amount available on the syslog-ng server.</para>
                <para>The most suspicious macro is <parameter>${PROGRAM}</parameter>, where the number of possible variations is rather high. Do not use the <parameter>${PROGRAM}</parameter> macro in insecure environments.</para>
            </warning>
            <section xml:id="logstore-display-contents">
				<title>Displaying the contents of logstore files</title>
	            <para>To display the contents of a logstore file, use the <command>lgstool</command> (formerly called <command>logcat</command>) command supplied with syslog-ng, for example <command>lgstool cat /var/log/messages.lgs</command>. Log messages available in the journal file of the logstore (but not yet written to the logstore file itself) are displayed as well.</para>
	            <indexterm>
	                <primary>logcat</primary>
	            </indexterm>
	            <indexterm>
	                <primary>lgstool</primary>
	            </indexterm>
				<para>To display the contents of encrypted log files, specify the private key of the certificate used to encrypt the file, for example <command>lgstool cat -k private.key /var/log/messages.lgs</command>. The contents of the file are sent to the standard output, so it is possible to use <command>grep</command> and other tools to find particular log messages, for example <command>lgstool cat /var/log/messages.lgs |grep 192.168.1.1</command>. For further details, see <xref linkend="lgstool.1"/>.</para>
	            <tip>
	                <para>The <command>lgstool</command> utility is available for Microsoft Windows operating systems at the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://www.balabit.com/network-security/syslog-ng/central-syslog-server/upgrades/">&product; Download Page</link>.</para>
	            </tip>
	            <warning>
	                <para>For files that are in use by syslog-ng, the last chunk that is open cannot be read.</para>
<!--
	                <para>If the computer running &product; crashes, an unclosed chunk remains at the end of the logstore file. This chunk is marked as broken, its data stays there but is not shown by <command>lgstool</command>.</para>
-->
	            </warning>
            </section>
	        <section xml:id="concepts_logstore_journal">
	            <title>Journal files</title>
	            <indexterm>
	                <primary>journal files</primary>
	            </indexterm>
	            <para>Starting with &product; 3.2, &abbrev; processes log messages into a journal file before writing them to the logstore file. That way logstore files are consistent even if &abbrev; crashes unexpectedly, avoiding losing messages. Note that this does not protect against losing messages if the operating system crashes.</para>
	            <para>A journal file is automatically created for every logstore file that &abbrev; opens. A journal file consists of journal blocks which store the log messages. When a journal block fills up with messages, &abbrev; writes the entire block into the logstore file and starts to reuse the journal block (one journal block becomes one chunk in the logstore file). If the messages cannot be written to the logstore file (for example, because the disk becomes unaccessible, or file operations are slow), messages are put to the next journal block (&abbrev; uses four blocks by default). When all journal blocks become full, &abbrev; will stop processing incoming traffic. &abbrev; starts accepting messages to the logstore file again when the first journal block is successfully written to the logstore file. If &abbrev; receives a HUP or STOP signal, or no new message arrives into the logstore for the period set in the <parameter>time_reap()</parameter> parameter, it writes every journal block to the logstore.</para>
                <para>When &abbrev; is restarted, it automatically processes the journal files to the logstore files, unless a particular logstore file is not part of configuration of &abbrev;. Such orphaned journal files can be processed with the <command>lgstool recover</command> command. For details on processing orphaned journal files, see <xref linkend="lgstool_recover"/>.</para>
	            <warning>
	                <itemizedlist>
	                    <listitem>
	                        <para>If a particular logstore destination receives messages at a constant but very low message rate (for example, a 100-byte message every 30 seconds), messages do not get written to the logstore file for a long time, because the journal block does not get full, and messages are more frequent than the <parameter>time_reap()</parameter> time. This becomes a problem when using logrotate to rotate the logstore files, because log messages will not be in the files they are expected. To avoid this situation, either use time-based macros in the filenames of the logstore files, or send a HUP signal to &abbrev; right before rotating the logstore files.</para>
	                    </listitem>
	                    <listitem>
	                        <para>When every block of a journal becomes full and &abbrev; stops processing incoming traffic, <emphasis>it will not read new messages at all</emphasis> until a block is successfully written to the related logstore file. This is in contrast with flow-control, where only messages from the source related to the particular destination are not processed.</para>
	                    </listitem>
	                    <listitem>
	                        <para>The messages in the journal file are in plain-text format: they are neither encrypted nor compressed. The journal file has the same permission as the logstore, by default, <parameter>root</parameter> privileges are required to access them. Make sure you consider this if you change the permissions of the journal file (owner, group, perm) in the &abbrev; configuration file. </para>
	                    </listitem>
	                </itemizedlist>
	            </warning>
	            <note>
	                <para>Journal files are located in the same folder as the logstore file. The name of the journal file is the same as the logstore file with <parameter>.jor</parameter> suffix added. For example, the journal file for <filename>messages.lgs</filename> is <parameter>messages.lgs.jor</parameter>.</para>
	            </note>
	            <indexterm>
	                <primary>memory use of</primary>
	                <secondary>logstore journal files</secondary>
	            </indexterm>
	            <para>The &abbrev; application uses a separate journal file for every logstore file; every journal file is processed by a separate thread. The journal files are mapped into the memory. The journal of an individual logstore file uses up to <parameter>journal_block_size()*journal_block_count()</parameter> memory address, which is 4MB by default. However, if you have several logstore files open in parallel (for example, you are collecting log messages from 500 hosts and storing them in separate files for every host, and the hosts are continuously sending messages) the memory requirements for journaling rise quickly (to ~2GB for the 500 hosts). To limit the memory use of journals, adjust the <link linkend="logstore_option_journal_memory_limit"><parameter>logstore_journal_shmem_threshold()</parameter></link> global option (by default, it is 512 MB).</para>
	            <para>
	                    <xi:include href="chunks/option-description-destination-logstore-journal-shmem-threshold.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </para>
	            <warning>
	                <para>If you have a large amount of open logstore files in parrallel (for example, you are using the <parameter>${HOST}</parameter> or <parameter>${PROGRAM}</parameter> macros in your filenames) consider lowering the <parameter>journal_block_size()</parameter> to avoid &abbrev; consuming the entire memory of the system.</para>
	            </warning>
	            <xi:include href="chunks/example-logstore-memory-threshold.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	        </section>
	        <section xml:id="reference_destination_logstore">
	            <title>logstore() destination options</title>
	            <indexterm>
	                <primary>destination drivers</primary>
	                <secondary><parameter>logstore()</parameter> driver</secondary>
	            </indexterm>
	            <para>The logstore driver stores log messages in binary files that can be encrypted, compressed, checked for integrity, and timestamped by an external Timestamping Authority (TSA). Otherwise, it is very similar to the <parameter><link linkend="reference_destination_file">file()</link></parameter> destination.</para>
                <xi:include href="chunks/warning-fd-ulimit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <xi:include href="chunks/note-logrotate.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            <para>The <parameter>logstore()</parameter> has a single required parameter that specifies the filename that stores the log messages.</para>
	            <synopsis>Declaration:
	    logstore(filename options());</synopsis>
	            <para>The <parameter>logstore()</parameter> destination has the following options:</para>
	                <!-- FIXME Global options for destinations files should be cleaned up -->
	            <simplesect xml:id="destination-logstore-options-cipher">
	                <title>cipher()</title>
	                <indexterm type="parameter">
	                    <primary>cipher()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>string</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry><parameter>aes-128-cbc</parameter></entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> Set the cipher method used to encrypt the logstore. The
	                                    following cipher methods are available:
	                                    <parameter>aes-128-cbc</parameter>,
	                                    <parameter>aes-128-cfb</parameter>,
	                                    <parameter>aes-128-cfb1</parameter>,
	                                    <parameter>aes-128-cfb8</parameter>,
	                                    <parameter>aes-128-ecb</parameter>, <parameter>aes-128-ofb
	                                    </parameter>, <parameter>aes-192-cbc</parameter>,
	                                        <parameter>aes-192-cfb</parameter>,
	                                    <parameter>aes-192-cfb1</parameter>,
	                                    <parameter>aes-192-cfb8</parameter>,
	                                    <parameter>aes-192-ecb</parameter>, <parameter>aes-192-ofb
	                                    </parameter>, <parameter>aes-256-cbc</parameter>,
	                                        <parameter>aes-256-cfb</parameter>,
	                                    <parameter>aes-256-cfb1</parameter>,
	                                    <parameter>aes-256-cfb8</parameter>,
	                                    <parameter>aes-256-ecb</parameter>, <parameter>aes-256-ofb
	                                    </parameter>, <parameter>aes128 </parameter>, <parameter>aes192
	                                    </parameter>, <parameter>aes256</parameter>, <parameter>bf
	                                    </parameter>, <parameter>bf-cbc </parameter>,
	                                    <parameter>bf-cfb</parameter>, <parameter>bf-ecb </parameter>,
	                                        <parameter>bf-ofb </parameter>,
	                                    <parameter>blowfish</parameter>, <parameter>cast </parameter>,
	                                        <parameter>cast-cbc </parameter>, <parameter>cast5-cbc
	                                    </parameter>, <parameter>cast5-cfb</parameter>,
	                                        <parameter>cast5-ecb</parameter>, <parameter>cast5-ofb
	                                    </parameter>, <parameter>des</parameter>,
	                                    <parameter>des-cbc</parameter>, <parameter>des-cfb </parameter>,
	                                        <parameter>des-cfb1 </parameter>, <parameter>des-cfb8
	                                    </parameter>, <parameter>des-ecb </parameter>,
	                                        <parameter>des-ede</parameter>,
	                                    <parameter>des-ede-cbc</parameter>, <parameter>des-ede-cfb
	                                    </parameter>, <parameter>des-ede-ofb</parameter>,
	                                        <parameter>des-ede3 </parameter>,
	                                    <parameter>des-ede3-cbc</parameter>,
	                                    <parameter>des-ede3-cfb</parameter>,
	                                    <parameter>des-ede3-ofb</parameter>, <parameter>des-ofb
	                                    </parameter>, <parameter>des3 </parameter>, <parameter>desx
	                                    </parameter>, <parameter>desx-cbc</parameter>,
	                                    <parameter>rc2</parameter>, <parameter>rc2-40-cbc </parameter>,
	                                        <parameter>rc2-64-cbc</parameter>,
	                                    <parameter>rc2-cbc</parameter>, <parameter>rc2-cfb</parameter>,
	                                        <parameter>rc2-ecb </parameter>,
	                                    <parameter>rc2-ofb</parameter>, <parameter>rc4</parameter>, and
	                                        <parameter>rc4-40</parameter>. By default, syslog-ng PE uses
	                                    the <parameter>aes-128-cbc</parameter> method.</para>
	                <para>Note that the size of the digest hash must be equal to or
	                                    larger than the key size of the cipher method. For example, to
	                                    use the <parameter>aes-256-cbc</parameter> cipher method, the
	                                    digest method must be at least <parameter>SHA-256</parameter>.
	                                    This option is available in syslog-ng PE 3.1 and later.</para>
	            </simplesect>
	            <simplesect>
	                <title>chunk_size()</title>
	                <indexterm type="parameter">
	                    <primary>chunk_size()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>128</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> This option is obsolete. Use the <parameter>journal_block_size</parameter> option instead.</para>
	                <para>Size of a logstore chunk in kilobytes. Note that this size refers
	                                to the compressed size of the chunk. Also, the gzip library used for
	                                compressing the messages has a 32k long buffer; messages may not
	                                appear in the actual logfile until this buffer is not filled.
	                                Logstore chunks are closed when they reach the specified size, or
	                                when the time limit set in <parameter>chunk_time</parameter>
	                                expires.</para>
	            </simplesect>
	            <simplesect>
	                <title>chunk_time()</title>
	                <indexterm type="parameter">
	                    <primary>chunk_time()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>5</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> This option is obsolete.</para>
	                <para>Time limit in seconds: syslog-ng PE closes the chunk if no new
	                                messages arrive until the time limit expires. Logstore chunks are
	                                closed when the time limit expires, or when they reach the size
	                                specified in the <parameter>chunk_size</parameter> parameter. If the
	                                time limit set in the <parameter>time_reap</parameter> parameter
	                                expires, the entire file is closed.</para>
	            </simplesect>
	            <simplesect>
	                <title>compress()</title>
	                <indexterm type="parameter">
	                    <primary>compress()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number between 0-9</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>3</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> Compression level. <parameter>0</parameter> means uncompressed
	                                files, while 1-9 is the compression level used by gzip
	                                (<parameter>9</parameter> means the highest but slowest compression,
	                                    <parameter>3</parameter> is usually a good compromise).</para>
	            </simplesect>
	            <simplesect>
	                    <xi:include href="chunks/option-destination-create-dirs.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect xml:id="destination-logstore-options-digest">
	                <title>digest()</title>
	                <indexterm type="parameter">
	                    <primary>digest()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>string</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>SHA-1</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> Set the digest method to use. The following digest methods are
	                                    available: <parameter>MD2</parameter>,
	                                    <parameter>MD4</parameter>, <parameter>MD5</parameter>,
	                                        <parameter>SHA-0 (SHA)</parameter>,
	                                    <parameter>SHA-1</parameter>, <parameter>RIPEMD-160</parameter>,
	                                        <parameter>SHA-224</parameter>,
	                                    <parameter>SHA-256</parameter>, <parameter>SHA-384</parameter>,
	                                    and <parameter>SHA-512</parameter>. By default, syslog-ng PE
	                                    uses the <parameter>SHA-1</parameter> method.</para>
	                <para>Note that the size of the digest hash must be equal to or
	                                    larger than the key size of the cipher method. For example, to
	                                    use the <parameter>aes-256-cbc</parameter> cipher method, the
	                                    digest method must be at least <parameter>SHA-256</parameter>.
	                                    This option is available in syslog-ng PE 3.1 and later.</para>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chunks/option-destination-dir-group.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chunks/option-destination-dir-owner.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chunks/option-destination-dir-perm.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <title>encrypt_certificate()</title>
	                <indexterm type="parameter">
	                    <primary>encrypt_certificate()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>filename</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>none</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel>Name of a file, that contains an X.509 certificate (and the
	                                public key) in PEM format. The syslog-ng application uses this
	                                certificate to encrypt the logstore files which can be decrypted
	                                using the private key of the certificate.</para>
	            </simplesect>
	            <simplesect xml:id="destination-logstore-options-flags">
	                <xi:include href="chunks/option-destination-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	                <itemizedlist><listitem><para>The <parameter>serialized</parameter> flag instructs the driver to store the log messages in a serialized format. When using the <command>lgstool</command> utility to display messages from the logstore, the messages can be reformatted with a template only if the <parameter>serialized</parameter> flag has been enabled on the logstore.</para></listitem></itemizedlist>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chunks/option-destination-frac-digits.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chunks/option-destination-dir-group.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
	            <simplesect>
	                <title>journal_block_count()</title>
	                <indexterm type="parameter">
	                    <primary>journal_block_count()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number (1-255)</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>4</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                 <para><guilabel>Description:</guilabel> The number of blocks in the journal file. If set to <parameter>0</parameter>, syslog-ng will set it to the default value (<parameter>4</parameter>). The maximal value is <parameter>255</parameter>; if <parameter>journal_block_count()</parameter> is set higher than 255 syslog-ng will use the maximum value.</para>
	                 <note>
	                     <para>By default, journal files are mapped into the memory of the host. To influence the amount of memory addresses used by journal files, see the <link linkend="logstore_option_journal_memory_limit"><parameter>logstore_journal_shmem_threshold()</parameter></link> global option.</para>
	                 </note>
                     <xi:include href="chunks/example-logstore-memory.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <title>journal_block_size()</title>
	                <indexterm type="parameter">
	                    <primary>journal_block_size()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>1048576</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                 <para><guilabel>Description:</guilabel> The size of blocks (in bytes) in the journal file. The size of the block must be a multiple of the page size: if not, &abbrev; automatically increases it to the next multiple of the page size. The maximum size of a journal block is 32MB, the minimum size is 256KB. If the value specified as <parameter>journal_block_size()</parameter> is lower than minimum size or higher than the maximum size, &abbrev; will use the minimum or maximum size, respectively.</para>
	                 <note>
	                     <itemizedlist>
	                         <listitem>
	                             <para>At least one journal block for every logstore file open is mapped into the memory. For details on logstore journals, see <xref linkend="concepts_logstore_journal"/>.</para>
	                         </listitem>
	                         <listitem>
	                             <para>The size of the journal block is not equal with the size of logstore chunks, because the records in the logstore file can be encrypted or compressed.</para>
	                         </listitem>
	                     </itemizedlist>
	                 </note>
                     <xi:include href="chunks/example-logstore-memory.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>

	                        <!-- Currently not implemented for logstore destinations.
	                        <xi:include href="reference_common.xml"
	                            xmlns:xi="http://www.w3.org/2001/XInclude"
	                            xpointer="element(destination_commonoption_log_fifo_size)"/>
	                         -->

	            <simplesect>
	                <xi:include href="reference_common.xml" xpointer="element(destination-file-logstore-common-owner)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="reference_common.xml" xpointer="element(destination-file-logstore-common-perm)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	<!-- FIXME uncomment when the B02983 backlog item is released
	            <simplesect>
	                <xi:include href="chunks/option-destination-suppress.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>       -->
	            <simplesect>
	                <xi:include href="chunks/option-destination-template.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <title>time_reap()</title>
	                <indexterm type="parameter">
	                    <primary>time_reap()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>Use global settings</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <xi:include href="chunks/option-description-destination-file-time-reap.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <title>timestamp_freq()</title>
	                <indexterm type="parameter">
	                    <primary>timestamp_freq()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number in seconds</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>Use global setting.</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> The minimum time that should expire between two timestamping
	                                requests. When syslog-ng closes a chunk, it checks how much time has
	                                expired since the last timestamping request: if it is higher than
	                                the value set in the <parameter>timestamp_freq()</parameter>
	                                parameter, it requests a new timestamp from the authority set in the
	                                    <parameter>timestamp_url()</parameter> parameter.</para>
	            </simplesect>
	            <simplesect>
	                <title>timestamp_policy()</title>
	                <indexterm type="parameter">
	                    <primary>timestamp_policy()</primary>
	                </indexterm>
	                <indexterm>
	                    <primary>timestamping</primary>
	                    <secondary>OID</secondary>
	                </indexterm>
	                <indexterm>
	                    <primary>timestamping</primary>
	                    <secondary>policies</secondary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>string</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry/>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> If the Timestamping Server has timestamping policies configured,
	                                specify the OID of the policy to use with this parameter.
	                                &abbrev; will include this ID in the timestamping requests sent
	                                to the TSA. This option is available in syslog-ng PE 3.1 and
	                            later.</para>
	            </simplesect>
	            <simplesect>
	                <title>timestamp_url()</title>
	                <indexterm type="parameter">
	                    <primary>timestamp_url()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>string</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>Use global setting.</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> The URL of the Timestamping Authority used to request timestamps
	                                to sign logstore chunks. Note that &abbrev; currently supports
	                                only Timestamping Authorities that conform to <emphasis>RFC3161
	                                    Internet X.509 Public Key Infrastructure Time-Stamp
	                                Protocol</emphasis>, other protocols like <emphasis>Microsoft
	                                Authenticode Timestamping</emphasis> are not supported.</para>
	                <indexterm>
	                    <primary>timestamping</primary>
	                    <secondary>Microsoft Authenticode Timestamping</secondary>
	                </indexterm>
	                <indexterm>
	                    <primary>timestamping</primary>
	                    <secondary>RFC3161</secondary>
	                </indexterm>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chunks/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chunks/option-destination-ts-format.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	        </section>
		</section>
        <xi:include href="destination-network.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <section xml:id="configuring_destinations_pipe">
            <title>Sending messages to named pipes</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>pipe()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>pipe()</parameter> driver sends messages to a named pipe like
                    <filename>/dev/xconsole</filename>. </para>
            <para>The pipe driver has a single required parameter, specifying the filename of the
                pipe to open. The filename can include macros. For the list of available optional
                parameters, see <xref linkend="reference_destination_pipe"/>.</para>
            <synopsis>Declaration:
                pipe(filename);</synopsis>
            <warning>
                <para>As of syslog-ng Open Source Edition 3.0.2, pipes are created automatically. In
                    earlier versions, you had to create the pipe using the
                    <command>mkfifo(1)</command> command. </para>
            </warning>
            <example xml:id="example_destination_pipe">
                <title>Using the pipe() driver</title>
                <synopsis>destination d_pipe { pipe("/dev/xconsole"); };</synopsis>
            </example>
            <section xml:id="reference_destination_pipe">
                <title>pipe() destination options</title>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>pipe()</parameter> driver</secondary>
                </indexterm>
                <para>This driver sends messages to a named pipe like
                    <filename>/dev/xconsole</filename>. </para>
                <para>The <parameter>pipe()</parameter> destination has the following options:</para>
                <simplesect>
                    <xi:include href="chunks/option-destination-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-lines.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-timeout.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-frac-digits.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <title>group()</title>
                    <indexterm type="parameter">
                        <primary>group()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>root</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Set the group of the pipe to the one specified.</para>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect condition="pe">
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_freq)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_mode)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
                <simplesect>
                    <title>owner()</title>
                    <indexterm type="parameter">
                        <primary>owner()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>root</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Set the owner of the pipe to the one specified.</para>
                </simplesect>
                <simplesect>
					<xi:include href="chunks/option-destination-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
				</simplesect>
                <simplesect>
                    <title>perm()</title>
                    <indexterm type="parameter">
                        <primary>perm()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>number</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>0600</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel>The permission mask of the pipe. For octal numbers prefix the
                                    number with '0', for example: use 0755 for rwxr-xr-x.</para>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-suppress.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template-escape.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-throttle.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-ts-format.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
            </section>
        </section>
        <section xml:id="configuring_destinations_program">
            <title>Sending messages to external applications</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>program()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>program()</parameter> driver starts an external application or
                script and sends the log messages to its standard input
                (<parameter>stdin</parameter>). </para>
            <para>The <parameter>program()</parameter> driver has a single required parameter,
                specifying a program name to start. The program is executed with the help of the
                current shell, so the command may include both file patterns and I/O redirections.
                For the list of available optional parameters, see <xref
                    linkend="reference_destination_program"/>.</para>
            <synopsis>Declaration:
            program(command_to_run);</synopsis>
            <note><para>The &abbrev; application executes program destinations through the standard system shell. If the system shell is not bash and you experience problems with the program destination, try changing the <filename>/bin/sh</filename> link to <filename>/bin/bash</filename>.</para></note>
            <note>
                <itemizedlist>
                    <listitem>
                        <para>The &abbrev; application automatically restarts the external program if it exits for reliability reasons. However it is not recommended to launch programs for single messages, because if the message rate is high, launching several instances of an application might overload the system, resulting in Denial of Service.</para>
                    </listitem>
                    <listitem>
                        <para>Certain external applications buffer the log messages, which might cause unexpected latency and other problems. For example, if you send the log messages to an external Perl script, Perl uses a line buffer for terminal output and block buffer otherwise. You might want to disable buffering in the external application.</para>
                    </listitem>
                </itemizedlist>
            </note>
            <warning>
                <para>The &abbrev; application must be able to start and restart the external program, and have the necessary permissions to do so. For example, if your host is running AppArmor, you might have to modify your AppArmor configuration to enable &abbrev; to execute external applications.</para>
            </warning>
            <para>Note that the message format does not include the priority and facility values by
                default. To add these values, specify a template for the program destination, as
                shown in the following example.</para>
            <example xml:id="example_destination_program">
                <title>Using the program() destination driver</title>
                <synopsis>destination d_prog { program("/bin/script" template("&lt;${PRI}&gt;${DATE} ${HOST} ${MSG}\n"); ); };</synopsis>
            </example>
            <section xml:id="reference_destination_program">
                <title>program() destination options</title>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>program()</parameter> driver</secondary>
                </indexterm>
                <para>This driver starts an external application or script and sends the log messages to
                    its standard input (<parameter>stdin</parameter>). </para>
                <para>The <parameter>program()</parameter> destination has the following options:</para>
                <simplesect condition="pe">
                    <xi:include href="chunks/option-destination-diskbuffer.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-lines.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-timeout.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-frac-digits.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect condition="pe">
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_freq)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_mode)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-suppress.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template-escape.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-throttle.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-ts-format.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
            </section>
        </section>
        <section xml:id="configuring-destinations-snmp">
            <title>Sending SNMP traps</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>snmp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>SNMP traps</primary>
            </indexterm>
            <para>The <parameter>snmp()</parameter> driver sends SNMP traps using the Simple Network Management Protocol version 2c or version 3. Incoming log messages can be converted to SNMP traps, as the fields of the SNMP messages can be customized using &abbrev; macros.</para>
            <note>
                <para>The <parameter>snmp()</parameter> driver is available in &abbrev; version <phrase condition="pe">4 F1</phrase> and later.</para>
            </note>
            <note>
                <para>The <parameter>snmp</parameter> destination driver currently supports sending SNMP traps only using the UDP transport protocol.</para>
            </note>
            <para>The <parameter>snmp()</parameter> driver requires the <parameter>host()</parameter>, <parameter>trap_obj()</parameter>, and <parameter>snmp_obj()</parameter> options to be set, as well as the <parameter>engine_id()</parameter> option in case the SNMPv3 protocol is used. For the list of available optional parameters, see <xref linkend="reference-destination-snmp"/>.</para>
            <synopsis>Declaration:
                @module snmp
                destination d_snmp {snmp(host() trap_obj() snmp_obj() ...);};</synopsis>
            <indexterm>
                <primary>@module</primary>
            </indexterm>
            <indexterm>
                <primary>@module snmp</primary>
            </indexterm>
            <indexterm>
                <primary>loading modules</primary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary>loading the snmp module</secondary>
            </indexterm>
            <para>By default, &abbrev; does not load the <parameter>snmp()</parameter> module because most configurations do not use it and it requires significant resources. If you want to use the <parameter>snmp()</parameter> destination, include the following line in your &abbrev; configuration file before defining the destination to load the <parameter>snmp()</parameter> module. This line is needed only once, even if you use multiple SNMP destinations. For details on modules, see <xref linkend="modules-loading"/>.</para>
            <synopsis>@module snmp</synopsis>
            <warning>
                <para>If &abbrev; cannot resolve the destination hostname during startup, it will try to resolve the hostname again when the next message to be sent as an SNMP trap is received. However, if this name resolution fails, the trap will be dropped.</para>
            </warning>
            <note>
                <para>The <parameter>snmp()</parameter> destination driver does not generate MARK signals itself, but can receive and forward MARK signals.</para>
            </note>
            <example xml:id="example-destination-snmp">
                <title>Using the snmp() destination driver</title>
                <para>The following example defines an SNMP destination that uses the SNMPv2c protocol.</para>
                <synopsis>destination d_snmpv2c{
    snmp(
        version('v2c')
        host('192.168.1.1')
        trap_obj('.1.3.6.1.6.3.1.1.4.1.0', 'Objectid', '.1.3.6.1.4.1.18372.3.1.1.1.2.1')
        snmp_obj('.1.3.6.1.4.1.18372.3.1.1.1.1.1.0', 'Octetstring', 'Test SNMP trap')
        snmp_obj('.1.3.6.1.4.1.18372.3.1.1.1.1.2.0', 'Octetstring', 'admin')
        snmp_obj('.1.3.6.1.4.1.18372.3.1.1.1.1.3.0', 'Ipaddress', '192.168.1.1')
        );
};</synopsis>
                <para>The following example defines an SNMP destination that uses the SNMPv3 protocol and uses macros to fill the values of the SNMP objects.</para>
                <synopsis>destination d_snmpv3{
    snmp(
        version('v3')
        host('192.168.1.1')
        port(162)
        engine_id('0xdeadbeefde')
        auth_username('myusername')
        auth_password('password')
        enc_algorithm('AES')
        enc_password('password')
        trap_obj('.1.3.6.1.6.3.1.1.4.1.0', 'Objectid', '.1.3.6.1.4.1.18372.3.1.1.1.2.1')
        snmp_obj('.1.3.6.1.4.1.18372.3.1.1.1.1.1', 'Octetstring', '${MESSAGE}')
        snmp_obj('.1.3.6.1.4.1.18372.3.1.1.1.1.2', 'Octetstring', 'admin')
        snmp_obj('.1.3.6.1.4.1.18372.3.1.1.1.1.3', 'Ipaddress', '${SOURCEIP}')
        );
};</synopsis>
            </example>
            <section xml:id="cisco-syslog-snmp">
                <title>Converting Cisco syslog messages to "clogMessageGenerated" SNMP traps</title>
                <indexterm>
                    <primary>clogMessageGenerated</primary>
                </indexterm>
                <indexterm>
                    <primary>Cisco SNMP trap</primary>
                </indexterm>
                <indexterm>
                    <primary>receiving Cisco syslog messages</primary>
                </indexterm>
                <para>Starting with version <phrase condition="pe">4 F1</phrase>, &abbrev; can convert the syslog messages sent by Cisco devices to Cisco-specific SNMP traps defined by the CISCO-SYSLOG-MIB (<parameter>enterprises.cisco.ciscoMgmt.ciscoCiscoMIB</parameter>) is also supported (such traps are also referred to as <parameter>clogMessageGenerated</parameter> notifications). That way, the incoming log messages can be forwarded to devices used to process and analyze Cisco-specific SNMP traps. For this to work correctly, the following requirements must be met:</para>
                <itemizedlist>
                    <listitem>
                        <para>The snmp module of &abbrev; must be loaded, that is, the &abbrev; configuration file must include the following line:</para>
                        <synopsis>@module snmp</synopsis>
                    </listitem>
                    <listitem>
                        <para>The syslog-ng Source Configuration Library (SCL) must be included in the &abbrev; configuration file:</para>
                        <synopsis>@include "scl.conf"</synopsis>
                    </listitem>
                    <listitem>
                        <para>The pattern database described in <xref linkend="cisco-snmp-patterndb"/> must be used to parse the incoming log messages.</para>
                    </listitem>
                </itemizedlist>
                <para>To accomplish this, &abbrev; has to use a special pattern database to parse the Cisco-specific syslog messages, because these messages do not comply with the standard syslog formats.</para>
                <para>For details on the Cisco-specific SNMP trap format, see <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://tools.cisco.com/Support/SNMP/do/BrowseMIB.do?local=en&amp;step=2&amp;mibName=CISCO-SYSLOG-MIB">CISCO-SYSLOG-MIB</link> on the Cisco website.</para>
                <section xml:id="cisco-snmp-patterndb">
                    <title>Parsing Cisco-specific message fields with patterndb</title>
                    <para>The <parameter>${PROGRAM}</parameter> part of the syslog messages sent by Cisco devices contain not only the program name, but other important protocol information part as well. The <parameter>${PROGRAM}</parameter> of these messages contains the Facility, Severity, and the Mnemonic (the Cisco name) of the message. The following pattern database parses these values and makes them available as the <parameter>.cisco.Facility, .cisco.Severity</parameter>, and <parameter>.cisco.MsgName</parameter>, respectively. The actual log message is available as <parameter>.cisco.MsgText</parameter>.</para>
                    <synopsis>&lt;patterndb version="4" pub_date="2011-05-03"&gt;
  &lt;ruleset name="cisco snmp ruleset1" xml:id="480de478-d4a6-4a7f-bea4-0c0245d361e3"&gt;
    &lt;description&gt;Pattern for Cisco messages having BSD timestamps, for example: Jul 01 2010 00:32:59: %SYS-5-CONFIG_I: Configured from console by console&lt;/description&gt;
    &lt;url&gt;http://balabit.com&lt;/url&gt;
      &lt;pattern&gt;%@ESTRING:.cisco.Facility:-@@ESTRING:.cisco.Severity:-@@ANYSTRING:.cisco.MsgName@&lt;/pattern&gt;
        &lt;rules&gt;
          &lt;rule xml:id="09944c71-95eb-4bc0-8575-936931d85713" provider="balabit" class="system"&gt;
            &lt;patterns&gt;
              &lt;pattern&gt; @ANYSTRING:.cisco.MsgText@&lt;/pattern&gt;
              &lt;/patterns&gt;
          &lt;/rule&gt;
        &lt;/rules&gt;
  &lt;/ruleset&gt;
  &lt;ruleset name="cisco snmp ruleset2" xml:id="480de478-d4a6-4a7f-bea4-0c0245d361e3"&gt;
    &lt;description&gt;Pattern for Cisco messages having cisco-specific timestamps, for example: 18: Jan 22 10:45:44.543: %SYS-5-CONFIG_I: Configured from console by console&lt;/description&gt;
    &lt;url&gt;http://balabit.com&lt;/url&gt;
        &lt;rules&gt;
          &lt;rule xml:id="09944c71-95eb-4bc0-8575-936931d85714" provider="balabit" class="system"&gt;
            &lt;patterns&gt;
              &lt;pattern&gt;%@ESTRING:.cisco.Facility:-@@ESTRING:.cisco.Severity:-@@ESTRING:.cisco.MsgName::@ @ANYSTRING:.cisco.MsgText@&lt;/pattern&gt;
             &lt;/patterns&gt;
          &lt;/rule&gt;
        &lt;/rules&gt;
  &lt;/ruleset&gt;
&lt;/patterndb&gt;</synopsis>
                </section>
                <section xml:id="cisco-clogMessageGenerated-snmp">
                    <title>Sending clogMessageGenerated SNMP traps</title>
                    <para>To send out clogMessageGenerated SNMP traps, use the <parameter>cisco_snmp()</parameter> destination driver. The <parameter>cisco_snmp()</parameter> destination is actually a modified version of the <parameter>snmp()</parameter> destination driver.</para>
                    <indexterm>
                        <primary>clogMessageGenerated</primary>
                    </indexterm>
                    <indexterm>
                        <primary>CISCO-SYSLOG-MIB</primary>
                    </indexterm>
                    <indexterm>
                        <primary>destination drivers</primary>
                        <secondary><parameter>cisco_snmp()</parameter> driver</secondary>
                    </indexterm>
                    <note>
                        <para>The <parameter>cisco_snmp()</parameter> driver is actually an element of the syslog-ng <link linkend="config-blocks">Source Configuration Library (SCL)</link>, a reusable configuration snippet tailored to handle process accounting logs. For details on using or writing SCLs, see <xref linkend="config-blocks"/>.</para>
                    </note>
                    <para>The <parameter>cisco_snmp()</parameter> driver has the same requirements and options as the <parameter>snmp()</parameter> destination driver, but automatically fills the clogMessageGenerated-specific fields with the data received from parsing the Cisco-specific syslog messages using the pattern database. For details on the , see the <filename>&lt;INSTALLDIR&gt;/ share/include/scl/snmp/plugin.conf</filename> file.</para>
                    <synopsis>Declaration:
destination d_cisco_snmp {cisco_snmp(host(&lt;hostname&gt;));};</synopsis>
                    <example>
                        <title>Defining a Cisco-specific SNMP destination</title>
                        <para>The following example defines an SNMP destination that sends out clogMessageGenerated messages using the SNMPv3 protocol.</para>
                        <synopsis>destination d_cisco_snmp {cisco_snmp(host("192.168.1.1")
    version("v3")
    engine_id("'0xdeadbeefde'")
    auth_username('myusername')
    auth_password('password')
    enc_password('password'));};
</synopsis>
                    </example>
                    <!--
                    <para>The <parameter>cisco_snmp()</parameter> SCL is defined as follows:</para>
                    <synopsis>block destination cisco_snmp(
    host()
    port(162)
    version("v2c")
    community("public")
    auth_username()
    auth_algorithm("SHA1")
    auth_password()
    enc_algorithm("DES")
    enc_password()
    engine_id()
    transport("UDP")
    clogHistMsgName('${.cisco.MsgName}')
    clogHistMsgText('$(if ("${.cisco.MsgText}" == "") $MESSAGE ${.cisco.MsgText})')
    clogHistMsgFacility('$(if ("${.cisco.Facility}" == "") $FACILITY ${.cisco.Facility})')
    clogHistMsgSeverity('$(if ("${.cisco.Severity}" == "") $(+ $LEVEL_NUM 1) ${.cisco.Severity}) ')
    clogHistTimeStamp('$SYSUPTIME'))
    {
        snmp(
            host(`host`)
            port(`port`)
            version(`version`)
            community(`community`)
            auth_username(`auth_username`)
            auth_algorithm(`auth_algorithm`)
            auth_password(`auth_password`)
            enc_algorithm(`auth_password`)
            enc_password(`enc_password`)
            engine_id(`engine_id`)
            transport(`transport`)
            trap_obj('1.3.6.1.6.3.1.1.4.1.0', 'Objectid', '1.3.6.1.4.1.9.9.41.2.0.1')
            snmp_obj('1.3.6.1.4.1.9.9.41.1.2.3.1.4.0', 'Octetstring', 'clogHistMsgName')
            snmp_obj('1.3.6.1.4.1.9.9.41.1.2.3.1.5.0', 'Octetstring', 'clogHistMsgText')
            snmp_obj('1.3.6.1.4.1.9.9.41.1.2.3.1.2.0', 'Octetstring', 'clogHistMsgFacility')
            snmp_obj('1.3.6.1.4.1.9.9.41.1.2.3.1.3.0', 'Integer', 'clogHistMsgSeverity')
            snmp_obj('1.3.6.1.4.1.9.9.41.1.2.3.1.6.0', 'Timeticks', 'clogHistTimeStamp')
            );
    };</synopsis>-->
                </section>
            </section>
            <section xml:id="reference-destination-snmp">
                <title>snmp() destination options</title>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>snmp()</parameter> driver</secondary>
                </indexterm>
                <para>This driver sends SNMP traps using the SNMP v2c or v3 protocol.</para>
                <para>The <parameter>snmp()</parameter> destination has the following options:</para>
                <simplesect xml:id="snmp-destination-option-auth-algorithm">
                    <title>auth_algorithm()</title>
                        <indexterm type="parameter">
                            <primary>auth_algorithm()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>MD5|md5|SHA|sha</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>SHA</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The authentication method to use. Lowercase values (for example, <parameter>sha</parameter>) can be used as well.</para>
                    <para>This option is used with the SNMPv3 protocol.</para>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-auth-password">
                    <title>auth_password()</title>
                        <indexterm type="parameter">
                            <primary>auth_password()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>empty string</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The password used for authentication. If the <parameter>auth_username()</parameter> option is set but the <parameter>auth_password()</parameter> is empty, &abbrev; will try to authenticate with an empty password.</para>
                    <para>This option is used with the SNMPv3 protocol.</para>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-auth-username">
                    <title>auth_username()</title>
                        <indexterm type="parameter">
                            <primary>auth_username()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry></entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The username used to authenticate on the SNMP server. If this parameter is set, &abbrev; will try to authenticate on the SNMP server.</para>
                    <para>This option is used with the SNMPv3 protocol.</para>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-community">
                    <title>community()</title>
                        <indexterm type="parameter">
                            <primary>community()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>public</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The community string used for SNMPv2c authentication.</para>
                    <para>This option is used with the SNMPv2c protocol.</para>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-enc_algorithm">
                    <title>enc_algorithm()</title>
                        <indexterm type="parameter">
                            <primary>enc_algorithm()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>AES|aes|DES|des</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>DES</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The encryption method used to encrypt the SNMP traffic. Lowercase values (for example, <parameter>aes</parameter>) can be used as well.</para>
                    <para>This option is used with the SNMPv3 protocol.</para>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-enc_password">
                    <title>enc_password()</title>
                        <indexterm type="parameter">
                            <primary>enc_password()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry></entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The password used for the encryption. Encryption is used only if the <parameter>enc_password()</parameter> is not empty.</para>
                    <para>This option is used with the SNMPv3 protocol.</para>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-engine-id">
                    <title>engine_id()</title>
                        <indexterm type="parameter">
                            <primary>engine_id()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>hexadecimal number</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry></entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The engine ID is a hexadecimal number at least 10 digits long, starting with <parameter>0x</parameter>. For example <parameter>0xABABABABAB</parameter>.</para>
                    <para>This option is a required parameter when using the SNMPv3 protocol.</para>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-host">
                    <title>host()</title>
                    <indexterm type="parameter">
                        <primary>host()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>hostname or IP address</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>n/a</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Hostname of the SNMP server.</para>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect condition="pe">
                    <xi:include href="reference_common.xml" xpointer="element(diskbuffer_option_log_disk_fifo_size)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-port">
                    <title>port()</title>
                    <indexterm type="parameter">
                        <primary>port()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>number</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>162</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The port number to connect to.</para>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-snmp-obj">
                    <title>snmp_obj()</title>
                        <indexterm type="parameter">
                            <primary>snmp_obj()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>&lt;oid_of_the_object&gt;, &lt;type_of_the_object&gt;, &lt;value_of_the_object&gt;</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry></entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The <parameter>snmp_obj()</parameter> option can be used to create custom SNMP trap elements. To create a trap element, specify the OID, type, and value of the element in the <parameter>snmp_obj()</parameter> option. To send SNMP traps, at least one <parameter>snmp_obj()</parameter> option must be defined. The <parameter>snmp_obj()</parameter> option requires the following parameters. Note that &abbrev; does not validate the values of these elements.</para>
                    <itemizedlist>
                        <listitem>
                            <para><parameter>&lt;oid_of_the_object&gt;</parameter>: The object id of the SNMP object, for example, <parameter>.1.3.6.1.4.1.18372.3.1.1.1.1.1</parameter>.</para>
                        </listitem>
                        <listitem>
                            <para><parameter>&lt;type_of_the_object&gt;</parameter>: The type of the object specified as an ASN.1 primitive. One of: <parameter>Integer, Timeticks, Octetstring, Counter32, Ipaddress, Objectid</parameter>. The type names are not case sensitive.</para>
                        </listitem>
                        <listitem>
                            <para><parameter>&lt;value_of_the_object&gt;</parameter>: The value of the object as a string. The macros of &abbrev; can be used to set these values, making it possible to transfer the content and other metadata from the the syslog message to the SNMP trap.   Note that if the value of an <parameter>Integer, Counter32</parameter> or <parameter>Timeticks</parameter> object is not a number (for example, is an empty string or other not-number string), &abbrev; will automatically replace the value with 0. The values of other types of objects are not validated.</para>
                        </listitem>
                    </itemizedlist>
                    <example>
                        <title>Defining SNMP objects</title>
                        <para>The following are SNMP object definitions:</para>
                        <synopsis>snmp_obj('.1.3.6.1.4.1.18372.3.1.1.1.1.3', 'Ipaddress', '192.168.1.1')</synopsis>
                        <synopsis>snmp_obj('.1.3.6.1.4.1.18372.3.1.1.1.1.2', 'Octetstring', '${MESSAGE}')</synopsis>
                    </example>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <!--<simplesect xml:id="snmp-destination-option-transport">
                    <title>transport()</title>
                        <indexterm type="parameter">
                            <primary>transport()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>UDP|TCP</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>UDP</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The transport-layer protocol used to send the SNMP messages.</para>
                    <para>This option is used with the SNMPv3 protocol.</para>
                </simplesect>-->
                <simplesect xml:id="snmp-destination-option-trap-obj">
                    <title>trap_obj()</title>
                        <indexterm type="parameter">
                            <primary>trap_obj()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>&lt;oid_of_the_object&gt;, "Objectid", &lt;value_of_the_object&gt;</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry></entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The <parameter>trap_obj()</parameter> is a specialized version of the <parameter>snmp_obj()</parameter> option that is used to identify the SNMP trap object. The type of the trap object is always <parameter>Objectid</parameter>. The <parameter>&lt;oid_of_the_object&gt;</parameter> and the <parameter>&lt;value_of_the_object&gt;</parameter> parameters are identical to the respective parameters of the <parameter>snmp_obj()</parameter> option. For details on these parameters, see <xref linkend="snmp-destination-option-snmp-obj"/>.</para>
                    <note>
                        <para>Using the <parameter>trap_obj()</parameter> object is equivalent to using the <parameter>snmp_obj()</parameter> with the <parameter>Objectid</parameter> type.</para>
                    </note>
                </simplesect>
                <simplesect xml:id="snmp-destination-option-version">
                    <title>version()</title>
                        <indexterm type="parameter">
                            <primary>version()</primary>
                        </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                            <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>v2c|v3</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>v2c</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Specifies which version of the SNMP protocol to use.</para>
                    <note>
                        <para>The &abbrev; application will accept any valid option for the <parameter>snmp()</parameter> destination, but will only use the ones relevant to the selected protocol version, any other option will be ignored. For example, if the <parameter>version("v2c") engine_id("0xABABABABAB") community("mycommunity")</parameter> options are set, &abbrev; will accept every option, but process only the <parameter>community()</parameter> option, because <parameter>engine_id()</parameter> applies only to SNMPv3.</para>
                    </note>
                </simplesect>
            </section>
        </section>
        <section xml:id="configuring_destinations_sql">
            <title>Storing messages in an SQL database</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>sql()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary>database driver</secondary>
            </indexterm>
            <indexterm>
                <primary>sql destinations</primary>
            </indexterm>
            <para>The <parameter>sql()</parameter> driver sends messages into an SQL database.
                Currently the Microsoft SQL (MSSQL), MySQL, Oracle, PostgreSQL, and SQLite databases
                are supported.</para>
            <note condition="pe">
                <para>In order to use the <parameter>sql()</parameter> destination, syslog-ng
                    Premium Edition must run in server mode. Typically, only the central syslog-ng
                    Premium Edition server uses the <parameter>sql()</parameter>
                    destination. For details on the server mode, see <xref linkend="concepts_server_mode"/>.
                </para>
            </note>
            <synopsis>Declaration:
    sql(database_type host_parameters database_parameters [options]);</synopsis>
			<para>The <parameter>sql()</parameter> driver has the following required parameters: <link linkend="sql_option_type"><parameter>type()</parameter></link>, <link linkend="sql_option_database"><parameter>database()</parameter></link>, <link linkend="sql_option_table"><parameter>table</parameter></link>, <link linkend="sql_option_columns"><parameter>columns()</parameter></link>, and <link linkend="sql_option_values"><parameter>values</parameter></link>.</para>
            <warning>
                <para>The syslog-ng application requires read and write access to the SQL table,
                    otherwise it cannot verify that the destination table exists.</para>
                <para>Currently the syslog-ng application has default schemas for the different
                    databases and uses these defaults if the database schema (for example columns and
                    column types) is not defined in the configuration file. However, these schemas
                    will be deprecated and specifying the exact database schema will be required in
                    later versions of syslog-ng. </para>
            </warning>
            <note>
                <para>In addition to the standard syslog-ng packages, the
                    <parameter>sql()</parameter> destination requires database-specific packages to
                    be installed. These packages are automatically installed by the binary syslog-ng
                    installer.</para>
                <para>The <parameter>sql()</parameter> driver is currently not available for every
                    platform that is supported by syslog-ng. For a list of platforms that support
                    the <parameter>sql()</parameter> driver, <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://www.balabit.com/network-security/syslog-ng/central-syslog-server/specifications">visit this link</link>.</para>
            </note>
            <para>The <parameter>table</parameter> and <parameter>value</parameter> parameters can
                include macros to create tables and columns dynamically (for details, see <xref
                    linkend="reference_macros"/>).</para>
            <warning>
                <para>When using macros in table names, note that some databases limit the maximum
                    allowed length of table names. Consult the documentation of the database for
                    details.</para>
            </warning>
            <para>Inserting the records into the database is performed by a separate thread. The
                syslog-ng application automatically performs the escaping required to insert the
                messages into the database. </para>
            <example xml:id="example_destination_sql">
                <title>Using the sql() driver</title>
                <indexterm>
                    <primary>destinations</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <indexterm>
                    <primary>PostgreSQL</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <para>The following example sends the log messages into a PostgreSQL database
                    running on the <parameter>logserver</parameter> host. The messages are inserted
                    into the <parameter>logs</parameter> database, the name of the table includes
                    the exact date and the name of the host sending the messages. The syslog-ng
                    application automatically creates the required tables and columns, if the user
                    account used to connect to the database has the required privileges.</para>
                <synopsis>destination d_sql {
  sql(type(pgsql)
  host("logserver") username("syslog-ng") password("password")
  database("logs")
  table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
  columns("datetime", "host", "program", "pid", "message")
  values("{$R_DATE}", "${HOST}", "${PROGRAM}", "${PID}", "${MSGONLY}")
  indexes("datetime", "host", "program", "pid", "message"));
  };</synopsis>
                <para>The following example specifies the type of the database columns as well:</para>
                <synopsis>destination d_sql {
  sql(type(pgsql)
  host("logserver") username("syslog-ng") password("password")
  database("logs")
  table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
  columns("datetime varchar(16)", "host varchar(32)", "program  varchar(20)", "pid varchar(8)", "message  varchar(200)")
  values("${R_DATE}", "${HOST}", "${PROGRAM}", "${PID}", "${MSGONLY}")
  indexes("datetime", "host", "program", "pid", "message"));
};</synopsis>
            </example>
            <section xml:id="configuring_sql_oracle">
                <title>Using the sql() driver with an Oracle database</title>
                <indexterm>
                    <primary>Oracle</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <para>The Oracle sql destination has some special aspects that are important to
                    note.</para>
                <itemizedlist>
                    <listitem>
                        <para>The hostname of the database server is set in the
                                <filename>tnsnames.ora</filename> file, not in the
                            <parameter>host</parameter> parameter of the
                            <parameter>sql()</parameter> destination.</para>
                        <para>If the <filename>tnsnames.ora</filename> file is not located in the /etc directory (or in the /var/opt/oracle directory on Solaris), set the following Oracle-related environment variables, so &abbrev; will find the file: <parameter>ORACLE_BASE</parameter>, <parameter>ORACLE_HOME</parameter>, and <parameter>ORACLE_SID</parameter>. For details, see the documentation of the Oracle Instant Client.</para>
                    </listitem>
                    <listitem>
                        <para>You cannot use the same <parameter>database()</parameter> settings in more than one destination, because the <parameter>database()</parameter> option of the SQL driver is just a reference to the connection string of the <filename>tnsnames.ora</filename> file.  To overcome this problem, you can duplicate the connections in the <filename>tnsnames.ora</filename> file under a different name, and use a different table in each Oracle destination in &abbrev;.</para>
                    </listitem>
                    <listitem>
                        <para>As certain database versions limit the maximum length of table names,
                            macros in the table names should be used with care.</para>
                    </listitem>
                    <listitem>
                        <!-- FIXME kiszedni, ha megjavul -->
                        <para>In the current version of &abbrev;, the types of database columns
                            must be explicitly set for the Oracle destination. The column used to
                            store the text part of the syslog messages should be able to store
                            messages as long as the longest message permitted by syslog-ng,
                            therefore it is usually recommended to use the
                            <parameter>varchar2</parameter> or <parameter>clob</parameter> column
                            type. (The maximum length of the messages can be set using the
                                <parameter>log_msg_size()</parameter> option.) For details, see the following
                            example.</para>
                    </listitem>
                    <listitem>
                        <para>The Oracle Instant Client used by &abbrev; supports only the following character sets:</para>
                        <itemizedlist>
                            <listitem>
                                <para>Single-byte character sets: <parameter>US7ASCII, WE8DEC, WE8MSWIN1252, and WE8ISO8859P1</parameter></para>
                            </listitem>
                            <listitem>
                                <para>Unicode character sets: <parameter>UTF8, AL16UTF16, and AL32UTF8</parameter></para>
                            </listitem>
                        </itemizedlist>
                    </listitem>
                </itemizedlist>
                <example xml:id="example_destination_sql_oracle">
                    <title>Using the sql() driver with an Oracle database</title>
                    <indexterm>
                        <primary>destinations</primary>
                        <secondary>sql() configuration</secondary>
                    </indexterm>
                    <indexterm>
                        <primary>Oracle</primary>
                        <secondary>sql() configuration</secondary>
                    </indexterm>
                    <para>The following example sends the log messages into an Oracle database running
                        on the <parameter>logserver</parameter> host, which must be set in the
                        <filename>/etc/tnsnames.ora</filename> file. The messages are inserted into
                        the <parameter>LOGS</parameter> database, the name of the table includes the
                        exact date when the messages were sent. The syslog-ng application automatically
                        creates the required tables and columns, if the user account used to connect to
                        the database has the required privileges.</para>
                    <synopsis>destination d_sql {
  sql(type(oracle)
  username("syslog-ng") password("password")
  database("LOGS")
  table("msgs_${R_YEAR}${R_MONTH}${R_DAY}")
  columns("datetime varchar(16)", "host varchar(32)", "program varchar(32)", "pid varchar(8)", "message varchar2")
  values("${R_DATE}", "${HOST}", "${PROGRAM}", "${PID}", "${MSGONLY}")
  indexes("datetime", "host", "program", "pid", "message"));
  };</synopsis>
                    <para>The Oracle Instant Client retrieves the address of the database server from
                        the <filename>/etc/tnsnames.ora</filename> file. Edit or create this file as
                        needed for your configuration. A sample is provided below.</para>
                    <synopsis>LOGS =
(DESCRIPTION =
(ADDRESS_LIST =
(ADDRESS = (PROTOCOL = TCP)
(HOST = logserver)
(PORT = 1521))
)
(CONNECT_DATA =
(SERVICE_NAME = EXAMPLE.SERVICE)
)
)</synopsis>
                </example>
            </section>
            <section xml:id="configuring_sql_mssql">
                <title>Using the sql() driver with a Microsoft SQL database</title>
                <indexterm>
                    <primary>Microsoft SQL</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <indexterm>
                    <primary>MSSQL</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <para>The <parameter>mssql</parameter> database driver can access Microsoft SQL
                    (MSSQL) destinations. This driver has some special aspects that are important to
                    note.</para>
                <itemizedlist>
                    <listitem>
                        <para>The date format used by the MSSQL database must be explicitly set in
                            the <filename>/etc/locales.conf</filename> file of the syslog-ng server.
                            For details, see the following example.</para>
                    </listitem>
                    <listitem>
                        <para>As certain database versions limit the maximum length of table names,
                            macros in the table names should be used with care.</para>
                    </listitem>
                    <listitem>
                        <para>In the current version of &abbrev;, the types of database columns
                            must be explicitly set for the MSSQL destination.</para>
                        <warning>
                            <xi:include href="reference_common.xml" xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="element(destination-sql-mssql-columntype)">
        <xi:fallback>
            <para><emphasis>FIXME: MISSING XINCLUDE CONTENT</emphasis></para>
        </xi:fallback>
    </xi:include>
                        </warning>
                    </listitem>
                    <listitem>
                        <para>The column used to
                            store the text part of the syslog messages should be able to store
                            messages as long as the longest message permitted by syslog-ng. The
                                <parameter>varchar</parameter> column type can store maximum 4096
                            bytes-long messages. The maximum length of the messages can be set using
                            the <parameter>log_msg_size()</parameter> option. For details, see the following example.</para>
                    </listitem>
                    <listitem>
                        <para>Remote access for SQL users must be explicitly enabled on the
                            Microsoft Windows host running the Microsoft SQL Server. For details, see <xref
                                linkend="configure_mssql_server"/>.</para>
                    </listitem>
                </itemizedlist>
                <example xml:id="example_destination_sql_mssql">
                    <title>Using the sql() driver with an MSSQL database</title>
                    <indexterm>
                        <primary>destinations</primary>
                        <secondary>sql() configuration</secondary>
                    </indexterm>
                    <indexterm>
                        <primary>MSSQL</primary>
                        <secondary>sql() configuration</secondary>
                    </indexterm>
                    <para>The following example sends the log messages into an MSSQL database running on
                        the <parameter>logserver</parameter> host. The messages are inserted into the
                        <parameter>syslogng</parameter> database, the name of the table includes the
                        exact date when the messages were sent. The syslog-ng application automatically
                        creates the required tables and columns, if the user account used to connect to
                        the database has the required privileges.</para>
                    <synopsis>destination d_mssql {
sql(type(mssql) host("logserver") port("1433")
  username("syslogng") password("syslogng") database("syslogng")
  table("msgs_${R_YEAR}${R_MONTH}${R_DAY}")columns("datetime varchar(16)", "host varchar(32)",
  "program varchar(32)", "pid varchar(8)", "message varchar(4096)")
  values("${R_DATE}", "${HOST}", "${PROGRAM}", "${PID}", "${MSGONLY}")
  indexes("datetime", "host", "program", "pid"));
  };</synopsis>
                    <para>The date format used by the MSSQL database must be explicitly set in the
                        <filename>/etc/locales.conf</filename> file of the syslog-ng server. Edit or
                        create this file as needed for your configuration. A sample is provided below.</para>
                    <synopsis>[default]
date = "%Y-%m-%d %H:%M:%S"</synopsis>
                </example>
            </section>
             <section xml:id="sql-interactions-syslog-ng">
                <title>The way syslog-ng interacts with the database</title>
                <formalpara>
                    <title>Used SQL operations by syslog-ng</title>
                    <para/>
                </formalpara>
                <para><emphasis>Create table:</emphasis></para>
                <itemizedlist>
                    <listitem><para>If the given table does not exist, syslog-ng tries to create it with the given column types.</para></listitem>
                    <listitem><para>The &abbrev; application automatically creates the required tables and columns, if the user account used to connect to the database has the required privileges.</para></listitem>
                    <listitem><para>If syslog-ng cannot create or alter a table, it tries to do it again when reach the next time_reopen.</para></listitem>
                </itemizedlist>
                <para><emphasis>Alter table:</emphasis></para>
                <itemizedlist>
                    <listitem><para>If the table structure is different from given structure in an existing table, syslog-ng tries to add columns in this table but never will delete or modify an existing column.</para></listitem>
                    <listitem><para>If &abbrev; cannot create or alter a table, it tries to do it again when reach the next time_reopen.</para></listitem>
                    <listitem><para>The &abbrev; application requires read and write access to the SQL table, otherwise it cannot verify that the destination table exists.</para></listitem>
                </itemizedlist>
                <para><emphasis>Insert table:</emphasis></para>
                <itemizedlist>
                    <listitem><para>Insert new records in a table.</para></listitem>
                    <listitem><para>Inserting the records into the database is performed by a separate thread.</para></listitem>
                    <listitem><para>The &abbrev; application automatically performs the escaping required to insert the messages into the database.</para></listitem>
                    <listitem><para>If insert returns with error, syslog-ng tries to insert the message +two times by default, then drops it. Retrying time is the value of time_reopen().</para></listitem>
                </itemizedlist>
                <formalpara>
                    <title>Encoding</title>
                    <para/>
                </formalpara>
                <para>The &abbrev; application uses UTF-8 by default when writes logs into database.</para>
                <formalpara>
                    <title>Start/stop and reload</title>
                    <para/>
                </formalpara>
                <para><emphasis>Start:</emphasis></para>
                <itemizedlist>
                    <listitem><para>The &abbrev; application will connect to database automatically after starting regardless existing incoming messages.</para></listitem>
                </itemizedlist>
                <para><emphasis>Stop:</emphasis></para>
                <itemizedlist>
                    <listitem><para>The &abbrev; application will close the connection to database before shutting down.</para></listitem>
                </itemizedlist>
                <para><emphasis>Possibility of losing logs:</emphasis></para>
                <itemizedlist>
                    <listitem><para>The &abbrev; application cannot lose logs during shutting down if disk buffer was given and it is not full yet.</para></listitem>
                    <listitem><para>The &abbrev; application cannot lose logs during shutting down if disk buffer was not given.</para></listitem>
                </itemizedlist>
                <para><emphasis>Reload:</emphasis></para>
                <itemizedlist>
                    <listitem><para>The &abbrev; application will close the connection to database if it received SIGHUP signal (reload).</para></listitem>
                    <listitem><para>It will reconnect to the database when it tries to send a new message to this database again.</para></listitem>
                </itemizedlist>
                <formalpara>
                    <title>Macros:</title>
                    <para/>
                </formalpara>
                <para>The value of ${SEQNUM} macro will be overrided by sql driver regardless of local or relayed incoming message.</para>
                <para>It will be grown continously.</para>
            </section>
            <section>
                <title>MySQL-specific interaction methods</title>
                <para>To specify the socket to use, set and export the <parameter>MYSQL_UNIX_PORT</parameter> environment variable, for example <parameter>MYSQL_UNIX_PORT=/var/lib/mysql/mysql.sock; export MYSQL_UNIX_PORT</parameter>.</para>
            </section>
            <section>
                <title>MsSQL-specific interaction methods</title>
                <para>In SQL Server 2005 this restriction is lifted - kind of. The total length of all key columns in an index cannot exceed 900 bytes.</para>
                <para>If you are using <parameter>null()</parameter> in your configuration, be sure that the columns allow <parameter>NULL</parameter> to insert. Give the column as the following example: <parameter>"datetime varchar(16) NULL"</parameter>.</para>
                <para>The date format used by the MSSQL database must be explicitly set in the <filename>/etc/locales.conf</filename> file of the syslog-ng server. <parameter>[default] date = "%Y-%m-%d %H:%M:%S"</parameter>.</para>
            </section>
            <section xml:id="sql-destination-supported-platforms">
                <title>Supported SQL destinations by platform</title>
                <indexterm>
                    <primary>supported sql destinations</primary>
                </indexterm>
                <table xml:id="table-supported-sql-destination-types">
                    <title>Supported SQL destinations by platform</title>
                    <tgroup cols="6">
                        <thead>
                            <row>
                                <entry>Platform \ Database</entry>
                                <entry>MsSQL</entry>
                                <entry>MySQL</entry>
                                <entry>PgSQL</entry>
                                <entry>SQLite</entry>
                                <entry>Oracle</entry>
                            </row>
                        </thead>
                        <tbody>
                            <row>
                                <entry>AIX</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>Debian etch, Debian lenny, openSUSE 10-11, SLES 10-11, Red Hat ES 4-6 (linux_glibc236)</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                            </row>
                            <row>
                                <entry>Debian sarge and RHEL 3 on x86_64 (linux_glibc232)</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>FreeBSD 6.1</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>FreeBSD 7.1</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>FreeBSD 8.0</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>HP-UX 11 on PA-RISC</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>HP-UX 11v2_on IA64</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>X</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                            </row>
                            <row>
                                <entry>RHEL 2 and 3 on X86 (linux_glibc213)</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>Solaris 8</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>Solaris 9_on sparc</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>X</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                            </row>
                            <row>
                                <entry>Solaris 9 on X86</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                            </row>
                            <row>
                                <entry>Solaris 10 on sparc</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                            </row>
                            <row>
                                <entry>Solaris 10 on X86 64</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                                <entry>X</entry>
                                <entry>✔</entry>
                                <entry>✔</entry>
                            </row>
                            <row>
                                <entry>Tru64 5.1b</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                                <entry>X</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </table>
            </section>
            <section xml:id="reference_destination_sql">
                <title>sql() destination options</title>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>sql()</parameter> driver</secondary>
                </indexterm>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary>database driver</secondary>
                </indexterm>
                <para>This driver sends messages into an SQL database. The <parameter>sql()</parameter> destination has the following options:</para>
                <simplesect xml:id="sql_option_columns">
                    <title>columns()</title>
                    <indexterm type="parameter">
                        <primary>columns()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string list</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>"date", "facility", "level", "host", "program", "pid", "message"</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Name of the columns storing the data in <parameter>fieldname
                                    [dbtype]</parameter> format. The <parameter>[dbtype]</parameter>
                                    parameter is optional, and specifies the type of the field. By
                                    default, syslog-ng creates <parameter>text</parameter> columns. Note
                                    that not every database engine can index text fields.</para>
                    <warning>
                        <xi:include href="reference_common.xml" xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="element(destination-sql-mssql-columntype)">
        <xi:fallback>
            <para><emphasis>FIXME: MISSING XINCLUDE CONTENT</emphasis></para>
        </xi:fallback>
    </xi:include>
                    </warning>
                </simplesect>
                <simplesect xml:id="sql_option_database">
                    <title>database()</title>
                    <indexterm type="parameter">
                        <primary>database()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>logs</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Name of the database that stores the logs. Macros cannot be used in database name. Also, when using an Oracle database, you cannot use the same <parameter>database()</parameter> settings in more than one destination.</para>
                </simplesect>
                <simplesect condition="pe">
                    <xi:include href="chunks/option-destination-diskbuffer.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect xml:id="sql_option_flags">
                    <title>flags()</title>
                    <indexterm type="parameter">
                        <primary>flags()</primary>
                        <secondary>for SQL destinations</secondary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>list of flags</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>empty string</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Flags related to the <parameter>sql()</parameter> destination.</para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis>dont-create-tables</emphasis>: Enable this flag to prevent &abbrev; from creating non-existing database tables automatically. The &abbrev; application typically has to create tables if you use macros in the table names. Available in &abbrev; version 3.2 and later.</para>
                            <indexterm type="parameter">
                                <primary>dont-create-tables</primary>
                            </indexterm>
                        </listitem>
                        <listitem>
                            <para><emphasis>explicit-commits</emphasis>: By default, &abbrev; commits every log message to the target database individually. When the <parameter>explicit-commits</parameter> option is enabled, messages are committed in batches. This improves the performance, but results in some latency, as the messages are not immediately sent to the database. The size and frequency of batched commits can be set using the <parameter>flush_lines</parameter> and <parameter>flush_timeout</parameter> parameters. The <parameter>explicit-commits</parameter> option is available in &abbrev; version 3.2 and later.</para>
                            <indexterm type="parameter">
                                <primary>explicit-commits</primary>
                            </indexterm>
                        </listitem>
                    </itemizedlist>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-lines.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-timeout.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-frac-digits.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect xml:id="sql_option_host">
                    <title>host()</title>
                    <indexterm type="parameter">
                        <primary>host()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>hostname or IP address</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>n/a</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Hostname of the database server. Note that Oracle destinations do
                                    not use this parameter, but retrieve the hostname from the
                                    <filename>/etc/tnsnames.ora</filename> file.</para>
                    <note>
                        <para>If you specify <parameter>host="localhost"</parameter>, syslog-ng will use a
                            socket to connect to the local database server. Use
                            <parameter>host="127.0.0.1"</parameter> to force TCP communication between
                            syslog-ng and the local database server.</para>
                        <para>To specify the socket to use, set and export the
                            <parameter>MYSQL_UNIX_PORT</parameter> environment variable, for example
                            <command>MYSQL_UNIX_PORT=/var/lib/mysql/mysql.sock; export
                                MYSQL_UNIX_PORT</command>.</para>
                    </note>
                </simplesect>
                <simplesect xml:id="sql_option_indexes">
                    <title>indexes()</title>
                    <indexterm type="parameter">
                        <primary>indexes()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string list</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>"date", "facility", "host", "program"</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The list of columns that are indexed by the database to speed up
                                    searching. To disable indexing for the destination, include the
                                    empty <parameter>indexes()</parameter> parameter in the destination,
                                    simply omitting the <parameter>indexes</parameter> parameter will
                                    cause syslog-ng to request indexing on the default columns.</para>
                    <para>The &abbrev; application will create the name of indexes automaticaly with the following method:</para>
					<itemizedlist>
						<listitem><para>In case of MsSQL, PostgreSQL, MySQL or SQLite or (Oracle but tablename &lt; 30 characters): <parameter>{table}_{column}_idx</parameter>.</para></listitem>
						<listitem><para>In case of Oracle and tablename &gt; 30 characters: <parameter>md5sum of {table}_{column}-1</parameter> and the first character will be replaced by "i" character and the md5sum will be truncated to 30 characters.</para></listitem>
					</itemizedlist>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-local-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect condition="pe">
                    <xi:include href="reference_common.xml" xpointer="element(diskbuffer_option_log_disk_fifo_size)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect xml:id="sql_option_null">
                    <title>null()</title>
                    <indexterm type="parameter">
                        <primary>null()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry/>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> If the content of a column matches the string specified in the
                                    <parameter>null()</parameter> parameter, the contents of the
                                    column will be replaced with an SQL NULL value. If unset (by
                                    default), the option does not match on any string. For details, see the <xref
                                        linkend="example_destination_sql_null"/>.</para>
                    <example xml:id="example_destination_sql_null">
                        <title>Using SQL NULL values</title>
                        <indexterm>
                            <primary>destinations</primary>
                            <secondary>sql() configuration</secondary>
                        </indexterm>
                        <indexterm>
                            <primary>SQL NULL values</primary>
                        </indexterm>
                        <para>The <parameter>null()</parameter> parameter of the SQL driver can be used to
                            replace the contents of a column with a special SQL NULL value. To replace every
                            column that contains an empty string with NULL, use the
                            <parameter>null("")</parameter> option, for example</para>
                        <synopsis>destination d_sql {
                        sql(type(pgsql)
                        host("logserver") username("syslog-ng") password("password")
                        database("logs")
                        table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
                        columns("datetime", "host", "program", "pid", "message")
                        values("${R_DATE}", "${HOST}", "${PROGRAM}", "${PID}", "${MSGONLY}")
                        indexes("datetime", "host", "program", "pid", "message")
                        null(""));
                        };</synopsis>
                        <para>To replace only a specific column (for example <parameter>pid</parameter>) if it is
                            empty, assign a default value to the column, and use this default value in the
                            <parameter>null()</parameter> parameter:</para>
                        <synopsis>destination d_sql {
                        sql(type(pgsql)
                        host("logserver") username("syslog-ng") password("password")
                        database("logs")
                        table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
                        columns("datetime", "host", "program", "pid", "message")
                        values("${R_DATE}", "${HOST}", "${PROGRAM}", "${PID:-@@NULL@@}", "${MSGONLY}")
                        indexes("datetime", "host", "program", "pid", "message")
                        null("@@NULL@@"));
                        };</synopsis>
                        <para>Ensure that the default value you use does not appear in the actual log
                            messages, because other occurrences of this string will be replaced with NULL as
                            well.</para>
                    </example>
                </simplesect>
                <simplesect xml:id="sql_option_password">
                    <title>password()</title>
                    <indexterm type="parameter">
                        <primary>password()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>n/a</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Password of the database user.</para>
                </simplesect>
				<simplesect xml:id="sql_option_port">
	                <title>port()</title>
	                <indexterm type="parameter">
	                    <primary>port()</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                    <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>1433 TCP for MSSQL, 3306 TCP for MySQL, 1521 for Oracle, and 5432 TCP for PostgreSQL</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> The port number to connect to.</para>
	            </simplesect>
	            <simplesect xml:id="sql_option_retry_sql_inserts">
	                <title>retry_sql_inserts</title>
	                <indexterm type="parameter">
	                    <primary>retry_sql_inserts</primary>
	                </indexterm>
	                <informaltable frame="topbot" colsep="0" rowsep="0">
	                    <tgroup cols="2">
	                        <colspec colnum="1" colwidth="40pt"/>
	                        <tbody>
	                            <row>
	                                <entry>Type:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>number</entry>
	                            </row>
	                            <row>
	                                <entry>Default:
	                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
	                                <entry>3</entry>
	                            </row>
	                        </tbody>
	                    </tgroup>
	                </informaltable>
	                <para><guilabel>Description:</guilabel> The number of insertion attempts. If &abbrev; could not insert a message into the database, it will repeat the attempt until the number of attempts reaches <parameter>retry_sql_inserts</parameter>, then drops the line. For example, &abbrev; will try to insert a message maximum three times by default (once for first insertion and twice if the first insertion was failed).</para>
	            </simplesect>
                <simplesect xml:id="sql_option_session-statements">
                    <title>session-statements()</title>
                    <indexterm type="parameter">
                        <primary>session-statements()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>comma-separated list of SQL statements</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>empty string</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Specifies one or more SQL-like statement which is executed after &abbrev; has successfully connected to the database. For example:</para>
                    <synopsis>session-statements("SET COLLATION_CONNECTION='utf8_general_ci'")</synopsis>
                    <warning>
                        <para>The &abbrev; application does not validate or limit the contents of customized queries. Consequently, queries performed with a user with write-access can potentially modify or even harm the database. Use customized queries with care, and only for your own responsibility.</para>
                    </warning>
                </simplesect>
                <simplesect xml:id="sql_option_table">
                    <title>table()</title>
                    <indexterm type="parameter">
                        <primary>table()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>messages</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> Name of the database table to use (can include macros). When
                                    using macros, note that some databases limit the length of table
                                    names.</para>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect xml:id="sql_option_type">
                    <title>type()</title>
                    <indexterm type="parameter">
                        <primary>type()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>mssql, mysql, oracle, pgsql, or sqlite3</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>mysql</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para xml:id="sql_option_type_desc"><guilabel>Description:</guilabel> Specifies the type of the database, that is, the DBI database driver
                                    to use. Use the <parameter>mssql</parameter> option to send logs to
                        an MSSQL database. For details, see the examples of the databases on the
                                    following sections.</para>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-sql-username.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect xml:id="sql_option_values">
                    <title>values()</title>
                    <indexterm type="parameter">
                        <primary>values()</primary>
                    </indexterm>
                    <informaltable frame="topbot" colsep="0" rowsep="0">
                        <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                            <tbody>
                                <row>
                                    <entry>Type:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>string list</entry>
                                </row>
                                <row>
                                    <entry>Default:
                                        <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                    <entry>"${R_YEAR}-${R_MONTH}-${R_DAY}, ${R_HOUR}:${R_MIN}:${R_SEC}",
                                    "${FACILITY}", "${LEVEL}", "${HOST}", "${PROGRAM}", "${PID}", "${MSGONLY}"</entry>
                                </row>
                            </tbody>
                        </tgroup>
                    </informaltable>
                    <para><guilabel>Description:</guilabel> The parts of the message to store in the fields specified in the
                                    <parameter>columns</parameter> parameter.</para>
                    <para>It is possible to give a special value calling: default (without quotation marks).It means that the value will be used that is the default of the column type of this value.</para>
					<example>
						<title>Value: default</title>
						<synopsis>columns("date datetime", "host varchar(32)", "row_id serial")
	values("${R_DATE}", "${HOST}", default)</synopsis>
					</example>
                </simplesect>
            </section>
        </section>
        <section xml:id="configuring_destinations_syslog">
            <title>Sending messages to a remote logserver using the IETF-syslog protocol</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>syslog()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>syslog()</parameter> driver sends messages to a remote host (for example
                a syslog-ng server or relay) on the local intranet or internet using the new
                standard syslog protocol developed by IETF (for details about the new protocol, see <xref
                    linkend="concepts_message_ietfsyslog"/>). The
                protocol supports sending messages using the UDP, TCP, or the encrypted TLS
                networking protocols.</para>
            <para>The required arguments of the driver are the address of the destination host
                (where messages should be sent). The transport method (networking protocol) is
                optional, syslog-ng uses the TCP protocol by default. For the list of available
                optional parameters, see <xref linkend="reference_destination_syslog_chapter"/>.</para>
            <synopsis>Declaration:
                syslog(host transport [options]);</synopsis>
            <note>
                <para>Note that the <parameter>syslog</parameter> destination driver has required
                    parameters, while the source driver defaults to the local bind address, and
                    every parameter is optional. </para>
            </note>
            <para>The <parameter>udp</parameter> transport method automatically sends multicast
                packets if a multicast destination address is specified. The
                <parameter>tcp</parameter> and <parameter>tls</parameter> methods do not support
                multicasting.</para>
            <note>
                <para>The default ports for the different transport protocols are as follows: UDP
                    &mdash; 514; TLS &mdash; 6514.</para>
                <!-- FIXME mi a syslog-TCP default portja? -->
            </note>
            <example xml:id="example_destination_syslog">
                <title>Using the syslog() driver</title>
                <synopsis>destination d_tcp { syslog("10.1.2.3" transport("tcp") port(1999) localport(999)); };</synopsis>
                <para>If name resolution is configured, the hostname of the target server can be
                used as well.</para>
                <synopsis>destination d_tcp { syslog("target_host" transport("tcp") port(1999) localport(999)); };</synopsis>
                <para>Send the log messages using TLS encryption and use mutual authentication. For details on the encryption and
                authentication options, see
                    <xref linkend="tlsoptions"/>.</para>
                <synopsis>destination d_syslog_tls{
                syslog("10.100.20.40"
                transport("tls")
                port(6514)
                tls(peer-verify(required-trusted)
                ca_dir('/opt/syslog-ng/etc/syslog-ng/keys/ca.d/')
                key_file('/opt/syslog-ng/etc/syslog-ng/keys/client_key.pem')
                cert_file('/opt/syslog-ng/etc/syslog-ng/keys/client_certificate.pem'))
                );};</synopsis>
            </example>
            <section xml:id="reference_destination_syslog_chapter">
                <title>syslog() destination options</title>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>syslog()</parameter> driver</secondary>
                </indexterm>
                <para>The <parameter>syslog()</parameter> driver sends messages to a remote host (for example
                    a syslog-ng server or relay) on the local intranet or internet using the RFC5424 syslog protocol developed by IETF (for details about the protocol, see <xref linkend="concepts_message_ietfsyslog"/>). The
                    protocol supports sending messages using the <trademark>RLTP</trademark>, UDP, TCP, or the encrypted TLS
                    networking protocols.</para>
                <para xml:id="table_destination_syslog_options">These destinations have the following options:</para>
                <xi:include href="section_common.xml" xpointer="element(reference_destination_syslog)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </section>
        </section>
        <section xml:id="configuring_destinations_tcpudp">
            <title>Sending messages to a remote logserver using the legacy BSD-syslog protocol</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>tcp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>tcp6()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>udp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>udp6()</parameter> driver</secondary>
            </indexterm>
            <xi:include href="chunks/note-use-network-driver.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>The <parameter>tcp()</parameter>, <parameter>tcp6()</parameter>,
                <parameter>udp()</parameter>, and <parameter>udp6()</parameter> drivers send
                messages to another host (for example a syslog-ng server or relay) on the local intranet
                or internet using the UDP or TCP protocol. The <parameter>tcp6()</parameter> and
                    <parameter>udp6()</parameter> drivers use the IPv6 network protocol.</para>
            <para>All four drivers have a single required parameter specifying the destination host
                address, where messages should be sent. For the list of available optional
                parameters, see <xref linkend="reference_destination_tcpudp"/>.</para>
            <para>The <parameter>udp()</parameter> and <parameter>udp6()</parameter> drivers
                automatically send multicast packets if a multicast destination address is
                specified. The <parameter>tcp()</parameter> and <parameter>tcp6()</parameter>
                drivers do not support multicasting.</para>
            <synopsis>Declaration:
                tcp(host [options]);
                udp(host [options]);
                tcp6(host [options]);
                udp6(host [options]);</synopsis>
            <example xml:id="example_destination_tcpudp">
                <title>Using the tcp() driver</title>
                <synopsis>destination d_tcp { tcp("10.1.2.3" port(1999) localport(999)); };</synopsis>
                <para>If name resolution is configured, the hostname of the target server can be
                used as well.</para>
                <synopsis>destination d_tcp { tcp("target_host" port(1999) localport(999)); };</synopsis>
                <para>To send messages using the IETF-syslog message format without using the IETF-syslog protocol, enable the <parameter>syslog-protocol</parameter> flag:</para>
                <synopsis>destination d_tcp { tcp("10.1.2.3" port(1999) flags(syslog-protocol) ); };</synopsis>
                <para>(For details on how to use the IETF-syslog protocol, see <xref linkend="reference_destination_syslog_chapter"/>.)</para>
                <para>Using an IPv6 address:</para>
                <synopsis>tcp6("fd00:abcd:4321:2:20c:29ff:fea8:9671" port(514));</synopsis>
            </example>
            <section xml:id="reference_destination_tcpudp">
                <title>tcp(), tcp6(), udp(), and udp6() destination options</title>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>tcp()</parameter> driver</secondary>
                </indexterm>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>tcp6()</parameter> driver</secondary>
                </indexterm>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>udp()</parameter> driver</secondary>
                </indexterm>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>udp6()</parameter> driver</secondary>
                </indexterm>
                <para>This driver sends messages to another host on the local intranet or internet according to RFC3164 using
                    the UDP or TCP protocol. The <parameter>tcp6()</parameter> and
                    <parameter>udp6()</parameter> drivers use the IPv6 network protocol.</para>
                <note>
                    <para>When using IPv6 destination addresses, always enclose the address between double-quotes:</para>
                    <synopsis>tcp6("fd00:abcd:4321:2:20c:29ff:fea8:9671" port(514));</synopsis>
                </note>
                <para xml:id="table_destination_tcp_options">These destinations have the following options:</para>
                <simplesect condition="pe">
                    <xi:include href="chunks/option-destination-diskbuffer.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect condition="pe">
	                <xi:include href="reference_common.xml" xpointer="element(destination-failover)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	                <example xml:id="example-failover-server-tcp">
	                <title>Specifying failover servers for tcp() destinations</title>
	                <para>The following example specifies two failover servers for a simple TCP destination.</para>
	                <synopsis>destination d_tcp { tcp("10.1.2.3" port(1999) failover_servers("10.2.3.4", "third-logserver.example.com"); };</synopsis>
	                <para>The following example specifies a failover server for a TLS destination.</para>
	                <synopsis>destination d_tcp {
         tcp("10.100.20.40" port(8989)
                 failover_servers("10.2.3.4")
                 tls(peer-verify(required-trusted)
                 ca_dir('/opt/syslog-ng/etc/keys/cas/')
                 key_file('/opt/syslog-ng/etc/keys/client-key.pem')
                 cert_file('/opt/syslog-ng/etc/keys/client-pubcert.pem')));
};</synopsis>
		            </example>
	            </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-lines.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-timeout.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-frac-digits.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_ip_tos)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_ip_ttl)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_commonoption_keep_alive)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_localip)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_localport)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect condition="pe">
					<xi:include href="reference_common.xml" xpointer="element(diskbuffer_option_log_disk_fifo_size)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	                <example xml:id="example_diskbuffer">
	                    <title>Enabling disk-based buffering</title>
	                    <para>The following example turns on disk-based buffering for the destination. The
	                    size of the disk buffer is 4 194 304 bytes (4 megabytes). In a worst-case
	                    situation, using the default value of the <parameter>log_msg_size()</parameter>
	                    parameter (8192 bytes), this disk buffer can store at least 512 messages.
	                    Typical log messages are about 300-500 bytes long, so a disk buffer of 4
	                    megabytes can store over 8000 messages. Set the size of the disk buffer based on
	                    the average size and number of messages, and the longest estimated downtime of
	                    the server. </para>
	                    <synopsis>destination d_tcp {
                    tcp("10.1.2.3" port(1999) log_disk_fifo_size(4194304)); };</synopsis>
	                </example>
	            </simplesect>
                <simplesect condition="pe">
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_freq)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_mode)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_port)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_so_broadcast)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-source-so-keepalive.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_so_rcvbuf)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_so_sndbuf)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_spoof_source)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-suppress.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template-escape.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-throttle.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_tls)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-ts-format.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
            </section>
        </section>
        <section xml:id="configuring_destinations_unixstream">
            <title>Sending messages to UNIX domain sockets</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>unix-stream()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>unix-dgram()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>unix-stream()</parameter> and <parameter>unix-dgram()</parameter>
                drivers send messages to a UNIX domain socket in either
                <parameter>SOCK_STREAM</parameter> or <parameter>SOCK_DGRAM</parameter> mode. </para>
            <para>Both drivers have a single required argument specifying the name of the socket to
                connect to. For the list of available optional parameters, see <xref
                    linkend="reference_destination_unixstream"/>.</para>
            <synopsis>Declaration:
                unix-stream(filename [options]);
                unix-dgram(filename [options]);</synopsis>
            <example xml:id="example_destination_unixstream">
                <title>Using the unix-stream() driver</title>
                <synopsis>destination d_unix_stream { unix-stream("/var/run/logs"); };</synopsis>
            </example>
            <section xml:id="reference_destination_unixstream">
                <title>unix-stream() and unix-dgram() destination options</title>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>unix-stream()</parameter> driver</secondary>
                </indexterm>
                <indexterm>
                    <primary>destination drivers</primary>
                    <secondary><parameter>unix-dgram()</parameter> driver</secondary>
                </indexterm>
                <para>These drivers send messages to a unix socket in either
                    <parameter>SOCK_STREAM</parameter> or <parameter>SOCK_DGRAM</parameter> mode. The <parameter>unix-stream()</parameter> and <parameter>unix-dgram()</parameter>
                    destinations have the following options:</para>
                <simplesect condition="pe">
                    <xi:include href="chunks/option-destination-diskbuffer.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-lines.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-flush-timeout.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-frac-digits.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_commonoption_keep_alive)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_so_broadcast)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-source-so-keepalive.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect condition="pe">
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_freq)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
	            <simplesect>
	                <xi:include href="chapter-global-options.xml" xpointer="element(global_options_mark_mode)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	            </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_so_rcvbuf)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="element(destination_option_so_sndbuf)" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-suppress.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-template-escape.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-throttle.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
                <simplesect>
                    <xi:include href="chunks/option-destination-ts-format.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                </simplesect>
            </section>
         </section>
        <section xml:id="reference_destination_usertty">
            <title>Sending messages to a user terminal &mdash; usertty() destination</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>usertty()</parameter> driver</secondary>
            </indexterm>
            <para>This driver writes messages to the terminal of a logged-in user. </para>
            <para>The <parameter>usertty()</parameter> driver has a single required argument,
                specifying a username who should receive a copy of matching messages. Use the asterisk <parameter>*</parameter> to specify every user currently logged in to the system.</para>
            <synopsis>Declaration:
usertty(username);</synopsis>
            <para>The <parameter>usertty()</parameter> does not have any further options nor does it
                support templates.</para>
            <example>
                <title>Using the usertty() driver</title>
                <synopsis>destination d_usertty { usertty("root"); };</synopsis>
            </example>
        </section>
</chapter>
