<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
 [
 <!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]>
<chapter xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title/>
    <section xml:id="table_source_tcp_options">
        <title>Options for tcp(), tcp6(), udp(), and udp6() sources</title>
        <simplesect xml:id="source_option_encoding">
            <title>encoding()</title>
            <indexterm type="parameter">
                <primary>encoding()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the characterset (encoding, for
                example <parameter>UTF-8</parameter>) of messages using the legacy BSD-syslog
                protocol. To list the available character sets on a host, execute the <command>iconv
                    -l</command> command.</para>
        </simplesect>
        <simplesect xml:id="source_option_ip">
            <title>ip() or localip()</title>
            <indexterm type="parameter">
                <primary>ip() or localip()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0.0.0.0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The IP address to bind to. Note that this is not
                the address where messages are accepted from.</para>
        </simplesect>
        <simplesect xml:id="source_option_ip_tos">
            <title>ip_tos()</title>
            <indexterm type="parameter">
                <primary>ip_tos()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the Type-of-Service value of outgoing
                packets.</para>
        </simplesect>
        <simplesect xml:id="source_option_ip_ttl">
            <title>ip_ttl()</title>
            <indexterm type="parameter">
                <primary>ip_ttl()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the Time-To-Live value of outgoing
                packets.</para>
        </simplesect>
        <simplesect xml:id="source_option_keep_alive">
            <title>keep-alive()</title>
            <indexterm type="parameter">
                <primary>keep-alive()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies whether connections to sources should
                be closed when syslog-ng is forced to reload its configuration (upon the receipt of
                a SIGHUP signal). Note that this applies to the server (source) side of the
                syslog-ng connections, client-side (destination) connections are always reopened
                after receiving a HUP signal unless the <parameter>keep-alive</parameter> option is
                enabled for the destination.</para>
        </simplesect>
        <simplesect xml:id="source_option_max_connections">
            <title>max-connections()</title>
            <indexterm type="parameter">
                <primary>max-connections()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>10</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the maximum number of simultaneous
                connections.</para>
        </simplesect>
        <simplesect xml:id="source_option_port">
            <title>port() or localport()</title>
            <indexterm type="parameter">
                <primary>port() or localport()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>514</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The port number to bind to.</para>
        </simplesect>
        <simplesect xml:id="source_option_so_broadcast">
            <title>so_broadcast()</title>
            <indexterm type="parameter">
                <primary>so_broadcast()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> This option controls the
                    <parameter>SO_BROADCAST</parameter> socket option required to make syslog-ng
                send messages to a broadcast address. For details, see the
                    <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect xml:id="source_option_so_keepalive">
            <title>so_keepalive()</title>
            <indexterm type="parameter">
                <primary>so_keepalive()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Enables keep-alive messages, keeping the socket
                open. This only effects TCP and UNIX-stream sockets. For details, see the
                    <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect xml:id="source_option_so_rcvbuf">
            <title>so_rcvbuf()</title>
            <indexterm type="parameter">
                <primary>so_rcvbuf()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the size of the socket receive buffer
                in bytes. For details, see the <command>socket(7)</command> manual page.</para>
            <xi:include href="chunks/warning-udp-recvbuf.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="source_option_so_sndbuf">
            <title>so_sndbuf()</title>
            <indexterm type="parameter">
                <primary>so_sndbuf()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the size of the socket send buffer in
                bytes. For details, see the <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect xml:id="source_option_tcp_keepalive">
            <title>tcp-keep-alive()</title>
            <indexterm type="parameter">
                <primary>tcp-keep-alive()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> This is an obsolete alias of the
                    <parameter>so_keepalive()</parameter> option.</para>
        </simplesect>
        <simplesect xml:id="source_option_tls">
            <title>tls()</title>
            <indexterm type="parameter">
                <primary>tls()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>tls options</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>n/a</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> This option sets various TLS specific options
                like key/certificate files and trusted CA locations and can only be used with the
                    <parameter>tcp</parameter> transport protocols. For details, see <xref
                    linkend="tlsoptions"/>.</para>
        </simplesect>
    </section>

    <section xml:id="table_destination_tcp_options">
        <title>Options for tcp(), tcp6(), udp(), and udp6() destinations</title>
        <simplesect xml:id="destination_option_ip_tos">
            <title>ip_tos()</title>
            <indexterm type="parameter">
                <primary>ip_tos()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the Type-of-Service value of outgoing
                packets.</para>
        </simplesect>
        <simplesect xml:id="destination_option_ip_ttl">
            <title>ip_ttl()</title>
            <indexterm type="parameter">
                <primary>ip_ttl()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the Time-To-Live value of outgoing
                packets.</para>
        </simplesect>
        <simplesect xml:id="destination_option_localip">
            <title>localip()</title>
            <indexterm type="parameter">
                <primary>localip()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0.0.0.0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The IP address to bind to before connecting to
                target.</para>
        </simplesect>
        <simplesect xml:id="destination_option_localport">
            <title>localport()</title>
            <indexterm type="parameter">
                <primary>localport()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The port number to bind to. Messages are sent
                from this port.</para>
        </simplesect>
        <simplesect xml:id="destination_option_port">
            <title>port() or destport()</title>
            <indexterm type="parameter">
                <primary>port() or destport()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>514</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The port number to connect to. Note that the
                default port numbers used by syslog-ng do not comply with the latest RFC which was
                published after the release of syslog-ng 3.0.2, therefore the default port numbers
                will change in the future releases.</para>
            <note>
                <para>The TCP port 514 is reserved for use with <command>rshell</command>, so select
                    a different port if syslog-ng and <command>rshell</command> is used at the same
                    time. </para>
            </note>
            <!-- syslog drivere most kulon van a referenceben -->
        </simplesect>
        <simplesect xml:id="destination_option_spoof_source">
            <title>spoof_source()</title>
            <indexterm type="parameter">
                <primary>spoof_source()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Enables source address spoofing. This means that
                the host running syslog-ng generates UDP packets with the source IP address matching
                the original sender of the message. It is useful when you want to perform some kind
                of preprocessing via syslog-ng then forward messages to your central log management
                solution with the source address of the original sender. This option only works for
                UDP destinations though the original message can be received by TCP as well. This
                option is only available if syslog-ng was compiled using the
                    <parameter>--enable-spoof-source</parameter> configuration option.</para>
        </simplesect>
        <simplesect xml:id="destination_option_so_broadcast">
            <title>so_broadcast()</title>
            <indexterm type="parameter">
                <primary>so_broadcast()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> This option controls the
                    <parameter>SO_BROADCAST</parameter> socket option required to make syslog-ng
                send messages to a broadcast address. For details, see the
                    <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect xml:id="destination_option_so_rcvbuf">
            <title>so_rcvbuf()</title>
            <indexterm type="parameter">
                <primary>so_rcvbuf()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the size of the socket receive buffer
                in bytes. For details, see the <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect xml:id="destination_option_so_sndbuf">
            <title>so_sndbuf()</title>
            <indexterm type="parameter">
                <primary>so_sndbuf()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel>Specifies the size of the socket send buffer in
                bytes. For details, see the <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect xml:id="destination_option_tls">
            <title>tls()</title>
            <indexterm type="parameter">
                <primary>tls()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>tls options</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>n/a</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> This option sets various TLS specific options
                like key/certificate files and trusted CA locations. TLS can be used only with the
                    <parameter>tcp</parameter> transport protocols. For details, see <xref
                    linkend="tlsoptions"/>.</para>
        </simplesect>
    </section>
    <section xml:id="destination-file-logstore-common">
        <simplesect xml:id="destination-file-logstore-common-create-dirs">
            <title>create_dirs()</title>
            <indexterm type="parameter">
                <primary>create_dirs()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Enable creating non-existing directories.</para>
        </simplesect>
        <simplesect xml:id="destination-file-logstore-common-dir-group">
            <title>dir_group()</title>
            <indexterm type="parameter">
                <primary>dir_group()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use the global settings</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The group of directories created by syslog-ng.
                To preserve the original properties of an existing directory, use the option without
                specifying an attribute: <parameter>dir_group()</parameter>.</para>
        </simplesect>
        <simplesect xml:id="destination-file-logstore-common-dir-owner">
            <title>dir_owner()</title>
            <indexterm type="parameter">
                <primary>dir_owner()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use the global settings</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The owner of directories created by syslog-ng.
                To preserve the original properties of an existing directory, use the option without
                specifying an attribute: <parameter>dir_owner()</parameter>.</para>
        </simplesect>
        <simplesect xml:id="destination-file-logstore-common-dir-perm">
            <title>dir_perm()</title>
            <indexterm type="parameter">
                <primary>dir_perm()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use the global settings</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The permission mask of directories created by
                syslog-ng. Log directories are only created if a file after macro expansion refers
                to a non-existing directory, and directory creation is enabled (see the
                    <parameter>create_dirs()</parameter> option above). For octal numbers prefix the
                number with <parameter>0</parameter>, for example use <parameter>0755</parameter>
                for <parameter>rwxr-xr-x</parameter>.</para>
            <para>To preserve the original properties of an existing directory, use the option
                without specifying an attribute: <parameter>dir_perm()</parameter>. Note that when
                creating a new directory without specifying attributes for
                    <parameter>dir_perm()</parameter>, the default permission of the directories is
                masked with the umask of the parent process (typically
                <parameter>0022</parameter>).</para>
        </simplesect>
        <simplesect xml:id="destination-file-logstore-common-group">
            <title>group()</title>
            <indexterm type="parameter">
                <primary>group()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use the global settings</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Set the group of the created file to the one
                specified. To preserve the original properties of an existing file, use the option
                without specifying an attribute: <parameter>group()</parameter>.</para>
        </simplesect>
        <simplesect xml:id="destination-file-logstore-common-owner">
            <title>owner()</title>
            <indexterm type="parameter">
                <primary>owner()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use the global settings</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Set the owner of the created file to the one
                specified. To preserve the original properties of an existing file, use the option
                without specifying an attribute: <parameter>owner()</parameter>.</para>
        </simplesect>
        <simplesect xml:id="destination-file-logstore-common-perm">
            <title>perm()</title>
            <indexterm type="parameter">
                <primary>perm()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use the global settings</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The permission mask of the file if it is created
                by syslog-ng. For octal numbers prefix the number with <parameter>0</parameter>, for
                example use <parameter>0755</parameter> for <parameter>rwxr-xr-x</parameter>.</para>
            <para>To preserve the original properties of an existing file, use the option without
                specifying an attribute: <parameter>perm()</parameter>.</para>
        </simplesect>
    </section>
    <section xml:id="table_disk_buffering">
        <title>Disk-buffering options</title>
        <simplesect xml:id="diskbuffer_option_log_disk_fifo_size">
            <title>log_disk_fifo_size() (OBSOLETE)</title>
            <indexterm type="parameter">
                <primary>log_disk_fifo_size()</primary>
            </indexterm>
            <indexterm>
                <primary>disk buffer</primary>
            </indexterm>
            <indexterm>
                <primary>disk-based buffering</primary>
            </indexterm>
            <indexterm>
                <primary>parameters</primary>
                <secondary>log_disk_fifo_size()</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para>This option is obsolete, use the
                <parameter>disk-buffer()</parameter> option instead.</para>
            <para><guilabel>Description:</guilabel> Size of the hard disk space in bytes that is used as disk buffer. Available only
                in syslog-ng Premium Edition when using the <parameter>tcp()</parameter>,
                    <parameter>tcp6()</parameter>, <parameter>syslog()</parameter> (when using the
                    <parameter>tcp</parameter> or <parameter>tls</parameter> transport methods), and
                    <parameter>sql()</parameter> destinations. For details on using the disk buffer,
                see <xref linkend="concepts_diskbuffer"/>.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_diskbuffer" condition="pe">
            <title>disk-buffer()</title>
            <indexterm type="parameter">
                <primary>disk-buffer()</primary>
            </indexterm>
            <indexterm>
                <primary>disk buffer</primary>
            </indexterm>
            <indexterm>
                <primary>disk-based buffering</primary>
            </indexterm>
            <indexterm>
                <primary>parameters</primary>
                <secondary>disk-buffer()</secondary>
            </indexterm>
            <para><guilabel>Description:</guilabel> This option enables putting outgoing messages
                into the disk buffer of the destination to avoid message loss in case of a system
                failure on the destination side. It has the following options:</para>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="3">
                    <colspec colnum="1" colname="c1"/>
                    <colspec colnum="2" colname="c2" colwidth="40pt"/>
                    <colspec colnum="3" colname="c3"/>
                    <tbody>
                        <row>
                            <entry><guimenu>reliable()</guimenu></entry>
                            <entry/>
                            <entry/>
                        </row>
                        <row>
                            <entry/>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes|no</entry>
                        </row>
                        <row>
                            <entry/>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                        <row>
                            <entry/>
                            <entry namest="c2" nameend="c3"><para><guimenu>Description:</guimenu> If set to <parameter>yes</parameter>, &abbrev; cannot lose logs in case of reload/restart, unreachable destination or &abbrev; crash. This solution provides a slower, but reliable disk-buffer option. It is created and initialized at startup and gradually grows as new messages arrive. If set to <parameter>no</parameter>, the normal disk-buffer will be used. This provides a faster, but less reliable disk-buffer option.</para>
                            <warning>
                                <para>Hazard of data loss! If you change the value of <parameter>reliable</parameter> option when there are messages in the disk-buffer, the messages stored in the disk-buffer will be lost.</para>
                            </warning>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="3">
                    <colspec colnum="1" colname="c1"/>
                    <colspec colnum="2" colname="c2" colwidth="40pt"/>
                    <colspec colnum="3" colname="c3"/>
                    <tbody>
                        <row>
                            <entry><guimenu>disk-buf-size()</guimenu></entry>
                            <entry/>
                            <entry/>
                        </row>
                        <row>
                            <entry/>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry/>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>1048576 (bytes)</entry>
                        </row>
                        <row>
                            <entry/>
                            <entry namest="c2" nameend="c3"><guimenu>Description:</guimenu> The maximum size of the disk-buffer in bytes. The minimum value is 1MB. It replaces the old <parameter>log_disk_fifo_size()</parameter> option.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="3">
                    <colspec colnum="1" colname="c1"/>
                    <colspec colnum="2" colname="c2" colwidth="40pt"/>
                    <colspec colnum="3" colname="c3"/>
                    <tbody>
                        <row>
                            <entry><guimenu>mem-buf-length()</guimenu></entry>
                            <entry/>
                            <entry/>
                        </row>
                        <row>
                            <entry/>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry/>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>10000 (messages)</entry>
                        </row>
                        <row>
                            <entry/>
                            <entry namest="c2" nameend="c3"><guimenu>Description:</guimenu> Use this option if the option <parameter>reliable()</parameter> is set to <parameter>no</parameter>. This option contains the number of messages stored in overflow queue. It replaces the old <parameter>log_fifo_size()</parameter> option. It inherits the value of the global <parameter>log_fifo_size()</parameter> option if provided. If it is not provided, the default value is <parameter>10000</parameter> messages. Note that this option will be ignored if the option <parameter>reliable()</parameter> is set to <parameter>yes</parameter>.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="3">
                    <colspec colnum="1" colname="c1"/>
                    <colspec colnum="2" colname="c2" colwidth="40pt"/>
                    <colspec colnum="3" colname="c3"/>
                    <tbody>
                        <row>
                            <entry><guimenu>mem-buf-size()</guimenu></entry>
                            <entry/>
                            <entry/>
                        </row>
                        <row>
                            <entry/>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry/>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>163840000 (bytes)</entry>
                        </row>
                        <row>
                            <entry/>
                            <entry namest="c2" nameend="c3"><guimenu>Description:</guimenu> Use this option if the option <parameter>reliable()</parameter> is set to <parameter>yes</parameter>. This option contains the size of the messages in bytes that is used in the memory part of the disk buffer. It replaces the old <parameter>log_fifo_size()</parameter> option. Note that this option will be ignored if the option <parameter>reliable()</parameter> is set to <parameter>no</parameter>.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para>Options <parameter>reliable()</parameter> and <parameter>disk-buf-size()</parameter> are required options.</para>
            <example>
                <title>Examples for using disk-buffer()</title>
                <para>In the following case reliable disk-buffer() is used.</para>
                <synopsis>destination d_BSD {
    tcp(
            "127.0.0.1"
            port(3333)
            disk-buffer(
                mem-buf-size(10000)
                disk-buf-size(2000000)
                reliable(yes)
            )
        );
};</synopsis>
                <para>In the following case normal disk-buffer() is used.</para>
                <synopsis>destination d_BSD {
    tcp(
            "127.0.0.1"
            port(3333)
            disk-buffer(
                mem-buf-length(10000)
                disk-buf-size(2000000)
                reliable(no)
            )
        );
}; </synopsis>
            </example>
            </simplesect>

    </section>
    <section xml:id="destination-file-dir-perm-description">
        <para><guilabel>Description:</guilabel> The permission mask of directories created by
            syslog-ng. Log directories are only created if a file after macro expansion refers to a
            non-existing directory, and directory creation is enabled (see also the
                <parameter>create_dirs()</parameter> option). For octal numbers prefix the number
            with <parameter>0</parameter>, for example use <parameter>0755</parameter> for
                <parameter>rwxr-xr-x</parameter>.</para>
        <para>To preserve the original properties of an existing directory, use the option without
            specifying an attribute: <parameter>dir_perm()</parameter>. Note that when creating a
            new directory without specifying attributes for <parameter>dir_perm()</parameter>, the
            default permission of the directories is masked with the umask of the parent process
            (typically <parameter>0022</parameter>).</para>
    </section>
    <section xml:id="destination-file-time-reap-description">
        <para><guilabel>Description:</guilabel> The time to wait in seconds before an idle
            destination file is closed.</para>
    </section>
    <section xml:id="table_source_commonoptions">
        <?dbfo keep-together="auto" ?>
        <title>Common options for source drivers</title>
        <simplesect xml:id="source_commonoption_default-facility">
            <title>default-facility()</title>
            <indexterm type="parameter">
                <primary>default-facility()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>facility string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>kern</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> This parameter assigns a facility value to the
                messages received from the file source, if the message does not specify one.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_default-priority">
            <title>default-priority()</title>
            <indexterm type="parameter">
                <primary>default-priority()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>priority string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> This parameter assigns an emergency level to the
                messages received from the file source, if the message does not specify one.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_flags">
            <title>flags()</title>
            <indexterm type="parameter">
                <primary>flags()</primary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>empty-lines</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>expect-hostnames</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>kernel</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>no-hostname</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>no-multi-line</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>no-parse</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>store-legacy-msghdr</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>validate-utf8</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty-lines, expect-hostname, kernel, no-multi-line, no-parse,
                                store-legacy-msghdr, syslog-protocol, validate-utf8</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty set</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the log parsing options of the
                source.</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis>empty-lines</emphasis>: Use the
                            <parameter>empty-lines</parameter> flag to keep the empty lines of the
                        messages. By default, &abbrev; removes empty lines automatically.</para>
                </listitem>
                <listitem>
                    <para><emphasis>expect-hostname</emphasis>: If the <parameter>expect-hostname</parameter> flag is enabled, &abbrev; will assume that the log message contains a hostname and parse the message accordingly. This is the default behavior for TCP sources. Note that pipe sources use the <parameter>no-hostname</parameter> flag by default.</para>
                </listitem>
                <listitem>
                    <para><emphasis>kernel</emphasis>: The <parameter>kernel</parameter> flag makes
                        the source default to the <parameter>LOG_KERN | LOG_CRIT</parameter>
                        priority if not specified otherwise.</para>
                </listitem>
                <listitem>
                    <para><emphasis>no-hostname</emphasis>: Enable the
                            <parameter>no-hostname</parameter> flag if the log message does not
                        include the hostname of the sender host. That way &abbrev; assumes that the
                        first part of the message header is ${PROGRAM} instead of ${HOST}. For
                        example:</para>
                    <synopsis>source s_dell { udp(port(2000) flags(no-hostname)); };</synopsis>
                </listitem>
                <listitem>
                    <para><emphasis>no-multi-line</emphasis>: The <parameter>no-multi-line</parameter> flag disables line-breaking in the messages; the entire message is converted to a single line. Note that this happens only if the underlying transport method actually supports multi-line messages. Currently the <parameter><phrase condition="pe">rltp, </phrase>syslog, udp, unix-dgram</parameter> drivers support multi-line messages; other drivers, for example, the <parameter>tcp</parameter> driver does not.</para>
                </listitem>
                <listitem>
                    <para><emphasis>no-parse</emphasis>: By default, &abbrev; parses incoming messages as syslog messages. The <parameter>no-parse</parameter> flag completely disables syslog message parsing and processes the complete line as the message part of a syslog message. The &abbrev; application will generate a new syslog header (timestamp, host, and so on) automatically and put the entire incoming message into the MSG part of the syslog message. This flag is useful for parsing messages not complying to the syslog format.</para>
                </listitem>
                <listitem>
                    <para><emphasis>store-legacy-msghdr</emphasis>: If the
                            <parameter>store-legacy-msghdr</parameter> flag is enabled, syslog-ng
                        stores the original incoming header of the log message. This is useful of
                        the original format of a non-syslog-compliant message must be retained
                        (syslog-ng automatically corrects minor header errors, for example, adds a
                        whitespace before <parameter>msg</parameter> in the following message:
                            <parameter>Jan 22 10:06:11 host program:msg</parameter>). Note that
                            <parameter>store-legacy-msghdr</parameter> should be enabled when
                        receiving messages from syslog-ng Agent for Windows clients that use the
                        Snare-compatible mode.</para>
                    <indexterm>
                        <primary>Snare-compatibility</primary>
                    </indexterm>
                    <indexterm>
                        <primary>compatibility with Snare</primary>
                    </indexterm>
                    <indexterm>
                        <primary>syslog-ng agent</primary>
                        <secondary>Snare-compatibility</secondary>
                    </indexterm>
                    <indexterm>
                        <primary>Snare</primary>
                        <secondary>receiving Snare-compatible messages</secondary>
                    </indexterm>
                </listitem>
                <listitem>
                    <para><emphasis>syslog-protocol</emphasis>: The <parameter>syslog-protocol</parameter> flag specifies that incoming messages are expected to be formatted according to the new IETF syslog protocol standard (RFC5424), but without the frame header. Note that this flag is not needed for the <parameter>syslog</parameter> driver, which handles only messages that have a frame header.</para>
                </listitem>
                <listitem>
                    <para><emphasis>validate-utf8</emphasis>: The
                            <parameter>validate-utf8</parameter> flag enables encoding-verification
                        for messages formatted according to the new IETF syslog standard (for
                        details, see <xref linkend="concepts_message_ietfsyslog"/>). If the <glossterm linkend="glossary-bom" role="underline">BOM</glossterm><footnote><xi:include href="syslog-ng_glossary.xml" xmlns:xi="http://www.w3.org/2001/XInclude" xpointer="element(glossary-bom-definition)">
        <xi:fallback>
            <para><emphasis>FIXME: MISSING XINCLUDE CONTENT</emphasis></para>
        </xi:fallback>
    </xi:include></footnote>
                        character is missing, but the message is otherwise UTF-8 compliant,
                        syslog-ng automatically adds the BOM character to the message.</para>
                </listitem>
            </itemizedlist>
        </simplesect>
        <simplesect xml:id="source_commonoption_follow_freq">
            <title>follow_freq()</title>
            <indexterm type="parameter">
                <primary>follow_freq()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>1</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para xml:id="source_commonoption_follow_freq_desc"><guilabel>Description:</guilabel> Indicates that the source should be checked
                periodically. This is useful for files which always indicate readability, even
                though no new lines were appended. If this value is higher than zero, syslog-ng will
                not attempt to use <parameter>poll()</parameter> on the file, but checks whether the
                file changed every time the <parameter>follow_freq()</parameter> interval (in
                seconds) has elapsed. Floating-point numbers (for example
                <parameter>1.5</parameter>) can be used as well.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_host_override">
            <title>host_override()</title>
            <indexterm type="parameter">
                <primary>host_override()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Replaces the ${HOST} part of the message with the
                parameter string.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_log_fetch_limit">
            <title>log_fetch_limit()</title>
            <indexterm type="parameter">
                <primary>log_fetch_limit()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>10</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para xml:id="source_commonoption_log_fetch_limit_desc"><guilabel>Description:</guilabel> The maximum number of messages fetched from a
                source during a single poll loop. The destination queues might fill up before
                flow-control could stop reading if <parameter>log_fetch_limit()</parameter> is too
                high.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_log_iw_size">
            <title>log_iw_size()</title>
            <indexterm type="parameter">
                <primary>log_iw_size()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>1000</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The size of the initial window, this value is
                used during flow control. If the <parameter>max-connections()</parameter> option is
                set, the <parameter>log_iw_size()</parameter> will be divided by the number of
                connections, otherwise <parameter>log_iw_size()</parameter> is divided by 10 (the
                default value of the <parameter>max-connections()</parameter> option). The resulting
                number is the initial window size of each connection.</para>
            <example>
                <title>Initial window size of a connection</title>
                <para>If <parameter>log_iw_size(1000)</parameter> and
                        <parameter>max-connections(10)</parameter>, then each connection will have
                    an initial window size of 100.</para>
            </example>

        </simplesect>
        <simplesect xml:id="source_commonoption_log_msg_size">
            <title>log_msg_size()</title>
            <indexterm type="parameter">
                <primary>log_msg_size()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use the global <parameter>log_msg_size()</parameter> option,
                                which defaults to <parameter>8192</parameter>.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the maximum length of incoming log
                messages. Uses the value of the <link linkend="reference_options">global
                    option</link> if not specified.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_log_prefix">
            <title>log_prefix() (DEPRECATED)</title>
            <indexterm type="parameter">
                <primary>log_prefix() (DEPRECATED)</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> A string added to the beginning of every log
                message. It can be used to add an arbitrary string to any log source, though it is
                most commonly used for adding <parameter>kernel:</parameter> to the kernel messages
                on Linux. NOTE: This option is deprecated. Use
                    <parameter>program_override()</parameter> instead.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_multi_line_garbage">
            <title>multi-line-garbage()</title>
            <indexterm type="parameter">
                <primary>multi-line-garbage()</primary>
            </indexterm>
            <indexterm>
                <primary>processing multi-line messages</primary>
            </indexterm>
            <indexterm>
                <primary>multi-line messages</primary>
            </indexterm>
            <indexterm>
                <primary>multiline messages</primary>
                <see>multi-line messages</see>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>regular expression</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty string</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Use the
                    <parameter>multi-line-garbage()</parameter> option when processing multi-line
                messages that contain unneeded parts between the messages. Specify a string or
                regular expression that matches the beginning of the unneeded message parts. If the
                    <parameter>multi-line-garbage()</parameter> option is set, &abbrev; ignores
                lines between the line matching the <parameter>multi-line-garbage()</parameter> and
                the next line matching <parameter>multi-line-prefix()</parameter>. See also the
                    <parameter>multi-line-prefix()</parameter> option.</para>
            <para>When receiving multi-line messages from a source when the
                    <parameter>multi-line-garbage()</parameter> option is set but no matching line
                is received between two lines that match <parameter>multi-line-prefix()</parameter>,
                &abbrev; will continue to process the incoming lines as a single message until a
                line matching <parameter>multi-line-garbage()</parameter> is received.</para>
            <warning>
                <para>If the <parameter>multi-line-garbage()</parameter> option is set, &abbrev;
                    discards lines between the line matching the
                        <parameter>multi-line-garbage()</parameter> and the next line matching
                        <parameter>multi-line-prefix()</parameter>.</para>
            </warning>
            <note>
                <para>Starting with &abbrev; version 3.2.1, a message is considered complete if no
                    new lines arrive to the message for 10 seconds, even if no line matching the
                        <parameter>multi-line-garbage()</parameter> option is received.</para>
            </note>
            <!-- FIXME examples -->
        </simplesect>
        <simplesect xml:id="source_commonoption_multi_line_prefix">
            <title>multi-line-prefix()</title>
            <indexterm type="parameter">
                <primary>multi-line-prefix()</primary>
            </indexterm>
            <indexterm>
                <primary>processing multi-line messages</primary>
            </indexterm>
            <indexterm>
                <primary>multi-line messages</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>regular expression</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty string</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Use the
                    <parameter>multi-line-prefix()</parameter> option to process multi-line
                messages, that is, log messages that contain newline characters (for example, Tomcat
                logs). Specify a string or regular expression that matches the beginning of the log
                messages. If the <parameter>multi-line-prefix()</parameter> option is set, &abbrev;
                ignores newline characters from the source until a line matches the regular
                expression again, and treat the lines between the matching lines as a single
                message. See also the <parameter>multi-line-garbage()</parameter> option.</para>
            <note>
                <para>Starting with &abbrev; version 3.2.1, a message is considered complete if no
                    new lines arrive to the message for 10 seconds, even if no line matching the
                        <parameter>multi-line-garbage()</parameter> option is received.</para>
            </note>
            <note>
                <para>Use as simple regular expressions as possible, because complex regular
                    expressions can severely reduce the rate of processing multi-line
                    messages.</para>
            </note>
            <tip>
                <itemizedlist>
                    <listitem>
                        <indexterm type="parameter">
                            <primary>indent-multi-line</primary>
                        </indexterm>
                        <indexterm>
                            <primary>formatting multi-line messages</primary>
                        </indexterm>
                        <indexterm>
                            <primary>multi-line messages</primary>
                        </indexterm>
                        <indexterm>
                            <primary>indenting multi-line messages</primary>
                        </indexterm>
                        <para>To make multi-line messages more readable when written to a file, use
                            a template in the destination and instead of the
                                <parameter>${MESSAGE}</parameter> macro, use the following:
                                <parameter>$(indent-multi-line ${MESSAGE})</parameter>. This
                            expression inserts a tab after every newline character (except when a
                            tab is already present), indenting every line of the message after the
                            first. For example:</para>
                        <synopsis>destination d_file {
                file ("/var/log/messages"
                        template("${ISODATE} ${HOST} $(indent-multi-line ${MESSAGE})\n") );
};</synopsis>
                        <para>For details on using templates, see <xref linkend="configuring_macros"
                            />.</para>
                    </listitem>
                    <listitem>
                        <para>To actually convert the lines of multi-line messages to single line
                            (by replacing the newline characters with whitespaces), use the
                                <parameter>flags(no-multi-line)</parameter> option in the
                            source.</para>
                    </listitem>
                </itemizedlist>
            </tip>
            <example>
                <title>Processing Tomcat logs</title>
                <indexterm>
                    <primary>multi-line messages</primary>
                </indexterm>
                <indexterm>
                    <primary>Tomcat logs</primary>
                </indexterm>
                <para>The log messages of the Apache Tomcat server are a typical example for
                    multi-line log messages. The messages start with the date and time of the query
                    in the <parameter>YYYY.MM.DD HH:MM:SS</parameter> format, as you can see in the
                    following example.</para>
                <synopsis>2010.06.09. 12:07:39 org.apache.catalina.startup.Catalina start
SEVERE: Catalina.start:
LifecycleException:  service.getName(): "Catalina";  Protocol handler start failed: java.net.BindException: Address already in use&lt;null&gt;:8080
       at org.apache.catalina.connector.Connector.start(Connector.java:1138)
       at org.apache.catalina.core.StandardService.start(StandardService.java:531)
       at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
       at org.apache.catalina.startup.Catalina.start(Catalina.java:583)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.apache.commons.daemon.support.DaemonLoader.start(DaemonLoader.java:177)
2010.06.09. 12:07:39 org.apache.catalina.startup.Catalina start
INFO: Server startup in 1206 ms
2010.06.09. 12:45:08 org.apache.coyote.http11.Http11Protocol pause
INFO: Pausing Coyote HTTP/1.1 on http-8080
2010.06.09. 12:45:09 org.apache.catalina.core.StandardService stop
INFO: Stopping service Catalina</synopsis>
                <para>To process these messages, specify a regular expression matching the timestamp
                    of the messages in the <parameter>multi-line-prefix()</parameter> option. Such
                    an expression is the following:</para>
                <synopsis>source s_file{file("/var/log/tomcat6/catalina.2010-06-09.log" follow_freq(0) multi-line-prefix("[0-9]{4}\.[0-9]{2}\.[0-9]{2}\.") flags(no-parse));};
};</synopsis>
                <para>Note that the <parameter>flags(no-parse)</parameter> is needed to avoid
                    &abbrev; trying to interpret the date in the message.</para>
            </example>
        </simplesect>
        <simplesect xml:id="source_commonoption_optional">
            <title>optional()</title>
            <indexterm type="parameter">
                <primary>optional()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Instruct syslog-ng to ignore the error if a
                specific source cannot be initialized. No other attempts to initialize the source
                will be made until the configuration is reloaded. This option currently applies to
                the <parameter>pipe()</parameter>, <parameter>unix-dgram</parameter>, and
                    <parameter>unix-stream</parameter> drivers.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_pad_size">
            <title>pad_size()</title>
            <indexterm type="parameter">
                <primary>pad_size()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies input padding. Some operating systems
                (such as HP-UX) pad all messages to block boundary. This option can be used to
                specify the block size. (HP-UX uses 2048 bytes). The &abbrev; application will pad
                reads from the associated device to the number of bytes set in
                    <parameter>pad_size()</parameter>. Mostly used on HP-UX where
                    <filename>/dev/log</filename> is a named pipe and every write is padded to 2048
                bytes. If <parameter>pad_size</parameter> was given and the incoming message does
                not fit into <parameter>pad_size</parameter>, syslog-ng will not read anymore from
                this pipe and displays the following error message:</para>
            <synopsis>Padding was set, and couldn't read enough bytes</synopsis>
        </simplesect>
        <simplesect xml:id="source_commonoption_program_override">
            <title>program_override()</title>
            <indexterm type="parameter">
                <primary>program_override()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Replaces the ${PROGRAM} part of the message with
                the parameter string. For example, to mark every message coming from the kernel,
                include the <parameter>program_override("kernel")</parameter> option in the source
                containing <parameter>/proc/kmsg</parameter>. NOTE: This option replaces the
                deprecated <parameter>log_prefix()</parameter> option.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_tags">
            <title>tags()</title>
            <indexterm type="parameter">
                <primary>tags()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Label the messages received from the source with
                custom tags. Tags must be unique, and enclosed between double quotes. When adding
                multiple tags, separate them with comma, for example <parameter>tags("dmz",
                    "router")</parameter>. This option is available only in syslog-ng 3.1 and
                later.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_time_zone">
            <title>time_zone()</title>
            <indexterm type="parameter">
                <primary>time_zone()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>timezone in +/-HH:MM format</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The default timezone for messages read from the
                source. Applies only if no timezone is specified within the message itself.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_use_dns">
            <title>use_dns()</title>
            <indexterm type="parameter">
                <primary>use_dns()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes, no, persist_only</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Enable or disable DNS usage. The
                    <parameter>persist_only</parameter> option attempts to resolve hostnames locally
                from file (for example from <filename>/etc/hosts</filename>). syslog-ng blocks on
                DNS queries, so enabling DNS may lead to a Denial of Service attack. To prevent DoS,
                protect your syslog-ng network endpoint with firewall rules, and make sure that all
                hosts which may get to syslog-ng are resolvable. This option can be specified
                globally, and per-source as well. The local setting of the source overrides the
                global option if available.</para>
        </simplesect>
        <simplesect xml:id="source_commonoption_use_fqdn">
            <title>use_fqdn()</title>
            <indexterm type="parameter">
                <primary>use_fqdn()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Add Fully Qualified Domain Name instead of short
                hostname. This option can be specified globally, and per-source as well. The local
                setting of the source overrides the global option if available.</para>
        </simplesect>
    </section>
    <section xml:id="destination-logstore-options-examples">
        <simplesect xml:id="logstore_journal_shmem_threshold">
            <title>logstore_journal_shmem_threshold()</title>
            <indexterm type="parameter">
                <primary>logstore_journal_shmem_threshold()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>536870912</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> If the size of memory (in bytes) required by
                journal files increases above this value, &abbrev; maps only a single block of every
                logstore journal into the memory. Default value: <parameter>536870912</parameter>
                (512 MB).</para>
            <para xml:id="logstore_journal_shmem_threshold_description">If the memory required for the
                journal files exceeds the <parameter>logstore_journal_shmem_threshold()</parameter>
                limit, &abbrev; will store only a single journal block of every journal file in the
                memory, and &mdash; if more blocks are needed for a journal &mdash; store the
                additional blocks on the hard disk. Opening new logstore files means allocating
                memory for one new journal block for every new file. In extreme situations involving
                large traffic, this can lead to &abbrev; consuming the entire memory of the system.
                Adjust the <parameter>journal_block_size()</parameter> and your file-naming
                conventions as needed to avoid such situations. For details on logstore journals,
                see <xref linkend="concepts_logstore_journal"/>.</para>
            <example xml:id="example-logstore-memory-threshold">
                <title>Calculating memory usage of logstore journals</title>
                <para>If you are using the default settings (4 journal blocks for every logstore
                    journal, one block is 1MB,
                        <parameter>logstore_journal_shmem_threshold()</parameter> is 512MB), this
                    means that &abbrev; will allocate 4MB memory for every open logstore file, up to
                    512MB if you have 128 open logstore files. Opening a new logstore file would
                    require 4 more megabytes of memory for journaling, bringing the total required
                    memory to 516MB, which is above the
                        <parameter>logstore_journal_shmem_threshold()</parameter>. In this case,
                    &abbrev; switches to storing only a single journal block in the memory, lowering
                    the memory requirements of journaling to 129MB. However, opening more and more
                    logstore files wil require more and more memory, and this is not limited, except
                    when &abbrev; reaches the maximum number of files that can be open (as set in
                    the <parameter>--fd-limit</parameter> command-line option).</para>
            </example>
            <example xml:id="example-logstore-memory">
                <title>Limiting the memory use of journal files</title>
                <para>The following example causes &abbrev; to map only a single journal block into
                    the host's memory if the total memory range used by logstore journals would be
                    higher than 32 MB. </para>
                <synopsis>options {
    logstore_journal_shmem_threshold(33554432);
};
destination d_messages { logstore("/var/log/messages_logstore.lgs"
                         journal_block_size(19660800)
                         journal_block_count(5)
                         );
};</synopsis>
            </example>
        </simplesect>
        <example xml:id="example-logstore-journal">
            <title>Setting journal block number and size</title>
            <para>The following example sets the size of a journal block to 512KB and increases the
                number of blocks to 5.</para>
            <synopsis>destination d_logstore {
                     logstore("/var/log/messages-logstore.lgs"
                     encrypt_certificate
                      ("/opt/syslog-ng/etc/syslog-ng/keys/public-server-certificate.pem")
                     journal_block_size(524288) journal_block_count(5));
};</synopsis>
        </example>
    </section>
    <section xml:id="destination-tcp-syslog-ssl-failover">
        <title>Failover options and examples</title>
        <simplesect xml:id="destination-failover">
            <title>failover_servers()</title>
            <indexterm type="parameter">
                <primary>failover_servers()</primary>
            </indexterm>
            <indexterm>
                <primary>secondary servers</primary>
            </indexterm>
            <indexterm>
                <primary>failover servers</primary>
            </indexterm>
            <indexterm>
                <primary>fail-over servers</primary>
            </indexterm>
            <indexterm>
                <primary>tcp failover</primary>
            </indexterm>
            <indexterm>
                <primary>fail-over</primary>
            </indexterm>
            <indexterm>
                <primary>client-side failover</primary>
            </indexterm>
            <indexterm>
                <primary>FailoverSyslogServer</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>list of IP addresses and fully-qualified domain names</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Available only in &product; 3.2 and later.
                Specifies a secondary destination server where log messages are sent if the primary
                server becomes unaccessible. To list several failover servers, separate the address
                of the servers with comma. The time &abbrev; waits for the a server before switching
                to the next failover server is set in the <parameter>time_reopen()</parameter>
                option. For details about how client-side failover works, see <xref
                    linkend="concepts_failover"/>.</para>
            <warning>
                <para>The failover servers must be accessible on the same port as the primary
                    server.</para>
            </warning>
            <note>
                <para>This option is not available for the connection-less UDP protocol, because in
                    this case the client does not detect that the destination becomes
                    unaccessible.</para>
            </note>
        </simplesect>
    </section>
    <section xml:id="table_destination_commonoptions">
        <?dbfo keep-together="auto" ?>
        <title>Common options for destination drivers</title>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary>common options</secondary>
        </indexterm>
        <simplesect xml:id="destination_commonoption_flags">
            <title>flags()</title>
            <indexterm type="parameter">
                <primary>flags()</primary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>no_multi_line</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>flags</primary>
                <secondary>syslog-protocol</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no_multi_line, syslog-protocol</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty set</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Flags influence the behavior of the destination
                driver.</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis>no-multi-line</emphasis>: The
                            <parameter>no-multi-line</parameter> flag disables line-breaking in the
                        messages; the entire message is converted to a single line.</para>
                </listitem>
                <listitem>
                    <para><emphasis>syslog-protocol</emphasis>: The <parameter>syslog-protocol</parameter> flag instructs the driver
                            to format the messages according to the new IETF syslog protocol
                            standard (RFC5424), but without the frame header. If this flag is enabled, macros used for the message have
                            effect only for the text of the message, the message header is formatted
                            to the new standard. Note that this flag is not needed for the
                                <parameter>syslog</parameter> driver, and that the <parameter>syslog</parameter> driver automatically adds the frame header to the messages.</para>
                </listitem>
            </itemizedlist>
        </simplesect>
        <simplesect xml:id="destination_commonoption_flush_lines">
            <title>flush_lines()</title>
            <indexterm type="parameter">
                <primary>flush_lines()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use global setting.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the maximum number of messages sent in a single batch during a transaction. The syslog-ng application can send less messages in a batch to keep continuous message transfer when it is possible, if it does not receive more messages.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_flush_timeout">
            <title>flush_timeout() (DEPRECATED)</title>
            <indexterm type="parameter">
                <primary>flush_timeout()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>time in milliseconds</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use global setting.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> This is a deprecated option. Specifies the time syslog-ng waits for lines to
                accumulate in its output buffer. For details, see the
                    <parameter>flush_lines</parameter> option.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_frac_digits">
            <title>frac_digits()</title>
            <indexterm type="parameter">
                <primary>frac_digits()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The syslog-ng application can store fractions of
                a second in the timestamps according to the ISO8601 format.. The
                    <parameter>frac_digits()</parameter> parameter specifies the number of digits
                stored. The digits storing the fractions are padded by zeros if the original
                timestamp of the message specifies only seconds. Fractions can always be stored for
                the time the message was received. Note that syslog-ng can add the fractions to
                non-ISO8601 timestamps as well.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_fsync">
            <title>fsync()</title>
            <indexterm type="parameter">
                <primary>fsync()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Forces an <parameter>fsync()</parameter> call on
                the destination fd after each write. Note: enabling this option may seriously
                degrade performance.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_local_timezone">
            <title>local_time_zone()</title>
            <indexterm type="parameter">
                <primary>local_time_zone()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>name of the timezone or the timezone offset</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>The local timezone.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Sets the timezone used when expanding filename
                and tablename templates. The timezone can be specified as using the name of the (for
                example <parameter>time_zone("Europe/Budapest")</parameter>), or as the timezone
                offset (for example <parameter>+01:00</parameter>). The valid timezone names are
                listed under the <filename>/usr/share/zoneinfo</filename> directory.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_log_fifo_size">
            <title>log_fifo_size()</title>
            <indexterm type="parameter">
                <primary>log_fifo_size()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use global setting.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> The number of messages that the output queue can
                store.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_keep_alive">
            <title>keep-alive()</title>
            <indexterm type="parameter">
                <primary>keep-alive()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies whether connections to destinations
                should be closed when syslog-ng is reloaded.
                Note that this applies to the client (destination) side of the syslog-ng
                connections, server-side (source) connections are always reopened after receiving a
                HUP signal unless the <parameter>keep-alive</parameter> option is enabled for the
                source.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_pad_size">
            <title>pad_size()</title>
            <indexterm type="parameter">
                <primary>pad_size()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> If set, &abbrev; will pad output messages to the
                specified size (in bytes). Some operating systems (such as HP-UX) pad all messages
                to block boundary. This option can be used to specify the block size. (HP-UX uses
                2048 bytes).</para>
            <warning>
                <para>Hazard of data loss! If the size of the incoming message is larger than the
                    previously set pad_size value, syslog-ng will truncate the message to the
                    specified size. Therefore, all message content above that size will be
                    lost.</para>
            </warning>
        </simplesect>
        <simplesect xml:id="destination_commonoption_suppress">
            <title>suppress()</title>
            <indexterm type="parameter">
                <primary>suppress()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>seconds</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0 (disabled)</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> If several identical log messages would be sent
                to the destination without any other messages between the identical messages (for
                example, an application repeated an error message ten times), syslog-ng can suppress
                the repeated messages and send the message only once, followed by the
                    <parameter>Last message repeated n times.</parameter> message. The parameter of
                this option specifies the number of seconds syslog-ng waits for identical
                messages.</para>
        </simplesect>
        <!--<row xml:id="destination_commonoption_sync_freq">
                    <entry>sync_freq()</entry>
                    <entry>number</entry>
                    <entry>Use global setting. </entry>
                    <entry>This setting is an obsolete alias of the
                        <parameter>flush_lines()</parameter> option. </entry>
                        </row>-->
        <simplesect xml:id="destination_commonoption_template">
            <title>template()</title>
            <indexterm type="parameter">
                <primary>template()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>A format conforming to the default logfile format.</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies a template defining the logformat to
                be used in the destination. Macros are described in <xref linkend="reference_macros"
                />. Please note that for network destinations it might not be appropriate to change
                the template as it changes the on-wire format of the syslog protocol which might not
                be tolerated by stock syslog receivers (like <parameter>syslogd</parameter> or
                syslog-ng itself). For network destinations make sure the receiver can cope with the
                custom format defined.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_template_escape">
            <title>template_escape()</title>
            <indexterm type="parameter">
                <primary>template_escape()</primary>
            </indexterm>
            <!-- FIXME ez kell meg? -->
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Turns on escaping for the
                    <parameter>'</parameter>, <parameter>"</parameter>, and backspace characters in
                templated output files. This is useful for generating SQL statements and quoting
                string contents so that parts of the log message are not interpreted as commands to
                the SQL server.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_throttle">
            <title>throttle()</title>
            <indexterm type="parameter">
                <primary>throttle()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Sets the maximum number of messages sent to the destination per second.
                        Use this output-rate-limiting functionality only when using <phrase condition="pe">disk-buffer</phrase><phrase condition="ose">large enough buffers</phrase> as
                        well to avoid the risk of losing messages. Specifying
                        <parameter>0</parameter> or a lower value sets the output limit to
                        unlimited.</para>
        </simplesect>
        <simplesect xml:id="destination_commonoption_ts_format">
            <title>ts_format()</title>
            <indexterm type="parameter">
                <primary>ts_format()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>rfc3164, bsd, rfc3339, iso</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>rfc3164</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Override the global timestamp format (set in the
                global <parameter>ts_format()</parameter> parameter) for the specific destination.
                For details, see <xref linkend="example_timezones"/>.</para>
        </simplesect>
    </section>

    <!-- Warning on fd limits -->
    <section>
        <title/>
        <warning xml:id="warning-fd-ulimit">
            <indexterm>
                <primary>number of open files</primary>
            </indexterm>
            <indexterm>
                <primary>ulimit</primary>
            </indexterm>
            <indexterm>
                <primary>fd limit</primary>
            </indexterm>
            <indexterm>
                <primary>file descriptors</primary>
            </indexterm>
            <para>When creating several thousands separate log files, syslog-ng might not be able to
                open the required number of files. This might happen for example when using the
                    <parameter>${HOST}</parameter> macro in the filename while receiving messages from
                a large number of hosts. To overcome this problem, adjust the
                    <parameter>--fd-limit</parameter> comman-line parameter of syslog-ng or the
                global ulimit parameter of your host. For setting the
                    <parameter>--fd-limit</parameter> comman-line parameter of syslog-ng see the
                    <xref linkend="syslog-ng.8"/> manual page. For setting the
                    <parameter>ulimit</parameter> parameter of the host, see the documentation of
                your operating system.</para>
        </warning>
    </section>

    <!-- Relaying note about keep_hostname-->
    <section>
        <title/>
        <note xml:id="note-relaying-hostname">
        <para>By default, the syslog-ng server will treat the relayed messages as if they were
            created by the relay host, not the host that originally sent them to the relay. In order
            to use the original hostname on the syslog-ng server, use the
                <parameter>keep_hostname(yes)</parameter> option both on the syslog-ng relay and the
            syslog-ng server. This option can be set individually for every source if needed.</para>
        </note>
    </section>

    <section>
        <title/>
        <warning xml:id="warning-sql-source-customized-queries">
            <para>The &abbrev; application does not validate or limit the contents of customized queries. Consequently, queries performed with a user with write-access can potentially modify or even harm the database. Use customized queries with care, and only for your own responsibility.</para>
        </warning>
    </section>

    <warning xml:id="destination-sql-mssql-columntype">
        <para>The following column types cannot be used in MSSQL destinations: <parameter>nchar</parameter>, <parameter>nvarchar</parameter>, <parameter>ntext</parameter>, and <parameter>xml</parameter>.</para>
    </warning>

    <!-- Note and warning about limiting the number of processors from 4F2-->

    <section>
        <title/>
        <note xml:id="note-limit-processors" condition="pe"><para>From 4 F2, &abbrev; will limit the number of processors/cores used by &abbrev;. It is limited in the license file, through the <parameter>Max-Processors</parameter> entry. The &abbrev; will use the value of this entry as the maximum number of the <parameter>--worker-threads</parameter> command line option.</para>
            <itemizedlist xml:id="note-limit-processors-list">
                <para>In the license file required to operate &product; in server mode, the <parameter>Max-Processors value</parameter> is listed as one of the following:</para>
                <listitem><para><parameter>-1</parameter>: maximum number of worker threads is unlimited</para></listitem>
                <listitem><para><parameter>0</parameter>: maximum number of worker threads is 2 (default value for LSH license)</para></listitem>
                <listitem><para><parameter>&lt;any value&gt;</parameter>: maximum number of worker threads is the set value</para></listitem>
            </itemizedlist>
        </note>
        <warning xml:id="warning-limit-processors"><para condition="pe">The <parameter>Max-Processors</parameter> entry is only a soft limit in relation to the number of used processors, because it will limit only the number of the worker-threads that affect the performance. However, &abbrev; can start other threads (for example mainthread) that can use other processors.</para></warning>
    </section>

</chapter>
