<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE article
  [
  <!ENTITY % entities SYSTEM "../shared/syslog-ng-entities.ent">
  %entities;
  ]
 >
<section xml:id="preface" xmlns="http://docbook.org/ns/docbook">
    <title>Introduction</title>
    <para><xi:include href="../xml-stylesheet/common/copyright.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>The &wec; (&wecabbrev;) acts as a log collector and forwarder tool for the Microsoft Windows platform. It collects the log messages of Windows-based hosts over HTTPS (using TLS encryption and mutual authentication), and forwards them to a &abbrev; server. In Windows terminology, this tool allows you to define source-initiated subscriptions, and have them forwarded to a &abbrev; server.</para>
    <para>Unlike the <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://syslog-ng.com/documents/html/syslog-ng-pe-6.0-guides/en/syslog-ng-windows-agent-guide-admin/html/index.html">&agent;</link>, the &wec; is a standalone tool that does not require installing on the Windows-based host itself. This can be an advantage when your organization's policies restrict or do not allow the installation of third-party tools.</para>
    <para>Another difference between the &wec; tool and &agent; is that &wecabbrev; forwards logs only about Windows events, while &agentabbrev; forwards both Windows event logs as well as files from Windows hosts to the &abbrev; server.</para>
    <para>The &wec; sits between your Windows hosts and your &product; server, accepting log messages from the remote Windows side with WinRM and feeding them to &product; 7.0.</para>
    <figure>
        <title>How &wec; works in &abbrev; 7.0</title>
        <mediaobject>
            <imageobject role="html">
                <imagedata format="PNG" fileref="wec-topology.png"/>
            </imageobject>
            <imageobject role="fo">
                <imagedata format="PNG" fileref="&imgroot;/wec-topology.png" contentwidth="&screenshotsize;"/>
            </imageobject>
        </mediaobject>
    </figure>
    <para>At a high level, this is how you can get Windows event logs to be forwarded to your &product; server using the &wecabbrev; tool:</para>
    <orderedlist>
        <listitem>
            <para>Configure Windows event source computers.</para>
            <para>For details on how to configure your Windows hosts, see <xref linkend="wec-configure-event-source-computers"/>.</para>
        </listitem>
        <listitem>
            <para>Set up the &wec; as the server that collects and forwards event logs.</para>
            <para>For details on how to set up and configure the &wec; tool, see <xref linkend="wec-install"/>, <xref linkend="wec-generate-certs"/>, and <xref linkend="wec-configure"/>.</para>
        </listitem>
        <listitem>
            <para>The &wec; accepts incoming event log subscription requests from the Windows hosts.</para>
        </listitem>
        <listitem>
            <para>The &wec; handshakes the event forwarding settings with the Windows hosts, for example, which events to forward.</para>
        </listitem>
        <listitem>
            <para>The &wec; accepts the forwarded event logs, and writes the raw logs to a Unix datagram socket.</para>
        </listitem>
        <listitem>
            <para>&abbrev; reads the Unix datagram socket using a source called <parameter>windowsevent()</parameter>.</para>
            <para>For details on how to configure your &abbrev; server, see <xref linkend="wec-configure-syslog-ng"/>.</para>
        </listitem>
        <listitem>
            <para>&abbrev; parses the logs into key-value pairs using the XML parser.</para>
            <para>For details on the XML parser, see <olink targetdoc="syslog-ng-pe-guide-admin" targetptr="xml-parser"/>.</para>
        </listitem>
    </orderedlist>
</section>
