<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
 [  <!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]>
<topic xmlns="http://docbook.org/ns/docbook" version="5.0">
    <para>The &abbrev; application can separate parts of log messages (that is, the contents of the ${MSG} macro) at delimiter characters or strings to named fields (columns). One way to achieve this is to use a csv (comma-separated-values) parser (for other methods and possibilities, see the other sections of <xref linkend="chapter-parsers"/>. The parsed fields act as user-defined macros that can be referenced in message templates, file- and tablenames, and so on.</para>
    <para>Parsers are similar to filters: they must be defined in the &abbrev; configuration file and used in the log statement. You can also define the parser inline in the log path.</para>
    <xi:include href="../wnt/note-element-order.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <para>To create a <parameter>csv-parser()</parameter>, you have to define the columns of the message, the separator characters or strings (also called delimiters, for example, semicolon or tabulator), and optionally the characters that are used to escape the delimiter characters (<parameter>quote-pairs()</parameter>).</para>
    <indexterm>
        <primary>csv-parser()</primary>
    </indexterm>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>parser &lt;parser_name&gt; {
            csv-parser(
            columns(column1, column2, ...)
            delimiters(chars("&lt;delimiter_characters&gt;"), strings("&lt;delimiter_strings&gt;"))
            );
        };</synopsis>
    <para>Column names work like macros. Always use a prefix to identify the columns of the parsers, for example <userinput>MYPARSER1.COLUMN1, MYPARSER2.COLUMN2</userinput>, and so on. Column names starting with a dot (for example <userinput>.HOST</userinput>) are reserved for use by &abbrev;. If you use such a macro name as a column name, it will attempt to replace the original value of the macro (note that only soft macros can be overwritten, see <xref linkend="macros-hard-vs-soft"/> for details).</para>
</topic>
