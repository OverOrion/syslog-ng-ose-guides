<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
 [  <!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]>
<topic xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>spoof-interface()</title>
    <indexterm>
        <primary>spoof-interface()</primary>
    </indexterm>
    <indexterm>
        <primary>spoof_interface()</primary>
    </indexterm>
    <informaltable frame="topbot" colsep="0" rowsep="0">
        <tgroup cols="2">
            <colspec colnum="1" colwidth="40pt"/>
            <tbody>
                <row>
                    <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                    </entry>
                    <entry>string (the name of the interface)</entry>
                </row>
                <row>
                    <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                    </entry>
                    <entry>empty</entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <para><emphasis role="bold">Description:</emphasis> Specifies the name of the interface that is used to send the spoofed messages. Using this option is required only on Microsoft Windows platforms. The name of the interface is the internal device identifier used by WinPcap, which has absolutely no relation to any other possible device identifiers used by Windows. To determine the identifier of the interface, download and install the WinPcap application from <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://www.winpcap.org/">http://www.winpcap.org/</link>, then execute the <filename>iflist.exe</filename> file that is installed with &abbrev;. A sample of the <filename>iflist.exe</filename> output is shown below. The first line is the identifier of the interface, but note that you need use an extra backslash character. For example, if the identifier is <userinput>\Device\NPF_{ADE8ECA1-183A-43A2-AF01-9C81ABB4A4C1}</userinput>, you must use <userinput>spoof-interface("\\Device\\NPF_{ADE8ECA1-183A-43A2-AF01-9C81ABB4A4C1}"</userinput> in the configuration file of &abbrev;.</para>
    <synopsis>\Device\NPF_{ADE8ECA1-183A-43A2-AF01-9C81ABB4A4C1}
        Description: VMware Accelerated AMD PCNet Adapter (Microsoft's Packet Scheduler)
        Loopback: no
        Address Family: #2
        Address Family Name: AF_INET
        Address: 192.168.250.1
        Netmask: 255.255.255.0
        Broadcast Address: 255.255.255.255</synopsis>
    <example>
        <title>Spoofing the source address on Microsoft Windows</title>
        <indexterm>
            <primary>spoofing</primary>
            <secondary>on Microsoft Windows</secondary>
        </indexterm>
        <indexterm>
            <primary>spoof source</primary>
            <secondary>on Microsoft Windows</secondary>
        </indexterm>
        <para>The following UDP destination spoofs the address of the original client. On Microsoft Windows platforms, the <parameter>spoof-interface()</parameter> option must be also set.</para>
        <synopsis>destination d_udp {
    network("10.30.0.32" port(5555)
        transport("udp")
        spoof-source(yes)
        spoof-interface("\\Device\\NPF_{578D4231-71C1-470F-AFFE-2CB1E5BC35A8}")
    );
};</synopsis>
    </example>
    <warning>
        <para>To use spoofing, you must also use the <userinput>spoof-source(yes)</userinput> option.</para>
    </warning>
</topic>
