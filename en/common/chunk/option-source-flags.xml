<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
 [  <!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]>
<topic xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>flags()</title>
    <indexterm type="parameter">
        <primary>flags()</primary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>assume-utf8</secondary>
    </indexterm>
    <indexterm>
        <primary>flags</primary>
        <secondary>empty-lines</secondary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>expect-hostnames</secondary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>kernel</secondary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>no-hostname</secondary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>no-multi-line</secondary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>no-parse</secondary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>sanitize-utf8</secondary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>store-legacy-msghdr</secondary>
    </indexterm>
    <indexterm type="parameter">
        <primary>flags</primary>
        <secondary>validate-utf8</secondary>
    </indexterm>
    <informaltable frame="topbot" colsep="0" rowsep="0">
        <tgroup cols="2">
            <colspec colnum="1" colwidth="40pt"/>
            <tbody>
                <row>
                    <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                    </entry>
                    <entry>assume-utf8, empty-lines, expect-hostname, kernel, no-hostname, no-multi-line, no-parse, sanitize-utf8, store-legacy-msghdr, syslog-protocol, validate-utf8</entry>
                </row>
                <row>
                    <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                    </entry>
                    <entry>empty set</entry>
                </row>
            </tbody>
        </tgroup>
    </informaltable>
    <para><emphasis role="bold">Description:</emphasis> Specifies the log parsing options of the source.</para>
    <itemizedlist>
        <listitem>
            <para><emphasis>assume-utf8</emphasis>: The <parameter>assume-utf8</parameter> flag assumes that the incoming messages are UTF-8 encoded, but does not verify the encoding. If you explicitly want to validate the UTF-8 encoding of the incoming message, use the <parameter>validate-utf8</parameter> flag.</para>
        </listitem>
        <listitem>
            <para><emphasis>empty-lines</emphasis>: Use the <parameter>empty-lines</parameter> flag to keep the empty lines of the messages. By default, &abbrev; removes empty lines automatically.</para>
        </listitem>
        <listitem>
            <para><emphasis>expect-hostname</emphasis>: If the <parameter>expect-hostname</parameter> flag is enabled, &abbrev; will assume that the log message contains a hostname and parse the message accordingly. This is the default behavior for TCP sources. Note that pipe sources use the <parameter>no-hostname</parameter> flag by default.</para>
        </listitem>
        <listitem>
            <para><emphasis>kernel</emphasis>: The <parameter>kernel</parameter> flag makes the source default to the <userinput>LOG_KERN | LOG_NOTICE</userinput> priority if not specified otherwise.</para>
        </listitem>
        <listitem>
            <para><emphasis>no-hostname</emphasis>: Enable the <parameter>no-hostname</parameter> flag if the log message does not include the hostname of the sender host. That way &abbrev; assumes that the first part of the message header is ${PROGRAM} instead of ${HOST}. For example:</para>
            <synopsis>source s_dell { network(port(2000) flags(no-hostname)); };</synopsis>
        </listitem>
        <listitem>
            <para><emphasis>no-multi-line</emphasis>: The <parameter>no-multi-line</parameter> flag disables line-breaking in the messages: the entire message is converted to a single line. Note that this happens only if the underlying transport method actually supports multi-line messages. Currently the <parameter><phrase condition="pe">rltp</phrase></parameter>, <parameter>syslog()</parameter>, <parameter>network()</parameter>, <parameter>unix-dgram()</parameter> drivers support multi-line messages.</para>
        </listitem>
        <listitem>
            <para><emphasis>no-parse</emphasis>: By default, &abbrev; parses incoming messages as syslog messages. The <parameter>no-parse</parameter> flag completely disables syslog message parsing and processes the complete line as the message part of a syslog message. The &abbrev; application will generate a new syslog header (timestamp, host, and so on) automatically and put the entire incoming message into the MSG part of the syslog message. This flag is useful for parsing messages not complying to the syslog format.</para>
            <xi:include href="para-flags-no-parse.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </listitem>
        <listitem>
            <para><emphasis>dont-store-legacy-msghdr</emphasis>: By default, syslog-ng stores the original incoming header of the log message. This is useful of the original format of a non-syslog-compliant message must be retained (syslog-ng automatically corrects minor header errors, for example, adds a whitespace before <userinput>msg</userinput> in the following message: <userinput>Jan 22 10:06:11 host program:msg</userinput>). If you do not want to store the original header of the message, enable the <parameter>dont-store-legacy-msghdr</parameter> flag.</para>
        </listitem>
        <listitem>
            <para><emphasis>sanitize-utf8</emphasis>: When using the <parameter>sanitize-utf8</parameter> flag, &abbrev; converts non-UTF-8 input to an escaped form, which is valid UTF-8.</para>
        </listitem>
        <listitem>
            <para><emphasis>syslog-protocol</emphasis>: The <parameter>syslog-protocol</parameter> flag specifies that incoming messages are expected to be formatted according to the new IETF syslog protocol standard (RFC5424), but without the frame header. Note that this flag is not needed for the <parameter>syslog</parameter> driver, which handles only messages that have a frame header.</para>
        </listitem>
        <listitem>
            <para><emphasis>validate-utf8</emphasis>: The <parameter>validate-utf8</parameter> flag enables encoding-verification for messages formatted according to the new IETF syslog standard (for details, see <xref linkend="concepts-message-ietfsyslog"/>). If the<glossterm linkend="glossary-bom" role="underline">BOM</glossterm><footnote>
                <xi:include href="para-bom-definition.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </footnote>character is missing, but the message is otherwise UTF-8 compliant, syslog-ng automatically adds the BOM character to the message.</para>
        </listitem>
    </itemizedlist>
</topic>
