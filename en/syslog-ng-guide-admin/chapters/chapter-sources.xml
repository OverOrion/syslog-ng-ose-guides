<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
 [
 <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<chapter xml:id="chapter-sources" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Collecting log messages &mdash; sources and source drivers</title>
    <indexterm>
        <primary>source drivers</primary>
        <secondary>reference</secondary>
    </indexterm>

    <section xml:id="sources">
        <title>How sources work</title>
        <indexterm significance="preferred">
            <primary>sources</primary>
        </indexterm>
        <indexterm significance="preferred">
            <primary>source drivers</primary>
        </indexterm>
        <para>A source is where syslog-ng receives log messages. Sources consist of one or more drivers, each defining where and how messages are received.</para>
        <para>To define a source, add a source statement to the syslog-ng configuration file using the following syntax: <indexterm>
                <primary>destinations</primary>
                <secondary>defining</secondary>
            </indexterm>
            <synopsis>source &lt;identifier&gt; { source-driver(params); source-driver(params); ... };</synopsis>
        </para>
        <example>
            <title>A simple source statement</title>
            <para>The following source statement receives messages on the TCP port <userinput>1999</userinput> of the interface having the <userinput>10.1.2.3</userinput> IP address.</para>
            <synopsis>source s_demo_tcp { tcp(ip(10.1.2.3) port(1999)); };</synopsis>
        </example>
        <example>
            <title>A source statement using two source drivers</title>
            <para>The following source statement receives messages on the <userinput>1999</userinput> TCP port and the <userinput>1999</userinput> UDP port of the interface having the <userinput>10.1.2.3</userinput> IP address.</para>
            <synopsis>source s_demo_two_drivers {
           tcp(ip(10.1.2.3) port(1999));
           udp(ip(10.1.2.3) port(1999)); };</synopsis>
        </example>
        <example>
            <title>Setting default priority and facility</title>
            <indexterm>
                <primary>setting facility</primary>
            </indexterm>
            <indexterm>
                <primary>overriding facility</primary>
            </indexterm>
            <para>If the message received by the source does not have a proper syslog header, you can use the <parameter>default-facility()</parameter> and <parameter>default-priority()</parameter> options to set the facility and priority of the messages. Note that these values are applied only to messages that do not set these parameters in their header.</para>
            <synopsis>source headerless_messages { udp(default-facility(syslog) default-priority(emerg)); };</synopsis>
        </example>

        <para>Define a source only once. The same source can be used in several log paths. Duplicating sources causes syslog-ng to open the source (TCP/IP port, file, and so on) more than once, which might cause problems. For example, include the <filename>/dev/log</filename> file source only in one source statement, and use this statement in more than one log path if needed. </para>
        <note>
            <para>Sources and destinations are initialized only when they are used in a log statement. For example, &abbrev; starts listening on a port or starts polling a file only if the source is used in a log statement. For details on creating log statements, see <xref linkend="chapter-routing-filters"/>.</para>
        </note>
        <para>To collect log messages on a specific platform, it is important to know how the native <parameter>syslogd</parameter> communicates on that platform. The following table summarizes the operation methods of <parameter>syslogd</parameter> on some of the tested platforms:</para>
        <!-- FIXME belevenni a hianyzo, de tamogatott platformokat, es forrasokat pl. AIX, HP-UX, ...
        osszegyujteni, hogy az egyes platformokon milyen forrasokat kell felvenni ahhoz,
            hogy a syslog-ng a nativ syslog funkcionalitasat tudja
        -->
        <table>
            <title>Communication methods used between the applications and syslogd</title>
            <indexterm>
                <primary>sources</primary>
                <secondary>on different platforms</secondary>
            </indexterm>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Platform</entry>
                        <entry>Method</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>Linux</entry>
                        <entry>A <parameter>SOCK_STREAM</parameter> unix socket named <filename>/dev/log</filename>; some of the distributions switched over to using <parameter>SOCK_DGRAM</parameter>, though applications still work with either method. </entry>
                    </row>
                    <row>
                        <entry>BSD flavors</entry>
                        <entry>A <parameter>SOCK_DGRAM</parameter> unix socket named <filename>/var/run/log</filename>.</entry>
                    </row>
                    <row>
                        <entry>Solaris (2.5 or below)</entry>
                        <entry>An SVR4 style <parameter>STREAMS</parameter> device named <filename>/dev/log</filename>.</entry>
                    </row>
                    <row>
                        <entry>Solaris (2.6 or above)</entry>
                        <entry>In addition to the <parameter>STREAMS</parameter> device used in earlier versions, 2.6 uses a new multithreaded IPC method called door. By default the door used by <parameter>syslogd</parameter> is <filename>/etc/.syslog_door</filename>. </entry>
                    </row>
                    <row>
                        <entry>Windows</entry>
                        <entry>Special Eventlog containers that can be accessed using the proprietary API of Microsoft.</entry>
                    </row>
                    <row>
                        <entry>HP-UX 11 or later</entry>
                        <entry>HP-UX uses a named pipe called <filename>/dev/log</filename> that is padded to 2048 bytes, for example <userinput>source s_hp-ux {pipe ("/dev/log" pad_size(2048)}</userinput>.</entry>
                    </row>
                    <row>
                        <!-- FIXME -->
                        <entry>AIX 5.2 and 5.3</entry>
                        <entry>A <parameter>SOCK_STREAM</parameter> or <parameter>SOCK_DGRAM</parameter> unix socket called <filename>/dev/log</filename>.</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <para>Each possible communication mechanism has a corresponding source driver in syslog-ng. For example, to open a unix socket with <parameter>SOCK_DGRAM</parameter> style communication use the driver <parameter>unix-dgram</parameter>. The same socket using the <parameter>SOCK_STREAM</parameter> style &mdash; as used under Linux &mdash; is called <parameter>unix-stream</parameter>. </para>
        <example>
            <title>Source statement on a Linux based operating system</title>
            <para>The following source statement collects the following log messages:</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis>internal()</emphasis>: Messages generated by syslog-ng.</para>
                </listitem>
                <listitem>
                    <para><emphasis>udp(ip(0.0.0.0) port(514))</emphasis>: Messages arriving to the <userinput>514/UDP</userinput> port of any interface of the host.</para>
                </listitem>
                <listitem>
                    <para><emphasis>unix-stream("/dev/log");</emphasis>: Messages arriving to the <filename>/dev/log</filename> socket.</para>
                </listitem>
            </itemizedlist>
            <synopsis>source s_demo {
           internal();
           udp(ip(0.0.0.0) port(514));
           unix-stream("/dev/log"); };</synopsis>
        </example>
        <para>The following table lists the source drivers available in syslog-ng.</para>
        <xi:include href="../../common/chunk/table-source-drivers.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    </section>

    <xi:include href="source-eventlog.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>

    <section xml:id="configuring-sources-internal">
        <title>Collecting internal messages</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>internal()</parameter> driver</secondary>
        </indexterm>
        <para>All messages generated internally by syslog-ng use this special source. To collect warnings, errors and notices from syslog-ng itself, include this source in one of your source statements. </para>
        <synopsis>internal()</synopsis>
        <para>The syslog-ng application will issue a warning upon startup if none of the defined log paths reference this driver. </para>
        <example xml:id="example-source-internal">
            <title>Using the internal() driver</title>
            <synopsis>source s_local { internal(); };</synopsis>
        </example>
        <formalpara>
            <title>The &abbrev; application sends the following message types from the internal() source:</title>
            <para/>
        </formalpara>
        <itemizedlist>
            <listitem>
                <para><emphasis>fatal</emphasis>: Priority value: critical (2); Facility value: syslog (5)</para>
            </listitem>
            <listitem>
                <para><emphasis>error</emphasis>: Priority value: error (3); Facility value: syslog (5)</para>
            </listitem>
            <listitem>
                <para><emphasis>warning</emphasis>: Priority value: warning (4); Facility value: syslog (5)</para>
            </listitem>
            <listitem>
                <para><emphasis>notice</emphasis>: Priority value: notice (5); Facility value: syslog (5)</para>
            </listitem>
            <listitem>
                <para><emphasis>info</emphasis>: Priority value: info (6); Facility value: syslog (5)</para>
            </listitem>
        </itemizedlist>
        <section xml:id="reference-source-internal">
            <title>internal() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>internal()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>internal()</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-syslogng-pid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-sources-file">
        <title>Collecting messages from text files</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>file()</parameter> driver</secondary>
        </indexterm>
        <para>Collects log messages from plain-text files, for example from the logfiles of an Apache webserver.</para>
        <para>The syslog-ng application notices if a file is renamed or replaced with a new file, so it can correctly follow the file even if logrotation is used. When syslog-ng is restarted, it records the position of the last sent log message in the <filename>/opt/syslog-ng/var/syslog-ng.persist</filename> file, and continues to send messages from this position after the restart.</para>
        <para>The file driver has a single required parameter specifying the file to open. For the list of available optional parameters, see <xref linkend="reference-source-file"/>.</para>
        <synopsis>Declaration:
            file(filename);</synopsis>
        <indexterm condition="pe">
            <primary>wildcards</primary>
            <secondary>in file sources</secondary>
        </indexterm>
        <para xml:id="reference-file-wildcard" condition="pe">In &abbrev;, the filename (but not the pathname) may include wildcard characters (for example <userinput>*</userinput>). Note that when using wildcards in filenames, always set how often syslog-ng should check the file for new messages using the <parameter>follow_freq()</parameter> parameter.</para>
        <para xml:id="reference-file-wildcard-inotify" condition="pe">When using wildcards, syslog-ng PE monitors every matching file, and can receive new log messages from any of the files. However, monitoring (polling) many files (that is, more than ten) has a significant overhead and may affect performance. On Linux this overhead is not so significant, because &abbrev; uses the inotify feature of the kernel.</para>
        <example xml:id="example-source-file">
            <title>Using the file() driver</title>
            <synopsis>source s_file { file("/var/log/messages"); };</synopsis>
            <xi:include href="../../common/wnt/note-windows-filenames.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </example>
        <example>
            <title>Tailing files</title>
            <para>The following source checks the <filename>access.log</filename> file every second for new messages.</para>
            <synopsis>source s_tail { file("/var/log/apache/access.log"
            follow_freq(1) flags(no-parse)); };</synopsis>
        </example>
        <example xml:id="example-source-file-wildcard" condition="pe">
            <title>Using wildcards in the filename</title>
            <para>The following example monitors every file with the <filename>.log</filename> extension in the <filename>/var/application</filename> directory for log messages. Note that only syslog-ng PE supports wildcards in the file and pathnames.</para>
            <synopsis>source s_file { file("/var/application/*.log" follow_freq(1));};</synopsis>
        </example>
        <note>
            <para>If the message does not have a proper syslog header, syslog-ng treats messages received from files as sent by the <parameter>kern</parameter> facility. Use the <parameter>default-facility</parameter> and <parameter>default-priority</parameter> options in the source definition to assign a different facility if needed.</para>
        </note>
        <section xml:id="kernel-messages">
            <title>Notes on reading kernel messages</title>
            <para>Note the following points when reading kernel messages on various platforms.</para>
            <itemizedlist>
                <indexterm>
                    <primary>kmsg</primary>
                </indexterm>
                <listitem>
                    <para>The kernel usually sends log messages to a special file (<filename>/dev/kmsg</filename> on BSDs, <filename>/proc/kmsg</filename> on Linux). The <parameter>file()</parameter> driver reads log messages from such files. The syslog-ng application can periodically check the file for new log messages if the <parameter>follow_freq()</parameter> option is set. </para>
                </listitem>
                <listitem>
                    <indexterm>
                        <primary>klogd</primary>
                    </indexterm>
                    <para>On Linux, the <parameter>klogd</parameter> daemon can be used in addition to syslog-ng to read kernel messages and forward them to syslog-ng. <parameter>klogd</parameter> used to preprocess kernel messages to resolve symbols and so on, but as this is deprecated by <parameter>ksymoops</parameter> there is really no point in running both <parameter>klogd</parameter> and syslog-ng in parallel. Also note that running two processes reading <filename>/proc/kmsg</filename> at the same time might result in dead-locks. </para>
                </listitem>
                <listitem>
                    <para>When using syslog-ng to read messages from the <filename>/proc/kmsg</filename> file, syslog-ng automatically disables the <parameter>follow_freq()</parameter> parameter to avoid blocking the file.</para>
                </listitem>
                <listitem>
                    <para>To read the kernel messages on HP-UX platforms, use the following options in the source statement:</para>
                    <synopsis>file("/dev/klog" program_override("kernel") flags(kernel) follow_freq(0));</synopsis>
                </listitem>
            </itemizedlist>
        </section>
        <section xml:id="file-source-and-syslog-destination">
            <title>File sources and the RFC5424 message format</title>
            <indexterm>
                <primary>file@18372.4</primary>
            </indexterm>
            <indexterm>
                <primary>SDATA</primary>
                <secondary>file@18372.4</secondary>
            </indexterm>
            <indexterm>
                <primary>file information</primary>
                <secondary>file@18372.4</secondary>
            </indexterm>
            <indexterm>
                <primary>including filename in messages</primary>
            </indexterm>
            <para>When reading messages from a file and forwarding them in IETF-syslog (RFC5424) format, &abbrev; automatically adds all file-related information to the <userinput>file@18372.4</userinput> SDATA block. When the source is file and the transport protocol is syslog or syslog-protocol flags were used in the destination side, the message will contain the following source file-related information:</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis>size</emphasis>: size of the file</para>
                </listitem>
                <listitem>
                    <para><emphasis>position</emphasis>: file position the message was read from</para>
                </listitem>
                <listitem>
                    <para><emphasis>name</emphasis>: name of the file </para>
                </listitem>
            </itemizedlist>
            <example>
                <title>File-related information in message</title>
                <para><synopsis>309 &lt;38&gt;1 2010-10-19T15:50:45.018203+02:00 server1 localprg 1234 - [timeQuality isSynced="0" tzKnown="0"][file@18372.4 size="184567" pos="1024" name="/var/tmp/msg.txt"] seq: 0000000001, runid: 1287496244, stamp: 2010-10-19T15:50:45 messagetext</synopsis></para>
            </example>
        </section>
        <section xml:id="reference-source-file">
            <title>file() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>file()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>file()</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-default-facility.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <para condition="pe"><emphasis role="bold">Description:</emphasis> This parameter assigns a facility value to the messages received from the file source, if the message does not specify one.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-default-priority.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>file()</title>
                <indexterm type="parameter">
                    <primary>file()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The file to read messages from, including the path.</para>
                <xi:include href="../../common/wnt/note-windows-filenames.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-encoding.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-multi-line-garbage.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect condition="pe">
                <xi:include href="../../common/chunk/option-source-multi-line-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>read_old_records()</title>
                <indexterm type="parameter">
                    <primary>read_old_records()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes|no</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> If set to <userinput>yes</userinput>, &abbrev; will start reading the records from the beginning of the file, if the file has not been read yet. If set to <userinput>no</userinput>, &abbrev; will read only the new records. If the source has a state in the persist file, this option will have no effect.</para>
            </simplesect>
            <simplesect xml:id="source-file-recursive" condition="pe">
                <title>recursive</title>
                <indexterm type="parameter">
                    <primary>recursive</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes or no</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>no</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> When enabled, &abbrev; monitors every subdirectory of the directory set in the path of the <parameter>file</parameter> parameter, and reads log messages from files with the set filename. The <parameter>recursive</parameter> option can be used together with wildcards in the filename.</para>
                <example xml:id="example-source-file-recursive">
                    <title>Monitoring multiple directories</title>
                    <para>The following example reads files having the <filename>.log</filename> extension from the <filename>/var/application/</filename> directory and its subdirectories. Note that only syslog-ng PE supports recursive directory handling and wildcards in the file and pathnames.</para>
                    <synopsis>source s_file_subdirectories { file("/var/application/*.log"
                    recursive(yes)
                    follow_freq(1)
                    log_fetch_limit(100)
                    );};</synopsis>
                </example>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-syslogng-pid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <xi:include href="source-network.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <section xml:id="configuring-sources-pipe">
        <title>Collecting messages from named pipes</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>pipe()</parameter> driver</secondary>
        </indexterm>
        <para>The pipe driver opens a named pipe with the specified name and listens for messages. It is used as the native message delivery protocol on HP-UX.</para>
        <para>The pipe driver has a single required parameter, specifying the filename of the pipe to open. For the list of available optional parameters, see <xref linkend="reference-source-pipe"/>.</para>
        <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <synopsis>Declaration:
            pipe(filename);</synopsis>
        <note>
            <para>As of syslog-ng Open Source Edition 3.0.2, pipes are created automatically. In earlier versions, you had to create the pipe using the <command>mkfifo(1)</command> command. </para>
        </note>
        <para>Pipe is very similar to the <parameter>file()</parameter> driver, but there are a few differences, for example <parameter>pipe()</parameter> opens its argument in read-write mode, therefore it is not recommended to be used on special files like <filename>/proc/kmsg</filename>.</para>
        <warning>
            <itemizedlist>
                <listitem>
                    <para>It is not recommended to use <parameter>pipe()</parameter> on anything else than real pipes.</para>
                </listitem>
                <listitem>
                    <para>By default, &abbrev; uses the <userinput>flags(no-hostname)</userinput> option for pipes, meaning that &abbrev; assumes that the log messages received from the pipe do not contain the hostname field. If your messages do contain the hostname field, use <userinput>flags(expect-hostname)</userinput>. For details, see <xref linkend="pipe-source-option-flag"/>.</para>
                </listitem>
            </itemizedlist>
        </warning>
        <example xml:id="example-source-pipe">
            <title>Using the pipe() driver</title>
            <synopsis>source s_pipe { pipe("/dev/pipe" pad_size(2048)); };</synopsis>
        </example>
        <section xml:id="reference-source-pipe">
            <title>pipe() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>pipe()</parameter> driver</secondary>
            </indexterm>
            <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>The <parameter>pipe</parameter> driver has the following options:</para>
            <simplesect xml:id="pipe-source-option-flag">
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <!--
            <simplesect condition="pe">
            <xi:include href="../../common/chunk/option-source-multi-line-garbage.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect condition="pe">
            <xi:include href="../../common/chunk/option-source-multi-line-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
-->
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>pipe()</title>
                <indexterm type="parameter">
                    <primary>pipe()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The filename of the pipe to read messages from.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-syslogng-pid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-source-pacct" condition="ose">
        <title>Collecting process accounting logs on Linux</title>
        <indexterm>
            <primary>process accounting</primary>
        </indexterm>
        <indexterm>
            <primary>pacct()</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>pacct()</primary>
        </indexterm>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>pacct()</parameter> driver</secondary>
        </indexterm>
        <para>Starting with version <phrase condition="pe">4 F1</phrase><phrase condition="ose">3.2</phrase>, &abbrev; can collect process accounting logs on Linux systems.Process accounting is the method of recording and summarizing commands executed on Linux, for example, the commands being run, the user who executed the command, CPU time used by the process, exit code, and so on. When process accounting (also called pacct) is enabled on a system, the kernel writes accounting records to the <filename>/var/log/account/pacct</filename> file (might vary between different Linux distributions).</para>
        <para>To use the <parameter>pacct()</parameter> driver, the following conditions must be met:</para>
        <itemizedlist>
            <listitem>
                <para>The &abbrev; application must be compiled with the <parameter>--enable-pacct</parameter> option. Execute the <command>syslog-ng -V</command> command to check if your binary supports process accounting.</para>
            </listitem>
            <listitem>
                <para>The <parameter>pacctformat</parameter> plugin must be loaded. By default, &abbrev; automatically loads the available modules.</para>
            </listitem>
            <listitem>
                <para>The <filename>scl.conf</filename> file must be included in your syslog-ng configuration: <synopsis>@include "scl.conf"</synopsis></para>
            </listitem>
            <listitem>
                <para>Process accounting must be running on the host. You can enable it with the <command>accton</command> command.</para>
            </listitem>
        </itemizedlist>
        <para>The <parameter>pacct()</parameter> driver parses the fields of the accounting logs and transforms them into name-value pairs. The fields are defined in the manual page of the accounting log file (<command>man acct</command>), &abbrev; prepends every field with the <filename>.pacct.</filename> prefix. For example, the <userinput>ac_uid</userinput> field that contains the id of the user who started the process will be available under the <userinput>$.pacct.ac_uid</userinput> name. These can be used as macros in templates, in filters to select specific messages, and so on.</para>
        <para>To use the <parameter>pacct()</parameter> driver, use the following syntax.</para>
        <synopsis>@version: @techversion;
@include "scl.conf"
source s_pacct { pacct(); };
...
log { source(s_pacct); destination(...); };</synopsis>
        <!--
        <note>
            <para>The <parameter>pacct()</parameter> driver is actually an element of the syslog-ng <link linkend="source-configuration-library">Source Configuration Library (SCL)</link>, a reusable configuration snippet tailored to handle process accounting logs. For details on using or writing SCLs, see <xref linkend="config-blocks"/>.</para>
        </note>
-->
        <section xml:id="reference-source-pacct">
            <title>pacct() options</title>
            <para>The <parameter>pacct()</parameter> driver has the following options:</para>
            <simplesect>
                <title>file</title>
                <indexterm type="parameter">
                    <primary>file</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>/var/log/account/pacct</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The file where the process accounting logs are stored &mdash; &abbrev; reads accounting messages from this file.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-source-program">
        <title>Receiving messages from external applications</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>program()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>reading messages </primary>
            <secondary>from external applications</secondary>
        </indexterm>
        <para>The program driver starts an external application and reads messages from the standard output (stdout) of the application. It is mainly useful to receive log messages from daemons that accept incoming messages and convert them to log messages.</para>
        <para>The program driver has a single required parameter, specifying the name of the application to start.</para>
        <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <synopsis>Declaration:
program(filename);</synopsis>
        <example xml:id="example-source-program">
            <title>Using the program() driver</title>
            <synopsis>source s_program { program("/etc/init.d/mydaemon"); };</synopsis>
        </example>
        <note>
            <para>The program is restarted automatically if it exits.</para>
        </note>
        <section xml:id="reference-source-program">
            <title>program() source options</title>
            <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>The <parameter>program</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <!--
            <simplesect condition="pe">
            <xi:include href="../../common/chunk/option-source-multi-line-garbage.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect condition="pe">
            <xi:include href="../../common/chunk/option-source-multi-line-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
-->
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>program</title>
                <indexterm type="parameter">
                    <primary>program</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The name of the application to start and read messages from.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-syslogng-pid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-sources-sql" condition="pe">
        <title>Collecting messages from tables or relational database</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>sql()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>reading messages</primary>
            <secondary>from database tables</secondary>
        </indexterm>
        <indexterm>
            <primary>sql sources</primary>
        </indexterm>
        <para>The <parameter>sql()</parameter> driver collects messages from an SQL database. Currently the Microsoft SQL (MSSQL), MySQL, Oracle and PostgreSQL databases are supported.</para>
        <para>The <parameter>sql()</parameter> driver has the following required parameters: <link linkend="sql-source-option-database"><parameter>database()</parameter></link>, <link linkend="sql-source-option-host"><parameter>host()</parameter></link>, <link linkend="sql-source-option-table"><parameter>table()</parameter></link>, <link linkend="sql-source-option-type"><parameter>type()</parameter></link>, <link linkend="sql-source-option-uid-column"><parameter>uid_column()</parameter></link>, <link linkend="sql-source-option-datetime-column"><parameter>datetime_column()</parameter></link> or <link linkend="sql-source-option-date-column"><parameter>date_column()</parameter></link> and <link linkend="sql-source-option-time-column"><parameter>time_column()</parameter></link>.</para>
        <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <synopsis>Declaration:
    sql(options);</synopsis>
        <para>Note that the <parameter>sql()</parameter> source driver has the following restrictions and limitations:</para>
        <indexterm>
            <primary>sql sources</primary>
            <secondary>limitations of</secondary>
        </indexterm>
        <itemizedlist>
            <listitem>
                <para>The <parameter>sql()</parameter> source driver does not monitor rotated tables. Therefore, every source can follow only one table.</para>
            </listitem>
            <listitem>
                <para>Timestamps columns with timezone are not supported. The &abbrev; application will retrieve the timestamp from these columns, but without the timezone information.</para>
            </listitem>
            <listitem>
                <para>The <parameter>sql()</parameter> source driver ignores the <parameter>log_msg_size()</parameter> option, that is, messages read from the SQL database can be longer than the maximal message length set in the <parameter>log_msg_size()</parameter> option.</para>
            </listitem>
            <listitem>
                <para>There is an ID column that is the monotonically increasing unique ID of the monitored table. It is not possible to use more than one ID column as complex ID.</para>
            </listitem>
        </itemizedlist>
        <example>
            <title>Using a MySQL source</title>
            <para>With the following configuration, &abbrev; reads the records from the <parameter>test_log</parameter> table ordered by the <userinput>id</userinput> column.</para>
            <para>The <parameter>test_log</parameter> table has the following structure:</para>
            <synopsis>CREATE TABLE “test_log” (
  “id” BIGINT NOT NULL AUTO_INCREMENT,
  “timestamp” TIMESTAMP NOT NULL,
  “host” VARCHAR(64) NOT NULL,
  “program” VARCHAR(64) NOT NULL,
  “log” VARCHAR(1024) NOT NULL
  );</synopsis>
            <para>The matching &abbrev; configuration that reads this table is the following:</para>
            <synopsis>source s_mysql { sql(
                type("mysql")
                host("10.140.32.29")
                username("user")
                password("secret")
                database("test_db")
                table("test_log")
                datetime-column("timestamp")
                uid_column("id")
                message_template("${.sql.id} ${.sql.log}")
                program_template("${.sql.program}")
                host_template("${.sql.host}")
                fast_follow_mode(yes)

);};</synopsis>
        </example>
        <section xml:id="sql-source-supported-platforms">
            <title>Supported SQL sources by platform</title>
            <indexterm>
                <primary>supported sql sources</primary>
            </indexterm>
            <note>
                <para>If a particular database is not supported on a platform you are using it, use the <parameter>sql()</parameter> source on a different &abbrev; host to retrieve the records remotely.</para>
            </note>
            <table xml:id="table-supported-sql-source-types">
                <title>Supported SQL sources by platform</title>
                <tgroup cols="5">
                    <thead>
                        <row>
                            <entry>Platform \ Database</entry>
                            <entry>MsSQL</entry>
                            <entry>MySQL</entry>
                            <entry>PgSQL</entry>
                            <entry>Oracle</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry>AIX</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>Debian etch, Debian lenny, openSUSE 10-11, SLES 10-11, Red Hat ES 4-6 (linux_glibc236)</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                        </row>
                        <row>
                            <entry>Debian sarge and RHEL 3 on x86_64 (linux_glibc232)</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>FreeBSD 6.1</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>FreeBSD 7.1</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>FreeBSD 8.0</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>HP-UX 11 on PA-RISC</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>HP-UX 11v2_on IA64</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>X</entry>
                            <entry>✔</entry>
                        </row>
                        <row>
                            <entry>RHEL 2 and 3 on X86 (linux_glibc213)</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>Solaris 8</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>Solaris 9_on sparc</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>X</entry>
                            <entry>✔</entry>
                        </row>
                        <row>
                            <entry>Solaris 9 on X86</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                        </row>
                        <row>
                            <entry>Solaris 10 on sparc</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                        </row>
                        <row>
                            <entry>Solaris 10 on X86 64</entry>
                            <entry>✔</entry>
                            <entry>✔</entry>
                            <entry>X</entry>
                            <entry>✔</entry>
                        </row>
                        <row>
                            <entry>Tru64 5.1b</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                            <entry>X</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </section>
        <section xml:id="reference-source-sql">
            <title>sql() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>sql()</parameter> driver</secondary>
            </indexterm>
            <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>The <parameter>sql()</parameter> driver has the following options.</para>
            <simplesect>
                <title>archive_query()</title>
                <indexterm type="parameter">
                    <primary>archive_query()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The SQL-like statement which is executed after &abbrev; has queried a batch of records (as set in the <parameter>log_fetch_limit()</parameter> option). This statement can be used for example to archive or delete the records processed by &abbrev;. Note that the user account that &abbrev; uses to access the database requires the appropriate privileges to execute the statement. If executing the statement fails, &abbrev; will log the error message returned by the database, and continue processing the other records.</para>
                <para>For details on customizing queries, see <xref linkend="sql-source-customized-queries"/>.</para>
                <xi:include href="../../common/wnt/warning-source-sql-customized-queries.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example>
                    <title>A sample archive query</title>
                    <para>The following statement deletes the records already retreived from the database if the table is read from the beginning.</para>
                    <synopsis>archive_query("DELETE FROM test_logs WHERE id &lt;= $last_read_uid")</synopsis>
                </example>
            </simplesect>
            <simplesect>
                <title>columns()</title>
                <indexterm type="parameter">
                    <primary>columns()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string list</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>empty</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The list of the name of the columns that will be queried. The default value is empty, meaning that all of the columns will be queried.</para>
                <example>
                    <title>SQL source option columns</title>
                    <para>columns("id","date","message") </para>
                </example>
            </simplesect>
            <simplesect>
                <title>connect_query()</title>
                <indexterm type="parameter">
                    <primary>connect_query()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The SQL-like statement which is executed after &abbrev; has successfully connected to the database.</para>
                <para>For details on customizing queries, see <xref linkend="sql-source-customized-queries"/>.</para>
                <xi:include href="../../common/wnt/warning-source-sql-customized-queries.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example>
                    <title>A sample connect query</title>
                    <synopsis>connect_query("SET COLLATION_CONNECTION='utf8_general_ci'")</synopsis>
                </example>
            </simplesect>
            <simplesect xml:id="sql-source-option-database">
                <xi:include href="../../common/chunk/option-sql-database.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect xml:id="sql-source-option-date-column">
                <title>date_column(col_name, [format])</title>
                <indexterm type="parameter">
                    <primary>date_column(col_name, [format])</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>date, string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The column containing the date of the logrecord. The format value has to be in <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://linux.die.net/man/3/strptime">strptime format</link>. For details, see the strptime manual page (<command>man strptime</command>).</para>
                <note>
                    <para>If the type of the column is string, this is a required parameter.</para>
                </note>
            </simplesect>
            <simplesect xml:id="sql-source-option-datetime-column">
                <title>datetime_column(col_name, [format])</title>
                <indexterm type="parameter">
                    <primary>datetime_column(col_name, [format])</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>The following column types are supported:</para>
                <itemizedlist>
                    <listitem>
                        <para><emphasis>MySQL</emphasis>: timestamp, datetime, int</para>
                    </listitem>
                    <listitem>
                        <para><emphasis>PostgreSQL</emphasis>: timestamp, int</para>
                    </listitem>
                    <listitem>
                        <para><emphasis>Oracle</emphasis>: timestamp, int</para>
                    </listitem>
                    <listitem>
                        <para><emphasis>MSSQL</emphasis>: datetime, int</para>
                    </listitem>
                </itemizedlist>
                <para><emphasis role="bold">Description:</emphasis> The column containing the timestamp. If the type is int, it is considered to contain a UNIX timestamp. The format value is required if the type is string, and has to be in <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://linux.die.net/man/3/strptime">strptime format</link>. For details, see the strptime manual page (<command>man strptime</command>).</para>
                <example>
                    <title>SQL source option datetime_column(col_name, [format])</title>
                    <para><userinput>datetime("timestampcol", "%Y-%m-%d")</userinput></para>
                </example>
            </simplesect>
            <simplesect>
                <title>default-facility()</title>
                <indexterm type="parameter">
                    <primary>default-facility()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>facility string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>local0</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> This parameter assigns a facility value to the messages received from the sql source.</para>
            </simplesect>
            <simplesect>
                <title>default-priority()</title>
                <indexterm type="parameter">
                    <primary>default-priority()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>priority string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>info</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> This parameter assigns an emergency level to the messages received from the sql source.</para>
            </simplesect>
            <simplesect>
                <title>fast_follow_mode()</title>
                <indexterm type="parameter">
                    <primary>fast_follow_mode()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes|no</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> If set to <userinput>yes</userinput>, &abbrev; reads the database table as fast as possible, until it reaches the last record. After this, it will execute only one query in <parameter>follow_freq()</parameter> time. If it is set to <userinput>no</userinput>, &abbrev; executes only one query in <parameter>follow_freq()</parameter> time.</para>
            </simplesect>
            <simplesect>
                <title>fetch_query()</title>
                <indexterm type="parameter">
                    <primary>fetch_query()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Default value is generated in running time of syslog-ng</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The SQL-like statement used to collect the records from the database.</para>
                <note>
                    <para>If this parameter is defined, &abbrev; does not check or validate it whether it is correct. Ensure that the customized statements are correct.</para>
                </note>
                <para>For details on customizing queries, see <xref linkend="sql-source-customized-queries"/>.</para>
                <xi:include href="../../common/wnt/warning-source-sql-customized-queries.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example>
                    <title>A sample fetch query</title>
                    <synopsis>fetch_query("SELECT * FROM $table WHERE id > $last_read_uid AND test_logs.log LIKE '.*ERROR.* ORDER BY $uid")</synopsis>
                </example>
                <para>The default fetch queries are the following:</para>
                <indexterm>
                    <primary>sql sources</primary>
                    <secondary>default queries</secondary>
                </indexterm>
                <itemizedlist>
                    <listitem>
                        <para><emphasis>MSSQL</emphasis>: <synopsis>SELECT TOP $fetch_limit $columns FROM $table WHERE $uid > '$last_read_uid' ORDER BY $uid </synopsis></para>
                    </listitem>
                    <listitem>
                        <para><emphasis>MySQL</emphasis>: </para>
                        <synopsis>SELECT $columns FROM $table WHERE $uid > '$last_read_uid' ORDER BY $uid LIMIT 0,$fetch_limit </synopsis>
                    </listitem>
                    <listitem>
                        <para><emphasis>Oracle</emphasis>: <synopsis>SELECT $columns FROM (SELECT $table.*, Row_Number() OVER (ORDER BY $uid) FetchRow FROM $table WHERE $uid > '$last_read_uid' ) WHERE FetchRow BETWEEN 0 AND $fetch_limit </synopsis></para>
                    </listitem>
                    <listitem>
                        <para><emphasis>PostgreSQL</emphasis>: <synopsis>SELECT $columns FROM $table WHERE $uid > '$last_read_uid' ORDER BY $uid LIMIT $fetch_limit </synopsis></para>
                    </listitem>
                </itemizedlist>
            </simplesect>
            <simplesect>
                <title>follow_freq()</title>
                <indexterm type="parameter">
                    <primary>follow_freq()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>10</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>Indicates that the source should be checked periodically. This is useful for SQL sources which always indicate readability, even though no new records were appended. If this value is higher than zero, syslog-ng will not attempt to use <parameter>poll()</parameter> on the SQL source, but checks whether the SQL source changed every time the <parameter>follow_freq()</parameter> interval (in seconds) has elapsed. Floating-point numbers (for example <userinput>1.5</userinput>) can be used as well.</para>
            </simplesect>
            <simplesect xml:id="sql-source-option-host">
                <xi:include href="../../common/chunk/option-sql-host.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>host-template()</title>
                <indexterm type="parameter">
                    <primary>host-template()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Empty string</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The template for defining the HOST part of the message. If the <parameter>host-template()</parameter> option is not specified, the value of the <parameter>host()</parameter> option will be used in the HOST part of the message.</para>
                <note>
                    <para>This option requires the option <parameter>keep_hostname()</parameter> to be enabled: <userinput>keep_hostname(yes)</userinput>.</para>
                </note>
            </simplesect>
            <simplesect>
                <title>log_fetch_limit()</title>
                <indexterm type="parameter">
                    <primary>log_fetch_limit()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>100</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <xi:include href="../../common/chunk/option-description-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>message-template()</title>
                <indexterm type="parameter">
                    <primary>message-template()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para>The alias of the <parameter>template()</parameter> parameter.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-sql-password.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-sql-port.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>prefix()</title>
                <indexterm type="parameter">
                    <primary>prefix()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>".sql"</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> This prefix will be added to the name of the macros created from the database columns.</para>
                <example>
                    <title>SQL source option prefix()</title>
                    <para>If a database column is called <userinput>column1</userinput>, and the prefix option is set as <userinput>prefix("customprefix.")</userinput>, the macro for the column will be called <userinput>customprefix.column1</userinput>.</para>
                </example>
            </simplesect>
            <simplesect>
                <title>program-template()</title>
                <indexterm type="parameter">
                    <primary>program-template()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Empty string</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The template for defining the PROGRAM part of the message. If not specified, the <parameter>PROGRAM</parameter> message part will be empty.</para>
            </simplesect>
            <simplesect>
                <title>read_old_records()</title>
                <indexterm type="parameter">
                    <primary>read_old_records()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes|no</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>no</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> If set to <userinput>yes</userinput>, &abbrev; will start reading the records from the beginning of the table, if the table has not been read yet. If set to <userinput>no</userinput>, &abbrev; will read only the new records.</para>
            </simplesect>
            <simplesect xml:id="sql-source-option-table">
                <title>table()</title>
                <indexterm type="parameter">
                    <primary>table()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The name of the monitored table. Only a single literal name is accepted, macros cannot be used in the name of the table. Monitoring rotated tables is not supported.</para>
            </simplesect>
            <simplesect>
                <title>table_init_query()</title>
                <indexterm type="parameter">
                    <primary>table_init_query()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The SQL-like statement which is executed before fetching the first batch of records.</para>
                <para>For details on customizing queries, see <xref linkend="sql-source-customized-queries"/>.</para>
                <xi:include href="../../common/wnt/warning-source-sql-customized-queries.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>template()</title>
                <indexterm type="parameter">
                    <primary>template()</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>format-welf()</primary>
                </indexterm>
                <indexterm>
                    <primary>WELF</primary>
                </indexterm>
                <indexterm>
                    <primary>WebTrends Enhanced Log file Format</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The template of the message (<parameter>${MSG}</parameter>) to be generated. If not specified, the following template will be used: <userinput>"$(format-welf --key &lt;prefix&gt;*)")</userinput> where &lt;prefix&gt; is the value of the <parameter>prefix()</parameter> option. This template converts the retrieved records into the WebTrends Enhanced Log file Format (WELF). </para>
                <itemizedlist>
                    <listitem>
                        <para>For details on the WELF format, see <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://www.m86security.com/kb/article.aspx?id=10899">http://www.m86security.com/kb/article.aspx?id=10899</link>.</para>
                    </listitem>
                    <listitem>
                        <para>For details on the <parameter>format-welf()</parameter> template function, see <xref linkend="template-function-format-welf"/>.</para>
                    </listitem>
                </itemizedlist>
                <note>
                    <para>The <parameter>format-welf</parameter> function does not keep the order of columns between queries.</para>
                </note>
                <example>
                    <title>SQL source option template()</title>
                    <para>Using the default template for a table that has two columns (<userinput>id</userinput> and <userinput>message</userinput>) The result of the first query is the following: <userinput>'.sql.id=12 .sql.message="test message"'</userinput>, whereas the result of the second query can be: <userinput>'.sql.message="test message" .sql.id=12 '</userinput></para>
                </example>
            </simplesect>
            <simplesect xml:id="sql-source-option-time-column">
                <title>time_column(col_name, [format])</title>
                <indexterm type="parameter">
                    <primary>time_column(col_name, [format])</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>time, string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The column containing the time of the logrecord. The format value has to be in <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://linux.die.net/man/3/strptime">strptime format</link>.</para>
                <note>
                    <para>If the type of the column is string, this is a required parameter.</para>
                </note>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-reopen.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect xml:id="source-commonoption-time-zone">
                <title>time_zone()</title>
                <indexterm type="parameter">
                    <primary>time_zone()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>timezone in +/-HH:MM format</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The default timezone, if set. If this option is not set, the default timezone is the local timezone.</para>
            </simplesect>
            <simplesect xml:id="sql-source-option-type">
                <title>type()</title>
                <indexterm type="parameter">
                    <primary>type()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>mssql, mysql, oracle, or pgsql</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <xi:include href="../../common/chunk/option-description-sql-type.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect xml:id="sql-source-option-uid-column">
                <title>uid_column()</title>
                <indexterm type="parameter">
                    <primary>uid_column()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> The monotonically increasing unique ID of the monitored table (for example auto_increment). This column must be a type where the greater (>) operation is interpreted.</para>
                <note>
                    <para>The value of the first record of this column should not be 0: &abbrev; will skip this value.</para>
                </note>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-syslogng-pid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-sql-username.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
        <section xml:id="sql-source-customized-queries">
            <title>Customizing SQL queries</title>
            <indexterm>
                <primary>sql sources</primary>
                <secondary>customized queries</secondary>
            </indexterm>
            <para>Every query executed by the SQL source can be customized. These customized queries are similar to SQL statements, but in can also refer to &abbrev;-specific variables with the prefix <userinput>$</userinput>. For example, <parameter>$table</parameter> is the name of the table.</para>
            <xi:include href="../../common/wnt/warning-source-sql-customized-queries.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>The available variables are the following:</para>
            <indexterm>
                <primary>sql sources</primary>
                <secondary>variables</secondary>
            </indexterm>
            <indexterm>
                <primary>variables</primary>
                <secondary>in sql queries</secondary>
            </indexterm>
            <note>
                <para>The variables in the statement are not macro references.</para>
            </note>
            <itemizedlist>
                <listitem>
                    <para><parameter>$uid</parameter>: The name of the <parameter>uid_column</parameter>.</para>
                </listitem>
                <listitem>
                    <para><parameter>$table</parameter>: The name of the <parameter>table</parameter> option.</para>
                </listitem>
                <listitem>
                    <para><parameter>$last_read_uid</parameter>: The uid value of the last read record.</para>
                </listitem>
                <listitem>
                    <para><parameter>$columns</parameter>: Reach the <parameter>columns</parameter> option of the SQL source (the default is <userinput>*</userinput>). If columns is defined in the configuration (for example <userinput>columns("id" "message")</userinput>), then the value of this variable will be a comma separated list (for example <userinput>"id,message"</userinput>).</para>
                </listitem>
                <listitem>
                    <para><parameter>$fetch_limit</parameter>: Reach the value of the <parameter>log_fetch_limit</parameter> option.</para>
                </listitem>
            </itemizedlist>
            <example>
                <title>SQL source fetch_query</title>
                <para>The following queries records that are older than the last record:</para>
                <synopsis>SELECT * FROM $table WHERE $table.$uid > $last_read_uid ORDER BY $table.$uid</synopsis>
            </example>
        </section>
    </section>
    <section xml:id="configuring-sources-sunstreams">
        <title>Collecting messages on Sun Solaris</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>sun-streams()</parameter> driver</secondary>
        </indexterm>
        <para>Solaris uses its <parameter>STREAMS</parameter> framework to send messages to the <parameter>syslogd</parameter> process. Solaris 2.5.1 and above uses an IPC called <emphasis>door</emphasis> in addition to <parameter>STREAMS</parameter>, to confirm the delivery of a message. The syslog-ng application supports the IPC mechanism via the <parameter>door()</parameter> option (see below).</para>
        <note>
            <para>The <parameter>sun-streams()</parameter> driver must be enabled when the syslog-ng application is compiled (see <command>./configure --help</command>).</para>
        </note>
        <para>The <parameter>sun-streams()</parameter> driver has a single required argument specifying the <parameter>STREAMS</parameter> device to open, and the <parameter>door()</parameter> option. For the list of available optional parameters, see <xref linkend="reference-source-sunstreams"/>.</para>
        <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <synopsis>Declaration:
    sun-streams(name_of_the_streams_device door(filename_of_the_door));</synopsis>
        <example xml:id="example-source-sunstreams">
            <title>Using the sun-streams() driver</title>
            <synopsis>source s_stream { sun-streams("/dev/log" door("/etc/.syslog_door")); };</synopsis>
        </example>
        <section xml:id="reference-source-sunstreams">
            <title>sun-streams() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>sun-streams()</parameter> driver</secondary>
            </indexterm>
            <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>The <parameter>sun-streams()</parameter> driver has the following options.</para>
            <simplesect>
                <title>door()</title>
                <indexterm type="parameter">
                    <primary>door()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>none</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Specifies the filename of a door to open, needed on Solaris above 2.5.1.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-syslogng-pid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-sources-syslog">
        <title>Collecting messages using the IETF syslog protocol</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>syslog()</parameter> driver</secondary>
        </indexterm>
        <para>The <parameter>syslog()</parameter> driver can receive messages from the network using the standard IETF-syslog protocol (as described in RFC5424-26). UDP, TCP, and TLS-encrypted TCP can all be used to transport the messages.</para>
        <note>
            <para>The <parameter>syslog()</parameter> driver can also receive BSD-syslog-formatted messages (described in RFC 3164, see <xref linkend="concepts-message-bsdsyslog"/>) if they are sent using the IETF-syslog protocol.</para>
            <para>In &abbrev; versions 3.1 and earlier, the <parameter>syslog()</parameter> driver could handle only messages in the IETF-syslog (RFC 5424-26) format.</para>
        </note>
        <indexterm>
            <primary>TLS</primary>
        </indexterm>
        <para>For the list of available optional parameters, see <xref linkend="reference-source-syslog-chapter"/>.</para>
        <!-- FIXME mi a kotelezo parameter? -->
        <synopsis>Declaration:
        syslog(ip() port() transport() options());</synopsis>
        <example xml:id="example-source-syslog">
            <title>Using the syslog() driver</title>
            <para>TCP source listening on the localhost on port 1999.</para>
            <synopsis>source s_syslog { syslog(ip(127.0.0.1) port(1999) transport("tcp")); };</synopsis>
            <para>UDP source with defaults.</para>
            <synopsis>source s_udp { syslog( transport("udp")); };</synopsis>
            <para>Encrypted source where the client is also authenticated. For details on the encryption settings, see <xref linkend="tlsoptions"/>.</para>
            <synopsis>source s_syslog_tls{ syslog(
    ip(10.100.20.40)
    transport("tls")
    tls(
    peer-verify(required-trusted)
    ca_dir('/opt/syslog-ng/etc/syslog-ng/keys/ca.d/')
    key_file('/opt/syslog-ng/etc/syslog-ng/keys/server_privatekey.pem')
    cert_file('/opt/syslog-ng/etc/syslog-ng/keys/server_certificate.pem')
    )
    );};</synopsis>
        </example>
        <xi:include href="../../common/wnt/warning-udp-recvbuf.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <section xml:id="reference-source-syslog-chapter">
            <title>syslog() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>syslog()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>TLS</primary>
            </indexterm>
            <para>The <parameter>syslog()</parameter> driver has the following options.</para>
            <xi:include href="../../common/chunk/source-syslog-options.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </section>

    </section>
    <section xml:id="configuring-source-system">
        <title>Collecting the system-specific log messages of a platform</title>
        <indexterm type="parameter">
            <primary>system()</primary>
        </indexterm>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>system()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>scl</primary>
            <secondary><parameter>system()</parameter></secondary>
        </indexterm>
        <para>Starting with version <phrase condition="pe">4 F1</phrase><phrase condition="ose">3.2</phrase>, &abbrev; can automatically collect the system-specific log messages of the host on a number of platforms using the <parameter>system()</parameter> driver. If the <parameter>system()</parameter> driver is included in the &abbrev; configuration file, &abbrev; automatically adds the following sources to the &abbrev; configuration.</para>
        <note>
            <para>&abbrev; versions <phrase condition="pe">4.1-5.0</phrase><phrase condition="ose">3.2-3.3</phrase> used an external script to generate the <parameter>system()</parameter> source, but this was problematic in certain situations, for example, when the host used a strict AppArmor profile. Therefore, the <parameter>system()</parameter> source is now generated internally in &abbrev;.</para>
        </note>
        <para>The <parameter>system()</parameter> driver is also used in the default configuration file of &abbrev;. For details on the default configuration file, see <xref linkend="example-defaultconfig"/>.</para>
        <warning>
            <para>If &abbrev; does not recognize the platform it is installed on, it does not add any sources.</para>
        </warning>
        <table>
            <title>Sources automatically added by &product;</title>
            <tgroup cols="2">
                <thead>
                    <row>
                        <entry>Platform</entry>
                        <entry>Message source</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>AIX and Tru64</entry>
                        <entry>
                            <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>unix-dgram("/dev/log");</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>FreeBSD</entry>
                        <entry>
                            <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>unix-dgram("/var/run/log");</synopsis>
                            <synopsis>unix-dgram("/var/run/logpriv" perm(0600));</synopsis>
                            <synopsis>file("/dev/klog" follow-freq(0) program-override("kernel") flags(no-parse));</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>HP-UX</entry>
                        <entry>
                            <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>pipe("/dev/log" pad_size(2048));</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>Linux</entry>
                        <entry>
                            <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>unix-dgram("/dev/log");</synopsis>
                            <synopsis>file("/proc/kmsg" program-override("kernel") flags(kernel));</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>Solaris 8</entry>
                        <entry>
                            <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>sun-streams("/dev/log");</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>Solaris 9</entry>
                        <entry>
                            <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>sun-streams("/dev/log" door("/etc/.syslog_door"));</synopsis>
                        </entry>
                    </row>
                    <row>
                        <entry>Solaris 10</entry>
                        <entry>
                            <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?>
                            <synopsis>sun-streams("/dev/log" door("/var/run/syslog_door"));</synopsis>
                        </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <!--
        <note>
            <para>The <parameter>system()</parameter> driver is actually an element of the syslog-ng <link linkend="source-configuration-library">Source Configuration Library (SCL)</link>, a reusable configuration snippet tailored to handle process accounting logs. For details on using or writing SCLs, see <xref linkend="config-blocks"/>.</para>
        </note>
-->
    </section>
    <section xml:id="configuring-sources-tcpudp">
        <title>Collecting messages from remote hosts using the BSD syslog protocol</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>tcp()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>tcp6()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>udp()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>udp6()</parameter> driver</secondary>
        </indexterm>
        <xi:include href="../../common/wnt/note-use-network-driver.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <para>The <parameter>tcp()</parameter>, <parameter>tcp6()</parameter>, <parameter>udp()</parameter>, <parameter>udp6()</parameter> drivers can receive syslog messages conforming to RFC3164 from the network using the TCP and UDP networking protocols. The <parameter>tcp6()</parameter> and <parameter>udp6()</parameter> drivers use the IPv6 network protocol, while <parameter>tcp()</parameter> and <parameter>udp()</parameter> use IPv4.</para>
        <para>UDP is a simple datagram oriented protocol, which provides "best effort service" to transfer messages between hosts. It may lose messages, and no attempt is made at the protocol level to retransmit such lost messages. The <emphasis>
                <link linkend="concepts-message-bsdsyslog">BSD-syslog</link>
            </emphasis> protocol traditionally uses UDP.</para>
        <para>TCP provides connection-oriented service, which basically means that the path of the messages is flow-controlled. Along this path, each message is acknowledged, and retransmission is done for lost packets. Generally it is safer to use TCP, because lost connections can be detected, and no messages get lost, assuming that the TCP connection does not break. When a TCP connection is broken the 'in-transit' messages that were sent by syslog-ng but not yet received on the other side are lost. (Basically these messages are still sitting in the socket buffer of the sending host and syslog-ng has no information about the fate of these messages). </para>
        <para>The <parameter>tcp()</parameter> and <parameter>udp()</parameter> drivers do not have any required parameters. By default they bind to the <userinput>0.0.0.0:514</userinput> address, which means that syslog-ng will listen on all available interfaces, port 514. To limit accepted connections to only one interface, use the <parameter>localip()</parameter> parameter as described below. For the list of available optional parameters, see <xref linkend="reference-source-tcpudp"/>.</para>
        <synopsis>Declaration:
            tcp([options]);
            udp([options]);</synopsis>
        <note>
            <para>The TCP port 514 is reserved for use with <command>rshell</command>, so select a different port if syslog-ng and <command>rshell</command> is used at the same time. </para>
        </note>
        <para>If you specify a multicast bind address to <parameter>udp()</parameter> and <parameter>udp6()</parameter>, syslog-ng will automatically join the necessary multicast group. TCP does not support multicasting. </para>
        <para>The syslog-ng application supports TLS (Transport Layer Security, also known as SSL) for the tcp() and tcp6() drivers. For details, see the TLS-specific options below and <xref linkend="tls-serverauth"/>. For the list of available optional parameters, see <xref linkend="reference-source-tcpudp"/>.</para>
        <tip>
            <para>The <parameter>syslog()</parameter> driver also supports TLS-encrypted connections.</para>
        </tip>
        <indexterm>
            <primary>TLS</primary>
        </indexterm>
        <example xml:id="example-source-tcpudp">
            <title>Using the udp() and tcp() drivers</title>
            <para>A simple udp() source with default settings.</para>
            <synopsis>source s_udp { udp(); };# An UDP source with default settings.</synopsis>
            <para>A TCP source listening on the localhost interface, with a limited number of connections allowed.</para>
            <synopsis>source s_tcp { tcp(ip(127.0.0.1) port(1999) max-connections(10)); };</synopsis>
            <para>A TCP source listening on a TLS-encrypted channel.</para>
            <synopsis>source s_tcp { tcp(ip(127.0.0.1) port(1999)
           tls(peer-verify('required-trusted')
               key_file('/opt/syslog-ng/etc/syslog-ng/syslog-ng.key')
           cert_file('/opt/syslog-ng/etc/syslog-ng/syslog-ng.crt')));
};</synopsis>
            <para>A TCP source listening for messages using the IETF-syslog message format. Note that for transferring IETF-syslog messages, generally you are recommended to use the <parameter>syslog()</parameter> driver on both the client and the server, as it uses both the IETF-syslog message format and the protocol. For details, see <xref linkend="configuring-sources-syslog"/>.</para>
            <synopsis>source s_tcp_syslog { tcp(ip(127.0.0.1) port(1999) flags(syslog-protocol) ); };</synopsis>
        </example>
        <section xml:id="reference-source-tcpudp">
            <title>tcp(), tcp6(), udp() and udp6() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>tcp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>tcp6()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>udp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>udp6()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>tcp()</parameter>, <parameter>tcp6()</parameter>, <parameter>udp()</parameter>, <parameter>udp6()</parameter> drivers can receive messages conforming to RFC3164 from the network using the TCP and UDP networking protocols.</para>
            <para>The following options are valid for <parameter>tcp()</parameter>, <parameter>tcp6()</parameter>, <parameter>udp()</parameter>, and <parameter>udp6()</parameter> drivers: </para>
            <xi:include href="../../common/wnt/warning-udp-recvbuf.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-encoding.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <itemizedlist>
                    <listitem>
                        <indexterm type="parameter">
                            <primary>threaded</primary>
                        </indexterm>
                        <para><emphasis>threaded</emphasis>: The <parameter>threaded</parameter> flag enables multithreading for the destination. For details on multithreading, see <xref linkend="chapter-multithreading"/>.</para>
                        <note>
                            <para>Only the <parameter>tcp</parameter> and <parameter>tcp6</parameter> sources can use multiple threads.</para>
                        </note>
                    </listitem>
                </itemizedlist>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-host-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-ip.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-alive.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-hostname.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-max-connections.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <para>Note that the <parameter>udp()</parameter> and <parameter>udp6()</parameter> drivers do not support this option.</para>
            </simplesect>
            <simplesect condition="pe">
                <xi:include href="../../common/chunk/option-source-multi-line-garbage.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect condition="pe">
                <xi:include href="../../common/chunk/option-source-multi-line-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-port.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-so-keepalive.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-so-rcvbuf.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tcp-keepalive.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-tls.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-dns.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-fqdn.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-syslogng-pid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
    <section xml:id="configuring-sources-unixstream">
        <title>Collecting messages from UNIX domain sockets</title>
        <para>The <parameter>unix-stream()</parameter> and <parameter>unix-dgram()</parameter> drivers open an <parameter>AF_UNIX</parameter> socket and start listening on it for messages. The <parameter>unix-stream()</parameter> driver is primarily used on Linux and uses <parameter>SOCK_STREAM</parameter> semantics (connection oriented, no messages are lost); while <parameter>unix-dgram()</parameter> is used on BSDs and uses <parameter>SOCK_DGRAM</parameter> semantics: this may result in lost local messages if the system is overloaded. </para>
        <para>To avoid denial of service attacks when using connection-oriented protocols, the number of simultaneously accepted connections should be limited. This can be achieved using the <parameter>max-connections()</parameter> parameter. The default value of this parameter is quite strict, you might have to increase it on a busy system. </para>
        <para>Both unix-stream and unix-dgram have a single required argument that specifies the filename of the socket to create. For the list of available optional parameters, see <xref linkend="reference-source-unixstream"/></para>
        <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <synopsis>Declaration:
            unix-stream(filename [options]);
            unix-dgram(filename [options]);</synopsis>
        <note>
            <para><parameter>syslogd</parameter> on Linux originally used <parameter>SOCK_STREAM</parameter> sockets, but some distributions switched to <parameter>SOCK_DGRAM</parameter> around 1999 to fix a possible DoS problem. On Linux you can choose to use whichever driver you like as syslog clients automatically detect the socket type being used. </para>
        </note>
        <!-- FIXME a correct comparison should be added, based on info from Geller Sanyi:
        a unix-dgram nagyjabol minden szempontbol jobb:
        (nem kell 1 fd per kliens, a tevhittel ellentetben nem veszit uzeneteket, blokkolodik a hivo ugyanugy, mint a stream eseteben, megtartja az uzenetek sorrendjet tobb kuldo kozott, 1 read() eleg egy teljes uzenet beolvasasahoz)

        <para>The difference between the unix-stream and unix-dgram drivers is similar to the
            difference between the TCP and UDP network protocols. Use the following guidelines
            to select which driver to use in a particular situation:</para>
        <para>Choose unix-stream if you would choose TCP (stream) instead of UDP (datagram). The
            unix-stream driver offers the following features:</para>
        <itemizedlist>
            <listitem>
                <para>Increased reliability</para>
            </listitem>
            <listitem>
                <para>Ordered delivery of messages</para>
            </listitem>
            <listitem>
                <para>Client-side notification of failures</para>
            </listitem>
        </itemizedlist>
        <para>Choose unix-dgram if you would choose TCP (stream) over UDP (datagram). The
            unix-dgram driver offers the following features:</para>
        <itemizedlist>
            <listitem>
                <para>Decreased possibility of Dos by opening too many connections (a local
                    vulnerability)</para>
            </listitem>
            <listitem>
                <para>Less overhead</para>
            </listitem>
        </itemizedlist>
        <para>However, the client does not notice if a message is lost when using the unix-dgram
            driver.</para>-->
        <example xml:id="example-source-unixstream">
            <title>Using the unix-stream() and unix-dgram() drivers</title>
            <synopsis>source s_stream { unix-stream("/dev/log" max-connections(10)); };</synopsis>
            <synopsis>source s_dgram { unix-dgram("/var/run/log"); };</synopsis>
        </example>
        <section xml:id="reference-source-unixstream">
            <title>unix-stream() and unix-dgram() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>unix-stream()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>unix-dgram()</parameter> driver</secondary>
            </indexterm>
            <xi:include href="../../common/wnt/warning-not-on-windows.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>These two drivers behave similarly: they open an <parameter>AF_UNIX</parameter> socket and start listening on it for messages. The following options can be specified for these drivers:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-encoding.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>group()</title>
                <indexterm type="parameter">
                    <primary>group()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>root</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Set the gid of the socket.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-host-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>keep-alive()</title>
                <indexterm type="parameter">
                    <primary>keep-alive()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes or no</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Selects whether to keep connections open when syslog-ng is restarted; cannot be used with <parameter>unix-dgram()</parameter>.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>max-connections()</title>
                <indexterm type="parameter">
                    <primary>max-connections()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>256</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Limits the number of simultaneously open connections. Cannot be used with <parameter>unix-dgram()</parameter>.</para>
            </simplesect>
            <!--
            <simplesect condition="pe">
            <xi:include href="../../common/chunk/option-source-multi-line-garbage.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect condition="pe">
            <xi:include href="../../common/chunk/option-source-multi-line-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
-->
            <simplesect>
                <xi:include href="../../common/chunk/option-source-optional.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>owner()</title>
                <indexterm type="parameter">
                    <primary>owner()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>root</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Set the uid of the socket.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>perm()</title>
                <indexterm type="parameter">
                    <primary>perm()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>0666</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><emphasis role="bold">Description:</emphasis> Set the permission mask. For octal numbers prefix the number with '0', for example: use 0755 for rwxr-xr-x.</para>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-so-keepalive.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-so-rcvbuf.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-use-syslogng-pid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>
    </section>
</chapter>
