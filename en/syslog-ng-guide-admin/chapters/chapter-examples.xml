<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<chapter xml:id="chapter-examples" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Best practices and examples</title>
    <para>This chapter discusses some special examples and recommendations.</para>
    <section xml:id="example-general">
        <title>General recommendations</title>
        <para>This section provides general tips and recommendations on using syslog-ng. Some of the recommendations are detailed in the subsequent sections.</para>
        <itemizedlist>
            <indexterm>
                <primary>facilities</primary>
            </indexterm>
            <listitem>
                <para>Do not base the separation of log messages into different files on the <parameter>facility</parameter> parameter. As several applications and processes can use the same facility, the facility does not identify the application that sent the message. By default, the <parameter>facility</parameter> parameter is not even included in the log message itself. In general, sorting the log messages into several different files can make finding specific log messages difficult. If you must create separate log files, use the application name.</para>
            </listitem>
            <listitem>
                <indexterm>
                    <primary>timestamp</primary>
                </indexterm>
                <para>Standard log messages include the local time of the sending host, without any time zone information. It is recommended to replace this timestamp with an ISODATE timestamp, because the ISODATE format includes the year and timezone as well. To convert all timestamps to the ISODATE format, include the following line in the syslog-ng configuration file:</para>
                <synopsis>options {ts-format(iso) ; };</synopsis>
            </listitem>
            <listitem>
                <indexterm>
                    <primary>name resolution</primary>
                </indexterm>
                <para>Resolving the IP addresses of the clients to domain names can decrease the performance of syslog-ng. For details, see <xref linkend="examples-dns"/>.</para>
            </listitem>
        </itemizedlist>
    </section>
    <section xml:id="handling-large-load">
        <title>Handling large message load</title>
        <indexterm>
            <primary>optimizing syslog-ng performance</primary>
        </indexterm>
        <indexterm>
            <primary>filters</primary>
        </indexterm>
        <indexterm>
            <primary>regular expressions</primary>
        </indexterm>
        <para>This section provides tips on optimizing the performance of syslog-ng. Optimizing the performance is important for syslog-ng hosts that handle large traffic.</para>
        <itemizedlist>
            <listitem>
                <para>Disable DNS resolution, or resolve hostnames locally. For details, see <xref linkend="examples-dns"/>.</para>
            </listitem>
            <listitem>
                <para>Enable flow-control for the TCP sources. For details, see <xref linkend="concepts-flow-control"/>.</para>
            </listitem>
            <listitem>
                <para>Do not use the <parameter>usertty()</parameter> destination driver. Under heavy load, the users are not be able to read the messages from the console, and it slows down syslog-ng.</para>
            </listitem>
            <listitem>
                <para>Do not use regular expressions in our filters. Evaluating general regular expressions puts a high load on the CPU. Use simple filter functions and logical operators instead. For details, see <xref linkend="regular-expressions"/>.</para>
            </listitem>
            <listitem>
                <xi:include href="../../common/wnt/warning-udp-recvbuf.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </listitem>
            <listitem>
                <para>Increase the value of the <parameter>flush-lines()</parameter> parameter. Increasing <parameter>flush-lines()</parameter> from <userinput>0</userinput> to <userinput>100</userinput> can increase the performance of &abbrev; by 100%.</para>
            </listitem>
        </itemizedlist>
    </section>
<!-- FIXME the sync option is obsolete, should be updated to flush-lines - if this section is needed at all -->
<!--	<section xml:id="sync">
            <title>The sync() parameter</title>

            <indexterm>
            <primary>parameters</primary>
            <secondary>sync()</secondary>
            </indexterm>
            <para>The syslog-ng application buffers the log messages to be sent in an output queue. The
            <parameter>sync()</parameter> parameter specifies the number of messages held in
            this buffer.</para>
            <para>Note that syslog-ng does not write all buffered messages into a single chunk; each
            message is written with a single <parameter>write()</parameter> system call.</para>
            <para>For file destinations, the received messages can be written to disk immediately after
            the message is received. To accomplish this, set the <parameter>sync()</parameter>
            option to zero.</para>
            <synopsis>
            options { sync(0); };
            </synopsis>
            </section>-->
    <section xml:id="examples-dns">
        <title>Using name resolution in syslog-ng</title>
        <indexterm>
            <primary>name resolution</primary>
        </indexterm>
        <para>The syslog-ng application can resolve the hostnames of the clients and include them in the log messages. However, the performance of syslog-ng is severely degraded if the domain name server is unaccessible or slow. Therefore, it is not recommended to resolve hostnames in syslog-ng. If you must use name resolution from syslog-ng, consider the following:</para>
        <itemizedlist>
            <listitem>
                <para>Use DNS caching. Verify that the DNS cache is large enough to store all important hostnames. (By default, the syslog-ng DNS cache stores <userinput>1007</userinput> entries.)</para>
                <synopsis>options { dns-cache-size(2000); };</synopsis>
            </listitem>
            <listitem>
                <para>If the IP addresses of the clients change only rarely, set the expiry of the DNS cache large.</para>
                <synopsis>options { dns-cache-expire(87600); };</synopsis>
            </listitem>
            <listitem>
                <para>If possible, resolve the hostnames locally. For details, see <xref linkend="example-local-dns"/>.</para>
            </listitem>
        </itemizedlist>
        <note>
            <para>Domain name resolution is important mainly in relay and server mode.</para>
        </note>
        <procedure xml:id="example-local-dns">
            <title>Resolving hostnames locally</title>
            <indexterm>
                <primary>name resolution</primary>
                <secondary>local</secondary>
            </indexterm>
            <formalpara>
                <title>Purpose:</title>
                <para/>
            </formalpara>
            <para>Resolving hostnames locally enables you to display hostnames in the log files for frequently used hosts, without having to rely on a DNS server. The known IP address &ndash; hostname pairs are stored locally in a file. In the log messages, syslog-ng will replace the IP addresses of known hosts with their hostnames. To configure local name resolution, complete the following steps:</para>
            <formalpara>
                <title>Steps:</title>
                <para/>
            </formalpara>
            <step>
                <para>Add the hostnames and the respective IP addresses to the file used for local name resolution. On Linux and UNIX systems, this is the <filename>/etc/hosts</filename> file. Consult the documentation of your operating system for details.</para>
            </step>
            <step>
                <para>Instruct syslog-ng to resolve hostnames locally. Set the <parameter>use-dns()</parameter> option of syslog-ng to <parameter>persist_only</parameter>.</para>
            </step>
            <step>
                <para>Set the <parameter>dns-cache-hosts()</parameter> option to point to the file storing the hostnames.</para>
                <synopsis>options {
        use-dns(persist_only);
        dns-cache-hosts(/etc/hosts); };</synopsis>
            </step>
        </procedure>
    </section>
    <procedure xml:id="example-chroot">
        <title>Collecting logs from chroot</title>
        <indexterm>
            <primary>chroots</primary>
        </indexterm>
        <formalpara>
            <title>Purpose:</title>
            <para/>
        </formalpara>
        <para>To collect logs from a chroot using a syslog-ng client running on the host, complete the following steps:</para>
        <figure>
            <title>Collecting logs from chroot</title>
            <mediaobject>
                <imageobject role="html">
                    <imagedata format="PNG" fileref="chroot01.png"/>
                </imageobject>
                <imageobject role="fo">
                    <imagedata format="PNG" fileref="&imgroot;/chroot01.png" scale="75"/>
                </imageobject>
            </mediaobject>
        </figure>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>Create a <filename>/dev</filename> directory within the chroot. The applications running in the chroot send their log messages here.</para>
        </step>
        <step>
            <para>Create a local source in the configuration file of the syslog-ng application running outside the chroot. This source should point to the <filename>/dev/log</filename> file within the chroot (for example to the <filename>/chroot/dev/log</filename> directory).</para>
        </step>
        <step>
            <para>Include the source in a log statement.</para>
            <note>
                <indexterm>
                    <primary>timezone</primary>
                    <secondary>in chroots</secondary>
                </indexterm>
                <para>You need to set up timezone information within your chroot as well. This usually means creating a symlink to <filename>/etc/localtime</filename>.</para>
            </note>
        </step>
    </procedure>
    <section xml:id="example-logrotate">
        <title>Configuring log rotation</title>
        <para>The &abbrev; application does not rotate logs by itself. To use &abbrev; for log rotation, consider the following approaches:</para>
        <formalpara>
            <title>Use logrotate together with &abbrev;:</title>
            <para/>
        </formalpara>
        <itemizedlist>
            <listitem>
                <para>Ideal for workstations or when processing fewer logs.</para>
            </listitem>
            <listitem>
                <para>It is included in most distributions by default.</para>
            </listitem>
            <listitem>
                <para>Less scripting is required, only <command>logrotate</command> has to be configured correctly.</para>
            </listitem>
            <listitem>
                <para>Requires frequent restart (&abbrev; must be reloaded/restarted when the files are rotated).</para>
            </listitem>
            <listitem>
                <para>The statistics collected by &abbrev;, and the correlation information gathered with Pattern Database is lost with each restart.</para>
            </listitem>
        </itemizedlist>
        <formalpara>
            <title>Separate incoming logs based on time, host or other information:</title>
            <para/>
        </formalpara>
        <itemizedlist>
            <listitem>
                <para>Ideal for central log servers, where regular restart of &abbrev; is unfavorable.</para>
            </listitem>
            <listitem>
                <para>Requires shell scripts or cron jobs to remove old logs.</para>
            </listitem>
            <listitem>
                <para>It can be done by using macros in the destination name (in the filename, directory name, or the database table name).</para>
            </listitem>
        </itemizedlist>
        <example>
            <title>File destination for log rotation </title>
            <para>This sample file destination configuration stores incoming logs in files that are named based on the current year, month and day, and places these files in directories that are named based on the hostname:</para>
            <synopsis>destination d_sorted { file("/var/log/remote/${HOST}/${YEAR}_${MONTH}_${DAY}.log" create-dirs(yes)); };</synopsis>
        </example>
        <example condition="pe">
            <title>Logstore destination for log rotation </title>
            <para>This sample logstore destination configuration stores incoming logs in logstores that are named based on the current year, month and day, and places these logstores in directories that are named based on the hostname:</para>
            <synopsis>destination d_logstore { logstore("/var/log/remote/${HOST}/${YEAR}_${MONTH}_${DAY}.lgs" compress(9) create-dirs(yes)); };</synopsis>
        </example>
        <example>
            <title>Command for cron for log rotation</title>
            <para>This sample command for <command>cron</command> removes files older than two weeks from the <filename>/var/log/remote</filename> directory:</para>
            <synopsis>find /var/log/remote/ -daystart -mtime +14 -type f -exec rm {} \;</synopsis>
        </example>
    </section>
</chapter>
