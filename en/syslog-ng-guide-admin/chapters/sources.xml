<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
 [
 <!ENTITY % entities SYSTEM "../../shared/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="sources" xmlns="http://docbook.org/ns/docbook">
    <title>How sources work</title>
    <indexterm significance="preferred">
        <primary>sources</primary>
    </indexterm>
    <indexterm significance="preferred">
        <primary>source drivers</primary>
    </indexterm>
    <para>A source is where syslog-ng receives log messages. Sources consist of one or more drivers, each defining where and how messages are received.</para>
    <para>To define a source, add a source statement to the syslog-ng configuration file using the following syntax:<indexterm>
            <primary>sources</primary>
            <secondary>defining</secondary>
        </indexterm><synopsis>source &lt;identifier&gt; { source-driver(params); source-driver(params); ... };</synopsis></para>
    <example>
        <title>A simple source statement</title>
        <para>The following source statement receives messages on the TCP port <userinput>1999</userinput> of the interface having the <userinput>10.1.2.3</userinput> IP address.</para>
        <synopsis>source s_demo_tcp { network(ip(10.1.2.3) port(1999)); };</synopsis>
    </example>
    <example>
        <title>A source statement using two source drivers</title>
        <para>The following source statement receives messages on the <userinput>1999</userinput> TCP port and the <userinput>1999</userinput> UDP port of the interface having the <userinput>10.1.2.3</userinput> IP address.</para>
        <synopsis>source s_demo_two_drivers {
           network(ip(10.1.2.3) port(1999));
           network(ip(10.1.2.3) port(1999) transport("udp")); };</synopsis>
    </example>
    <example>
        <title>Setting default priority and facility</title>
        <indexterm>
            <primary>setting facility</primary>
        </indexterm>
        <indexterm>
            <primary>overriding facility</primary>
        </indexterm>
        <para>If the message received by the source does not have a proper syslog header, you can use the <parameter>default-facility()</parameter> and <parameter>default-priority()</parameter> options to set the facility and priority of the messages. Note that these values are applied only to messages that do not set these parameters in their header.</para>
        <synopsis>source headerless_messages { network(default-facility(syslog) default-priority(emerg)); };</synopsis>
    </example>
    <para>Define a source only once. The same source can be used in several log paths. Duplicating sources causes syslog-ng to open the source (TCP/IP port, file, and so on) more than once, which might cause problems. For example, include the <filename>/dev/log</filename> file source only in one source statement, and use this statement in more than one log path if needed.</para>
    <warning>
        <xi:include href="../../shared/chunk/para-initializing-sources-destinations.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    </warning>
    <para>To collect log messages on a specific platform, it is important to know how the native <parameter>syslogd</parameter> communicates on that platform. The following table summarizes the operation methods of <parameter>syslogd</parameter> on some of the tested platforms:</para>
    <!-- FIXME check if any platform is missing, and update this list
        collect a list of sources that are needed on a platform to cover the functionality of the native syslog solution -->
    <table>
        <title>Communication methods used between the applications and syslogd</title>
        <indexterm>
            <primary>sources</primary>
            <secondary>on different platforms</secondary>
        </indexterm>
        <tgroup cols="2">
            <thead>
                <row>
                    <entry>Platform</entry>
                    <entry>Method</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>Linux</entry>
                    <entry>A <parameter>SOCK_DGRAM</parameter> unix socket named <filename>/dev/log</filename>. Newer distributions that use systemd collect log messages into a journal file.</entry>
                </row>
                <row>
                    <entry>BSD flavors</entry>
                    <entry>A <parameter>SOCK_DGRAM</parameter> unix socket named <filename>/var/run/log</filename>.</entry>
                </row>
                <row>
                    <entry>Solaris (2.5 or below)</entry>
                    <entry>An SVR4 style <parameter>STREAMS</parameter> device named <filename>/dev/log</filename>.</entry>
                </row>
                <row>
                    <entry>Solaris (2.6 or above)</entry>
                    <entry>In addition to the <parameter>STREAMS</parameter> device used in earlier versions, 2.6 uses a new multithreaded IPC method called door. By default the door used by <parameter>syslogd</parameter> is <filename>/etc/.syslog_door</filename>. </entry>
                </row>
                <row>
                    <entry>HP-UX 11 or later</entry>
                    <entry>HP-UX uses a named pipe called <filename>/dev/log</filename> that is padded to 2048 bytes, for example <userinput>source s_hp-ux {pipe ("/dev/log" pad-size(2048)}</userinput>.</entry>
                </row>
                <row>
                    <entry>AIX 5.2 and 5.3</entry>
                    <entry>A <parameter>SOCK_STREAM</parameter> or <parameter>SOCK_DGRAM</parameter> unix socket called <filename>/dev/log</filename>.</entry>
                </row>
            </tbody>
        </tgroup>
    </table>
    <para>Each possible communication mechanism has a corresponding source driver in syslog-ng. For example, to open a unix socket with <parameter>SOCK_DGRAM</parameter> style communication use the driver <parameter>unix-dgram</parameter>. The same socket using the <parameter>SOCK_STREAM</parameter> style &mdash; as used under Linux &mdash; is called <parameter>unix-stream</parameter>.</para>
    <example>
        <title>Source statement on a Linux based operating system</title>
        <para>The following source statement collects the following log messages:</para>
        <itemizedlist>
            <listitem>
                <para><emphasis>internal()</emphasis>: Messages generated by syslog-ng.</para>
            </listitem>
            <listitem>
                <para><emphasis>network(transport("udp"))</emphasis>: Messages arriving to the <userinput>514/UDP</userinput> port of any interface of the host.</para>
            </listitem>
            <listitem>
                <para><emphasis>unix-dgram("/dev/log");</emphasis>: Messages arriving to the <filename>/dev/log</filename> socket.</para>
            </listitem>
        </itemizedlist>
        <synopsis>source s_demo {
    internal();
    network(transport("udp"));
    unix-dgram("/dev/log"); };</synopsis>
    </example>
    <para>The following table lists the source drivers available in syslog-ng.</para>
    <xi:include href="../../shared/chunk/table-source-drivers.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
</section>
