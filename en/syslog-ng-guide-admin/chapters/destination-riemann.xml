<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
[
<!ENTITY % entities SYSTEM "../../shared/syslog-ng-entities.ent">
%entities;
]>
<section xml:id="configuring-destinations-riemann" condition="ose" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title><parameter>riemann</parameter>: Monitoring your data with Riemann</title>
    <indexterm>
        <primary>destination drivers</primary>
        <secondary><parameter>riemann()</parameter> driver</secondary>
    </indexterm>
    <para>The <parameter>riemann()</parameter> driver sends your data (for example, metrics or events) to a <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://riemann.io/">Riemann</link> monitoring system.</para>
    <para>For the list of available parameters, see <xref linkend="reference-destination-riemann"/>.</para>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>riemann(
	server("&lt;riemann-server-address&gt;")
	port("&lt;riemann-server-port&gt;")
	metric("&lt;the-metric-or-data-to-send-to-riemann&gt;")
);</synopsis>
    <example xml:id="example-using-riemann">
        <title>Using the riemann() driver</title>
        <para>The following destination sends the value of the SEQNUM macro (the number of messages sent to this destination) as a metric to the Riemann server.</para>
        <synopsis>@version: &techversion;

source s_network {
	network(port(12345));
};

destination d_riemann {
	riemann(
		server("localhost")
		port(5555)
		ttl("300.5")
		metric(int("$SEQNUM"))
		description("syslog-ng riemann test")
		state("ok")
		attributes(x-ultimate-answer("$(+ $PID 42)")
				   key("MESSAGE", rekey(add-prefix("x-")) )
				   )
	);
};

log {
	source(s_network);
	destination(d_riemann);
	flags(flow-control);
};</synopsis>
    </example>
    <para>For a detailed use-case on using &abbrev; with the Riemann monitoring system, see the article <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="https://devops.com/guide-modern-monitoring-alerting/">A How to Guide on Modern Monitoring and Alerting by Fabien Wernli</link>.</para>
    <section xml:id="reference-destination-riemann">
        <title>riemann() destination options</title>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary><parameter>riemann()</parameter> driver</secondary>
        </indexterm>
        <para>The <parameter>riemann()</parameter> driver sends metrics or events to a <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://riemann.io/">Riemann</link> monitoring system.</para>
        <para>The <parameter>riemann()</parameter> destination has the following options:</para>
        <simplesect xmlns="http://docbook.org/ns/docbook" version="5.0">
            <title>attributes()</title>
            <indexterm type="parameter">
                <primary>attributes()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>parameter list of the <parameter>value-pairs()</parameter> option</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The <parameter>attributes()</parameter> option adds extra metadata to the Riemann event, that can be displayed on the Riemann dashboard. To specify the metadata to add, use the syntax of the <parameter>value-pairs()</parameter> option. For details on using <parameter>value-pairs()</parameter>, see <xref linkend="concepts-value-pairs"/>.</para>
        </simplesect>
        <simplesect>
            <title>description()</title>
            <indexterm type="parameter">
                <primary>description()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>template, macro, or string</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The value to add as the description field of the Riemann event.</para>
        </simplesect>
        <simplesect>
            <xi:include href="../../shared/chunk/option-destination-diskbuffer.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="riemann-option-event-time">
            <title>event-time()</title>
            <indexterm type="parameter">
                <primary>event-time()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>template, macro, or string</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry>${UNIXTIME}</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> Instead of the arrival time into Riemann, &abbrev; can also send its own timestamp value.</para>
            <para>This can be useful if Riemann is inaccessible for a while, and the messages are collected in the disk buffer until Riemann is accessible again. In this case, it would be difficult to differentiate between messages based on the arrival time only, because this would mean that there would be hundreds of messages with the same arrival time. This issue can be solved by using this option.</para>
            <para>The <parameter>event-time()</parameter> option takes an optional parameter specifying whether the time format is in seconds or microseconds. For example:</para>
            <synopsis>event-time("$(* $UNIXTIME 1000000)" microseconds)
event-time("12345678" microseconds)
event-time("12345678" seconds)
event-time("12345678")</synopsis>
            <para>In case the parameter is omitted, &abbrev; defaults to the seconds version. In case the <parameter>event-time()</parameter> option is omitted altogether, &abbrev; defaults to the seconds version with <userinput>$UNIXTIME</userinput>.</para>
            <para>Note that the time format parameter requires:</para>
            <itemizedlist>
                <listitem>
                    <para>riemann-c-client 1.10.0 or newer</para>
                    <para>In older versions of riemann-c-client, the microseconds option is not available.</para>
                    <para>In case your distribution does not contain a recent enough version of riemann-c-client and you wish to use microseconds, install a new version from <link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://github.com/algernon/riemann-c-client"/>.</para>
                    <para>If you installed the new version in a custom location (instead of the default one), make sure that you append the directory of the pkg-config file (<filename>.pc</filename> file) to the environment variable <userinput>export PKG_CONFIG_PATH=...</userinput>.</para>
                    <para>After calling <command>configure</command>, you should see the following message in the case of successful installation:</para>
                    <synopsis>[...]
 Riemann destination (module): yes, microseconds: yes
[...]</synopsis>
                </listitem>
                <listitem>
                    <para>Riemann 2.13 or newer</para>
                    <para>Older versions of Riemann cannot handle microseconds. No error will be indicated, however, the time of the event will be set to the timestamp when the message arrived to Riemann.</para>
                </listitem>
            </itemizedlist>
            <example>
                <title>Example event-time() option</title>
                <synopsis>destination d_riemann {
   riemann(
   server("127.0.0.1")
   port(5555)
   event-time("${UNIXTIME}")
   [...]
   );
};</synopsis>
            </example>
        </simplesect>
        <simplesect xml:id="riemann-option-flush-lines">
            <title>flush-lines()</title>
            <indexterm type="parameter">
                <primary>flush-lines()</primary>
                <secondary>riemann</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry>1</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The &abbrev; application can send the messages in a batch to the Riemann server. To send messages in batches, increase the <parameter>flush-lines()</parameter> parameter (by default, it is set to 1). The &abbrev; application waits for this number of lines to accumulate, and sends them off in a single batch. Increasing this number increases throughput as more messages are sent in a single batch, but also increases message latency. Note that currently the <parameter>riemann()</parameter> destination does not have a timeout for sending messages if the batch is not full.</para>
            <para>For example, if you set <parameter>flush-lines()</parameter> to 100, &abbrev; waits for 100 messages. If the source sends a few messages, but less than 100 messages, &abbrev; will not send the messages to the destination. If you stop or reload &abbrev; or in case of network sources, the connection with the client is closed, &abbrev; automatically sends the unsent messages to the destination.</para>
            <para>If an error occurs while sending the messages to the server, &abbrev; will try to resend every message from the batch. If it does not succeed (you can set the number of retry attempts in the <parameter>retries()</parameter> option), &abbrev; drops every message in the batch.</para>
        </simplesect>
        <simplesect xml:id="riemann-option-host">
            <title>host()</title>
            <indexterm type="parameter">
                <primary>host()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>template, macro, or string</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry>${HOST}</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The value to add as the host field of the Riemann event.</para>
        </simplesect>
        <simplesect>
            <xi:include href="../../shared/chunk/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <title>metric()</title>
            <indexterm type="parameter">
                <primary>metric()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>template, macro, or string</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The numeric value to add as the metric field of the Riemann event. If possible, include type-hinting as well, otherwise the Riemann server will interpret the value as a floating-point number. The following example specifies the SEQNUM macro as an integer.</para>
            <synopsis>metric(int("$SEQNUM"))</synopsis>
        </simplesect>
        <simplesect xml:id="riemann-option-port">
            <title>port()</title>
            <indexterm type="parameter">
                <primary>port()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry>5555</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The port number of the Riemann server.</para>
        </simplesect>
        <simplesect>
            <xi:include href="../../shared/chunk/option-destination-retries.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <title>server()</title>
            <indexterm type="parameter">
                <primary>server()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>hostname or IP address</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry>127.0.0.1</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The hostname or IP address of the Riemann server.</para>
        </simplesect>
        <simplesect>
            <title>service()</title>
            <indexterm type="parameter">
                <primary>service()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>template, macro, or string</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry>${PROGRAM}</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The value to add as the service field of the Riemann event.</para>
        </simplesect>
        <simplesect>
            <title>state()</title>
            <indexterm type="parameter">
                <primary>state()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>template, macro, or string</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The value to add as the state field of the Riemann event.</para>
        </simplesect>
        <simplesect>
            <title>tags()</title>
            <indexterm type="parameter">
                <primary>tags()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>string list</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry>the tags already assigned to the message</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The list of tags to add as the tags field of the Riemann event. If not specified &abbrev; automatically adds the tags already assigned to the message. If you set the <parameter>tags()</parameter> option, only the tags you specify will be added to the event.</para>
        </simplesect>
        <simplesect>
            <xi:include href="../../shared/chunk/option-destination-throttle.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <title>timeout()</title>
            <indexterm type="parameter">
                <primary>timeout()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>number [seconds]</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The value (in seconds) to wait for an operation to complete, and attempt to reconnect the Riemann server if exceeded. By default, the timeout is disabled.</para>
        </simplesect>
        <simplesect>
            <title>ttl()</title>
            <indexterm type="parameter">
                <primary>ttl()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>template, macro, or number</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The value (in seconds) to add as the ttl (time-to-live) field of the Riemann event.</para>
        </simplesect>
        <simplesect>
            <title>type()</title>
            <indexterm type="parameter">
                <primary>type()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>tcp | tls | udp</entry>
                        </row>
                        <row>
                            <entry>Default: 
                                 </entry>
                            <entry>tcp</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The type of the network connection to the Riemann server: TCP, TLS, or UDP. For TLS connections, set the <parameter>ca-file()</parameter> option to authenticate the Riemann server, and the <parameter>cert-file()</parameter> and <parameter>key-file()</parameter> options if the Riemann server requires authentication from its clients.</para>
            <formalpara>
                <title>Declaration 1:</title>
                <para/>
            </formalpara>
            <synopsis>destination d_riemann {
	riemann(
		server("127.0.0.1")
		port(5672)
		type(
		   "tls"
		   ca-file("ca")
		   cert-file("cert") 
		   key-file("key")
		)
	);
};</synopsis>
            <para>An alternative way to specify TLS options is to group them into a <parameter>tls()</parameter> block. This allows you to separate them and ensure better readability.</para>
            <formalpara>
                <title>Declaration 2:</title>
                <para/>
            </formalpara>
            <synopsis>destination d_riemann {
	riemann(
		server("127.0.0.1")
		port(5672)
		type("tls")<emphasis role="bold">
		tls(
			ca-file("ca")
			cert-file("cert") 
			key-file("key")
		)</emphasis>
	);
};</synopsis>
            <para>Make sure that you specify TLS options either using <parameter>type()</parameter> or using the <parameter>tls()</parameter> block. Avoid mixing the two methods. In case you do specify TLS options in both ways, the one that comes later in the configuration file will take effect.</para>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colname="c1" colwidth="40pt"/>
                    <colspec colnum="2" colname="c2"/>
                    <tbody>
                        <row>
                            <entry>
                                <indexterm type="parameter">
                                    <primary>cacert()</primary>
                                </indexterm>
                                <indexterm type="parameter">
                                    <primary>ca-file()</primary>
                                </indexterm><emphasis role="bold">ca-file()</emphasis>
                            </entry>
                            <entry/>
                        </row>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>path to a CA certificate in PEM format</entry>
                        </row>
                        <row>
                            <entry>Default:
                                 </entry>
                            <entry/>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">
                                <para><emphasis role="bold">Description:</emphasis> Path to the CA certificate in PEM format that signed the certificate of the Riemann server. When establishing TLS connection, &abbrev; verifies the certificate of the Riemann server using this CA.</para>
                                <para><emphasis role="bold">Alternative 1:</emphasis></para>
                                <synopsis>type(
	"tls"
	<emphasis role="bold">ca-file("/opt/syslog-ng/etc/syslog-ng/riemann-cacert.pem")</emphasis>
	)</synopsis>
                                <para><emphasis role="bold">Alternative 2:</emphasis></para>
                                <synopsis>riemann(
	.
	.
	type("tls")
<emphasis role="bold">	tls(
          	ca-file("/opt/syslog-ng/etc/syslog-ng/riemann-cacert.pem")
	)</emphasis></synopsis>
                                <para condition="ose">This option was called <parameter>cacert()</parameter> up until (and including) &abbrev; version 3.12.</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colname="c1" colwidth="40pt"/>
                    <colspec colnum="2" colname="c2"/>
                    <tbody>
                        <row>
                            <entry>
                                <indexterm type="parameter">
                                    <primary>cert()</primary>
                                </indexterm>
                                <indexterm type="parameter">
                                    <primary>cert-file()</primary>
                                </indexterm><emphasis role="bold">cert-file()</emphasis>
                            </entry>
                            <entry/>
                        </row>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>path to a certificate in PEM format</entry>
                        </row>
                        <row>
                            <entry>Default:
                                 </entry>
                            <entry/>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">
                                <para><emphasis role="bold">Description:</emphasis> Path to the a certificate file in PEM format. When establishing TLS connection, &abbrev; authenticates on the Riemann server using this certificate and the matching private key set in the <parameter>key-file()</parameter> option.</para>
                                <xi:include href="../../shared/chunk/destination-riemann-tls-description.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                                <para condition="ose">This option was called <parameter>cert()</parameter> in &abbrev; version 3.7.</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colname="c1" colwidth="40pt"/>
                    <colspec colnum="2" colname="c2"/>
                    <tbody>
                        <row>
                            <entry>
                                <indexterm type="parameter">
                                    <primary>key()</primary>
                                </indexterm>
                                <indexterm type="parameter">
                                    <primary>key-file()</primary>
                                </indexterm><emphasis role="bold">key-file()</emphasis>
                            </entry>
                            <entry/>
                        </row>
                        <row>
                            <entry>Type: 
                                 </entry>
                            <entry>path to a private key file</entry>
                        </row>
                        <row>
                            <entry>Default:
                                 </entry>
                            <entry/>
                        </row>
                        <row>
                            <entry namest="c1" nameend="c2">
                                <para><emphasis role="bold">Description:</emphasis> Path to the private key of the certificate file set in the <parameter>cert-file()</parameter> option. When establishing TLS connection, &abbrev; authenticates on the Riemann server using this private key and the matching certificate set in the <parameter>cert-file()</parameter> option.</para>
                                <xi:include href="../../shared/chunk/destination-riemann-tls-description.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                                <para condition="ose">This option was called <parameter>key()</parameter> in &abbrev; version 3.7.</para>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
        </simplesect>
    </section>
</section>
