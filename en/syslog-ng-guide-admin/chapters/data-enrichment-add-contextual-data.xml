<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="data-enrichment-add-contextual-data" condition="ose" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Adding metadata from an external file</title>
    <indexterm>
        <primary>data enrichment</primary>
        <secondary><parameter>add-contextual-data()</parameter></secondary>
    </indexterm>
    <indexterm>
        <primary>enriching data</primary>
        <secondary><parameter>add-contextual-data()</parameter></secondary>
    </indexterm>
    <para>In &abbrev; version <phrase condition="ose">3.8</phrase><phrase condition="pe">7</phrase> and later, you can use an external database file to add additional metadata to your log messages. For example, you can create a database (or export it from an existing tool) that contains a list of hostnames or IP addresses, and the department of your organization that the host belongs to, the role of the host (mailserver, webserver, and so on), or similar contextual information.</para>
    <para>The database file is a simple text file in comma-separated value (CSV) format, where each line contains the following information:</para>
    <itemizedlist>
        <listitem>
            <para>a selector or ID that appears in the log messages related to the line (for example, the hostname),</para>
        </listitem>
        <listitem>
            <para>the name of the name-value pair that &abbrev; adds to matching log messages, and</para>
        </listitem>
        <listitem>
            <para>the value of the name-value pairs.</para>
        </listitem>
    </itemizedlist>
    <para>For example, the following csv-file contains three lines identified with the IP address, and adds the <userinput>host-role</userinput> field to the log message.</para>
    <synopsis>192.168.1.1,host-role,webserver
192.168.2.1,host-role,firewall
192.168.3.1,host-role,mailserver</synopsis>
    <para>The CSV-parser of the &abbrev; <parameter>add-contextual-data</parameter> supports the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="https://tools.ietf.org/html/rfc4180">RFC4180 CSV format</link>, with the following exceptions and limitations:</para>
    <itemizedlist>
        <listitem>
            <para>You the values of the CSV-file cannot contain line-breaks</para>
        </listitem>
        <listitem>
            <para>The lines must end with UNIX-style linebreaks (LF), Windows-style line-breaks (CRLF) are not supported.</para>
        </listitem>
    </itemizedlist>
    <para>To add multiple name-value pairs to a message, include a separate line in the database for each name-value pair, for example:</para>
    <synopsis>192.168.1.1,host-role,webserver
192.168.1.1,contact-person,"John Doe"
192.168.1.1,contact-email,johndoe@example.com</synopsis>
    <para>Technically, <parameter>add-contextual-data()</parameter> is a parser in &abbrev; so you have to define it as a parser object.</para>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>parser p_add_context_data {
    add-contextual-data(
        selector("$HOST"),
        database("context-info-db.csv"),
    );
};
</synopsis>
    <para>You can also add data to messages that do not have a matching selector entry in the database using the <parameter>default-selector()</parameter> option.</para>
    <para>If you modify the database file, you have to reload &abbrev; for the changes to take effect. If reloading &abbrev; or the database file fails for some reason, &abbrev; will keep using the last working database file.</para>
    <example>
        <title>Adding metadata from a CSV file</title>
        <para>The following example defines uses a CSV database to add the role of the host based on its IP address, and prefixes the added name-value pairs with <userinput>.metadata</userinput>. The destination includes a template that simply appends the added name-value pairs to the end of the log message.</para>
        <synopsis>@include "scl.conf"

source s_network {
    network(port(5555));
};

destination d_local {
    file("/tmp/test-msgs.log"
    template("$MSG Additional metadata:[${.metadata.host-role}]")};

parser p_add_context_data {
    add-contextual-data(selector("$SOURCEIP"), database("context-info-db.csv"), default-selector("unknown"), prefix(".metadata."));
};

log {
    source(s_network);
    parser(p_add_context_data);
    destination(d_local);
};</synopsis>
    <synopsis>192.168.1.1,host-role,webserver
192.168.2.1,host-role,firewall
192.168.3.1,host-role,mailserver
unknown,host-role,unknown</synopsis>
    </example>
    <section xml:id="reference-add-contextual-data-options">
        <title>Options add-contextual-data()</title>
        <indexterm>
            <primary>data enrichment</primary>
            <secondary><parameter>add-contextual-data()</parameter></secondary>
        </indexterm>
        <indexterm>
            <primary>enriching data</primary>
            <secondary><parameter>add-contextual-data()</parameter></secondary>
        </indexterm>
        <para>The <parameter>add-contextual-data()</parameter> has the following options.</para>
        <formalpara>
            <title>Required options:</title>
            <para/>
        </formalpara>
        <para>The following options are required: <parameter>selector()</parameter>, <parameter>database()</parameter>.</para>
        <simplesect xml:id="add-contextual-data-option-database">
            <title>database()</title>
            <indexterm type="parameter">
                <primary>add-contextual-data()</primary>
                <secondary>database</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>add-contextual-data()</primary>
                <secondary>database</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
								<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>&lt;path-to-file&gt;.csv</entry>
                        </row>
                        <row>
                            <entry>Default:
								<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry></entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> Specifies the path to the CSV file, for example, <userinput>/opt/syslog-ng/my-csv-database.csv</userinput>. The extension of the file must be <filename>.csv</filename>. You can use absolute path, or relative to the &abbrev; binary.</para>
        </simplesect>
        <simplesect>
            <title>default-selector()</title>
            <indexterm>
              <primary>default-selector()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
              <tgroup cols="2">
                  <colspec colnum="1" colwidth="50pt"/>
                  <tbody>
                      <row>
                          <entry>Synopsis:
                            <?dbhtml bgcolor="#D4D6EB" ?>
                            <?dbfo bgcolor="#D4D6EB" ?>
                          </entry>
                          <entry>default-selector()</entry>
                      </row>
                  </tbody>
              </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> Specifies the ID of the entry (line) that is corresponds to log messages that do not have a selector that matches an entry in the database. For example, if you add name-value pairs from the database based on the hostname from the log message (<userinput>selector("${HOST}")</userinput>), then you can include a line for unknown hosts in the database, and set <parameter>default-selector()</parameter> to the ID of the line for unknown hosts. In the CSV file:</para>
            <synopsis>unknown-hostname,host-role,unknown</synopsis>
            <para>In the &abbrev; configuration file:</para>
            <synopsis>add-contextual-data(
    selector("$HOST")
    database("context-info-db.csv")
    default-selector("unknown-hostname")
);</synopsis>
        </simplesect>
        <simplesect>
            <title>prefix()</title>
            <indexterm>
              <primary>prefix()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
              <tgroup cols="2">
                  <colspec colnum="1" colwidth="50pt"/>
                  <tbody>
                      <row>
                          <entry>Synopsis:
                            <?dbhtml bgcolor="#D4D6EB" ?>
                            <?dbfo bgcolor="#D4D6EB" ?>
                          </entry>
                          <entry>prefix()</entry>
                      </row>
                  </tbody>
              </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> Insert a prefix before the name part of the added name-value pairs (including the pairs added by the <parameter>default-selector()</parameter>) to help further processing. </para>
        </simplesect>
        <simplesect>
            <title>selector()</title>
            <indexterm>
              <primary>selector()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
              <tgroup cols="2">
                  <colspec colnum="1" colwidth="50pt"/>
                  <tbody>
                      <row>
                          <entry>Synopsis:
                            <?dbhtml bgcolor="#D4D6EB" ?>
                            <?dbfo bgcolor="#D4D6EB" ?>
                          </entry>
                          <entry>selector()</entry>
                      </row>
                  </tbody>
              </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> Specifies the string or macro that &abbrev; evaluates for each message, and if its value matches the ID of an entry in the database, &abbrev; adds the name-value pair of every matching database entry to the log message. Currently, you can use strings and a single macro (for example, <userinput>${HOST}</userinput>) in the <parameter>selector()</parameter> option, templates are not supported.</para>
        </simplesect>
    </section>
</section>
