<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
[
<!ENTITY % entities SYSTEM "../../shared/syslog-ng-entities.ent">
%entities;
]>
<section xml:id="parser-map-value-pairs" xmlns="http://docbook.org/ns/docbook" version="5.0" condition="ose">
    <title><parameter>map-value-pairs</parameter>: Rename value-pairs to normalize logs</title>
    <indexterm>
        <primary>log normalization</primary>
    </indexterm>
    <indexterm>
        <primary>normalize logs</primary>
    </indexterm>
    <indexterm>
        <primary>rename value-pairs</primary>
    </indexterm>
    <indexterm>
        <primary>map value-pairs</primary>
    </indexterm>
    <indexterm>
        <primary>convert value-pairs</primary>
    </indexterm>
    <indexterm>
        <primary>rename fields</primary>
    </indexterm>
    <indexterm>
        <primary>map fields</primary>
    </indexterm>
    <indexterm>
        <primary>parsers</primary>
        <secondary>map-value-pairs</secondary>
    </indexterm>
    <indexterm>
        <primary>value-pairs</primary>
        <secondary>rename</secondary>
    </indexterm>
    <indexterm>
        <primary>value-pairs</primary>
        <secondary>bulk rename</secondary>
    </indexterm>
    <indexterm>
        <primary>value-pairs</primary>
        <secondary>map</secondary>
    </indexterm>
    <para>The <parameter>map-value-pairs()</parameter> parser allows you to map existing name-value pairs to a different set of name-value pairs. You can rename them in bulk, making it easy to use for log normalization tasks (for example, when you parse information from different log messages, and want to convert them into a uniform naming scheme). You can use the <link linkend="concepts-value-pairs">normal value-pairs expressions</link>, similarly to value-pairs based destinations.</para>
    <para>Available in &abbrev; version <phrase condition="ose">3.10</phrase> and later.</para>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>parser parser_name {
    map-value-pairs(
        &lt;list-of-value-pairs-options&gt;
    );
};</synopsis>
    <example>
        <title>Map name-value pairs</title>
        <para>The following example creates a new name-value pair called <userinput>username</userinput>, adds the hashed value of the <userinput>.apache.username</userinput> to this new name-value pair, then adds the <userinput>webserver</userinput> prefix to the name of every name-value pair of the message that starts with <userinput>.apache</userinput></para>
        <synopsis>parser p_remap_name_values {
    map-value-pairs(
        pair("username", "'($sha1 $.apache.username)")
        key('.apache.*' rekey(add-prefix("webserver")))
    );
};</synopsis>
    </example>
</section>
