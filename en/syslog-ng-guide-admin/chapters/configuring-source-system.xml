<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter
 [
 <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="configuring-source-system" xmlns="http://docbook.org/ns/docbook">
    <title><parameter>system</parameter>: Collecting the system-specific log messages of a platform</title>
    <indexterm type="parameter">
        <primary>system()</primary>
    </indexterm>
    <indexterm>
        <primary>source drivers</primary>
        <secondary><parameter>system()</parameter> driver</secondary>
    </indexterm>
    <indexterm>
        <primary>scl</primary>
        <secondary><parameter>system()</parameter></secondary>
    </indexterm>
    <para>Starting with version <phrase condition="pe">4 F1</phrase><phrase condition="ose">3.2</phrase>, &abbrev; can automatically collect the system-specific log messages of the host on a number of platforms using the <parameter>system()</parameter> driver. If the <parameter>system()</parameter> driver is included in the &abbrev; configuration file, &abbrev; automatically adds the following sources to the &abbrev; configuration.</para>
    <note>
        <para>&abbrev; versions <phrase condition="pe">4.1-5.0</phrase><phrase condition="ose">3.2-3.3</phrase> used an external script to generate the <parameter>system()</parameter> source, but this was problematic in certain situations, for example, when the host used a strict AppArmor profile. Therefore, the <parameter>system()</parameter> source is now generated internally in &abbrev;.</para>
    </note>
    <para>The <parameter>system()</parameter> driver is also used in the default configuration file of &abbrev;. For details on the default configuration file, see <xref linkend="example-defaultconfig"/>. Starting with &abbrev; version <phrase condition="ose">3.6</phrase>, you can use the <command>system-expand</command> command-line utility (which is a shell script, located in the <filename>modules/system-source/</filename> directory) to display the configuration that the <parameter>system()</parameter> source will use.</para>
    <warning>
        <para>If &abbrev; does not recognize the platform it is installed on, it does not add any sources.</para>
    </warning>
    <para>Starting with version <phrase condition="ose">3.6</phrase><phrase condition="pe">7.0</phrase>, &abbrev; parses messages complying with the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://docs.splunk.com/Documentation/CIM/latest/User/Overview">Splunk Common Information Model (CIM)</link> and marked with <userinput>@cim</userinput> as JSON messages (for example, the ulogd from the netfilter project can emit such messages). That way, you can forward such messages without losing any information to CIM-aware applications (for example, Splunk).</para>
    <indexterm>
        <primary>Common Information Model (CIM)</primary>
    </indexterm>
    <indexterm>
        <primary>JSON</primary>
        <secondary>Common Information Model (CIM)</secondary>
    </indexterm>
    <indexterm>
        <primary>CIM</primary>
    </indexterm>
    <indexterm>
        <primary>@cim</primary>
    </indexterm>
    <table>
        <title>Sources automatically added by &product;</title>
        <tgroup cols="2">
            <thead>
                <row>
                    <entry>Platform</entry>
                    <entry>Message source</entry>
                </row>
            </thead>
            <tbody>
                <row>
                    <entry>AIX and Tru64</entry>
                    <entry>
                        <?dbhtml bgcolor="#D4D6EB" ?>
                        <?dbfo bgcolor="#D4D6EB" ?>
                        <synopsis>unix-dgram("/dev/log");</synopsis>
                    </entry>
                </row>
                <row>
                    <entry>FreeBSD</entry>
                    <entry>
                        <?dbhtml bgcolor="#D4D6EB" ?>
                        <?dbfo bgcolor="#D4D6EB" ?>
                        <synopsis>unix-dgram("/var/run/log");</synopsis>
                        <synopsis>unix-dgram("/var/run/logpriv" perm(0600));</synopsis>
                        <synopsis>file("/dev/klog" follow-freq(0) program-override("kernel") flags(no-parse));</synopsis>
                        <para>For FreeBSD versions earlier than 9.1, <parameter>follow-freq(1)</parameter> is used.</para>
                    </entry>
                </row>
                <row>
                    <entry>GNU/kFreeBSD</entry>
                    <entry>
                        <?dbhtml bgcolor="#D4D6EB" ?>
                        <?dbfo bgcolor="#D4D6EB" ?>
                        <synopsis>unix-dgram("/var/run/log");</synopsis>
                        <synopsis>file("/dev/klog" follow-freq(0) program-override("kernel"));</synopsis>
                    </entry>
                </row>
                <row>
                    <entry>HP-UX</entry>
                    <entry>
                        <?dbhtml bgcolor="#D4D6EB" ?>
                        <?dbfo bgcolor="#D4D6EB" ?>
                        <synopsis>pipe("/dev/log" pad-size(2048));</synopsis>
                    </entry>
                </row>
                <row>
                    <entry>Linux</entry>
                    <entry>
                        <?dbhtml bgcolor="#D4D6EB" ?>
                        <?dbfo bgcolor="#D4D6EB" ?>
                        <synopsis>unix-dgram("/dev/log");</synopsis>
                        <synopsis>file("/proc/kmsg" program-override("kernel") flags(kernel));</synopsis>
                        <para>Note that on Linux, the <parameter>so-rcvbuf()</parameter> option of the <parameter>system()</parameter> source is automatically set to 8192.</para>
                        <indexterm>
                            <primary>systemd</primary>
                        </indexterm>
                        <para>If the host is running under systemd, &abbrev; reads directly from the systemd journal file using the <parameter>systemd-journal()</parameter> source.</para>
                        <indexterm>
                            <primary>multiline</primary>
                            <secondary>indented-multiline</secondary>
                        </indexterm>
                        <indexterm>
                            <primary>kmsg</primary>
                        </indexterm>
                        <para>If the kernel of the host is version 3.5 or newer, and <filename>/dev/kmsg</filename> is seekable, &abbrev; will use that instead of <filename>/proc/kmsg</filename>, using the <parameter>multi-line-mode(indented)</parameter>, <parameter>keep-timestamp(no)</parameter>, and the <parameter>format(linux-kmsg)</parameter> options.</para>
                        <para>If &abbrev; is running in a jail or a Linux Container (LXC), it will not read from the <filename>/dev/kmsg</filename> or <filename>/proc/kmsg</filename> files.</para>
                    </entry>
                </row>
                <row>
                    <entry>Solaris 8</entry>
                    <entry>
                        <?dbhtml bgcolor="#D4D6EB" ?>
                        <?dbfo bgcolor="#D4D6EB" ?>
                        <synopsis>sun-streams("/dev/log");</synopsis>
                        <xi:include href="../../common/wnt/note-solaris-msgid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                    </entry>
                </row>
                <row>
                    <entry>Solaris 9</entry>
                    <entry>
                        <?dbhtml bgcolor="#D4D6EB" ?>
                        <?dbfo bgcolor="#D4D6EB" ?>
                        <synopsis>sun-streams("/dev/log" door("/etc/.syslog_door"));</synopsis>
                        <xi:include href="../../common/wnt/note-solaris-msgid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                    </entry>
                </row>
                <row>
                    <entry>Solaris 10</entry>
                    <entry>
                        <?dbhtml bgcolor="#D4D6EB" ?>
                        <?dbfo bgcolor="#D4D6EB" ?>
                        <synopsis>sun-streams("/dev/log" door("/var/run/syslog_door"));</synopsis>
                        <xi:include href="../../common/wnt/note-solaris-msgid.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                    </entry>
                </row>
            </tbody>
        </tgroup>
    </table>
</section>
