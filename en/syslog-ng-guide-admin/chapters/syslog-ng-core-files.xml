<!DOCTYPE chapter
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<procedure xml:id="syslog-ng-core-files" xmlns="http://docbook.org/ns/docbook">
    <title>Creating syslog-ng core files</title>
    <indexterm>
        <primary>troubleshooting</primary>
        <secondary>syslog-ng</secondary>
    </indexterm>
    <indexterm>
        <primary>troubleshooting</primary>
        <secondary>core files</secondary>
    </indexterm>
    <indexterm>
        <primary>core files</primary>
    </indexterm>
    <formalpara>
        <title>Purpose:</title>
        <para/>
    </formalpara>
    <para>When syslog-ng crashes for some reason, it can create a core file that contains important troubleshooting information. To enable core files, complete the following procedure:</para>
    <formalpara>
        <title>Steps:</title>
        <para/>
    </formalpara>
    <step>
        <para>Core files are produced only if the <userinput>maximum core file size</userinput> ulimit is set to a high value in the init script of syslog-ng.<!-- FIXME why is this disabled by default? where should the user put this line within the file?-->Add the following line to the init script of syslog-ng:</para>
        <synopsis>ulimit -c unlimited</synopsis>
    </step>
    <step>
        <para>Verify that syslog-ng has permissions to write the directory it is started from, for example <filename>/opt/syslog-ng/sbin/</filename>.</para>
    </step>
    <step>
        <para>If syslog-ng crashes, it will create a core file in the directory syslog-ng was started from.</para>
    </step>
    <step>
        <para>To test that syslog-ng can create a core file, you can create a crash manually. For this, determine the PID of syslog-ng (for example using the <command>ps -All|grep syslog-ng</command> command), then issue the following command: <command>kill -ABRT &lt;syslog-ng pid&gt;</command></para>
        <para>This should create a core file in the current working directory.</para>
    </step>
</procedure>
