<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="configuring-sources-wildcard-file" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title><parameter>wildcard-file</parameter>: Collecting messages from multiple text files</title>
    <indexterm> <primary>source drivers</primary> <secondary><parameter>file()</parameter> driver</secondary> </indexterm>
    <indexterm> <primary>source drivers</primary> <secondary><parameter>wildcard-file()</parameter> driver</secondary> </indexterm>
    <para>The <parameter>wildcard-file()</parameter> source collects log messages from multiple plain-text files from multiple directories. The <parameter>wildcard-file()</parameter> source is available in &abbrev; version <phrase condition="ose">3.10</phrase><phrase condition="pe">7.0.3</phrase> and later.</para>
    <para>The &abbrev; application notices if a file is renamed or replaced with a new file, so it can correctly follow the file even if logrotation is used. When &abbrev; is restarted, it records the position of the last sent log message in the <filename>/opt/syslog-ng/var/syslog-ng.persist</filename> file, and continues to send messages from this position after the restart.</para>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>wildcard-file(
    base-dir("&lt;pathname&gt;")
    file-pattern("&lt;filename&gt;")
);</synopsis>
    <para>Note the following important points:</para>
    <itemizedlist>
        <listitem>
            <para>You can use the <userinput>*</userinput> and <userinput>?</userinput> wildcard characters in the filename (the <parameter>file-pattern()</parameter> option), but not in the path (the <parameter>base-dir()</parameter> option).</para>
        </listitem>
        <listitem>
            <para>When using the <parameter>wildcard-file()</parameter> source, always set how often &abbrev; should check the files for new messages using the <parameter>follow-freq()</parameter> parameter.</para>
        </listitem>
        <listitem>
            <xi:include href="../../common/wnt/warning-wildcard-overlapping-files.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </listitem>
        <listitem>
            <xi:include href="../../common/chunk/para-wildcard-file-source-max-files.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </listitem>
        <listitem>
            <para>If the message does not have a proper syslog header, &abbrev; treats messages received from files as sent by the <parameter>kern</parameter> facility. Use the <parameter>default-facility()</parameter> and <parameter>default-priority()</parameter> options in the source definition to assign a different facility if needed.</para>
        </listitem>
    </itemizedlist>
    <para>Required parameters: <parameter>base-dir()</parameter>, <parameter>file-pattern()</parameter>. For the list of available optional parameters, see <xref linkend="reference-source-wildcard-file"/>.</para>
    <example>
        <title>Using the wildcard-file() driver</title>
        <para>The following example monitors every file with the <filename>.log</filename> extension in the <filename>/var/log</filename> directory for log messages.</para>
        <xi:include href="../../common/chunk/synopsis-wildcard-file-source-example.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    </example>
    <section xml:id="reference-source-wildcard-file">
        <title>wildcard-file() source options</title>
        <indexterm> <primary>source drivers</primary> <secondary><parameter>wildcard-file()</parameter> driver</secondary> </indexterm>
        <para>The <parameter>wildcard-file()</parameter> driver has the following options:</para>
        <simplesect xml:id="source-wildcard-file-base-dir">
            <title>base-dir()</title>
            <indexterm type="parameter"> <primary>base-dir()</primary> </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry>path without filename</entry>
                        </row>
                        <row>
                            <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The path to the directory that contains the log files to monitor, for example, <userinput>base-dir("/var/log")</userinput>. To monitor also the subdirectories of the base directory, use the <userinput>recursive(yes)</userinput> option. For details, see <xref linkend="source-wildcard-file-recursive"/>.</para>
            <warning>
                <xi:include href="../../common/wnt/warning-wildcard-overlapping-files.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </warning>
            <xi:include href="../../common/chunk/synopsis-wildcard-file-source-example.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-default-facility.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-default-priority.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-encoding.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="source-wildcard-file-file-pattern">
            <title>file-pattern()</title>
            <indexterm type="parameter"> <primary>file-pattern()</primary> </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry>filename without path</entry>
                        </row>
                        <row>
                            <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <indexterm type="parameter"> <primary>glob</primary> </indexterm>
            <indexterm> <primary>glob patterns</primary> </indexterm>
            <para><emphasis role="bold">Description:</emphasis> The filename to read messages from, without the path. You can use the <userinput>*</userinput> and <userinput>?</userinput> wildcard characters, without regular expression and character range support. You cannot use the <userinput>*</userinput> and <userinput>?</userinput> literally in the pattern.</para>
            <para>For example, <userinput>file-pattern("*.log")</userinput> matches the <filename>syslog.log</filename> and <filename>auth.log</filename> files, but does not match the <filename>access_log</filename> file. The <userinput>file-pattern("*log")</userinput> pattern matches all three.</para>
            <variablelist>
                <varlistentry>
                    <term><command>*</command> </term>
                    <listitem>
                        <para>matches an arbitrary string, including an empty string</para>
                    </listitem>
                </varlistentry>
                <varlistentry>
                    <term><command>?</command> </term>
                    <listitem>
                        <para>matches an arbitrary character</para>
                    </listitem>
                </varlistentry>
            </variablelist>
            <warning>
                <xi:include href="../../common/wnt/warning-wildcard-overlapping-files.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </warning>
            <xi:include href="../../common/chunk/synopsis-wildcard-file-source-example.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-flags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="wildcard-file-source-option-follow-freq">
            <xi:include href="../../common/chunk/option-source-follow-freq.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-keep-timestamp.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-log-fetch-limit.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-file-log-iw-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>When using wildcards in the filenames, &abbrev; attempts to read <parameter>log-fetch-limit()</parameter> number of messages from each file. For optimal performance, make sure that <parameter>log-iw-size()</parameter> is greater than <userinput>log-fetch-limit()*max-files()</userinput>. Note that to avoid performance problems, if <userinput>log-iw-size()/max-files()</userinput> is smaller than 100, &abbrev; automatically sets <userinput>log-iw-size()</userinput> to <userinput>max-files()*100</userinput>.</para>
            <example>
                <title>Initial window size of file sources</title>
                <para>If <userinput>log-fetch-limit()</userinput> is 100, and your wildcard file source has 200 files, then <parameter>log-iw-size()</parameter> should be at least 20000.</para>
            </example>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-log-msg-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-log-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="source-wildcard-file-max-files">
            <title>max-files()</title>
            <indexterm type="parameter"> <primary>max-files()</primary> </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry>integer</entry>
                        </row>
                        <row>
                            <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry>100 </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> Limits the number of files that the wildcard-file source monitors.</para>
            <xi:include href="../../common/chunk/para-wildcard-file-source-max-files.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="source-wildcard-file-monitor-method">
            <title>monitor-method()</title>
            <indexterm type="parameter"> <primary>monitor-method()</primary> </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry>auto | inotify | poll</entry>
                        </row>
                        <row>
                            <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry>auto </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <indexterm> <primary>polling files</primary> </indexterm>
            <indexterm> <primary>inotify</primary> </indexterm>
            <para><emphasis role="bold">Description:</emphasis> If the platform supports inotify, &abbrev; uses it automatically to detect changes to the source files. If inotify is not available, &abbrev; polls the files as set in the <link linkend="wildcard-file-source-option-follow-freq"><parameter>follow-freq()</parameter></link> option. To force &abbrev; poll the files even if inotify is available, set this option to <userinput>poll</userinput>.</para>
        </simplesect>
        <simplesect xml:id="source-wildcard-file-multi-line-garbage">
            <xi:include href="../../common/chunk/option-source-multi-line-garbage.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="source-wildcard-file-multi-line-mode">
            <xi:include href="../../common/chunk/option-source-multi-line-mode.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="source-wildcard-file-multi-line-prefix">
            <xi:include href="../../common/chunk/option-source-multi-line-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="source-wildcard-file-multi-line-suffix">
            <xi:include href="../../common/chunk/option-source-multi-line-suffix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-pad-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-program-override.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="source-wildcard-file-recursive">
            <title>recursive()</title>
            <indexterm type="parameter"> <primary>recursive()</primary> </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> </entry>
                            <entry>yes | no</entry>
                        </row>
                        <row>
                            <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?>
                                <?dbfo bgcolor="#D4D6EB" ?> no </entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> When enabled, &abbrev; monitors every subdirectory of the <link linkend="source-wildcard-file-base-dir">path set in the <parameter>base-dir()</parameter> option</link>, and reads log messages from files with matching filenames. The <parameter>recursive</parameter> option can be used together with wildcards in the filename.</para>
            <warning>
                <xi:include href="../../common/wnt/warning-wildcard-overlapping-files.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </warning>
            <example xml:id="example-source-wildcard-file-recursive">
                <title>Monitoring multiple directories</title>
                <para>The following example reads files having the <filename>.log</filename> extension from the <filename>/var/log/</filename> directory and its subdirectories, including for example the <filename>/var/log/apt/history.log</filename> file.</para>
                <synopsis>source s_file_subdirectories { wildcard-file(
    base-dir("/var/log")
    file-pattern("*.log")
    recursive(yes)
    follow-freq(1)
    log-fetch-limit(100)
    );};</synopsis>
            </example>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-tags.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-source-time-zone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
    </section>
</section>
