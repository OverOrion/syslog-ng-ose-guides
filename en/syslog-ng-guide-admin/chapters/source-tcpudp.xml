<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="configuring-sources-tcpudp" xmlns="http://docbook.org/ns/docbook" version="5.0">
	<title>Collecting messages from remote hosts using the BSD syslog protocol</title>
	<indexterm>
		<primary>source drivers</primary>
		<secondary><parameter>tcp()</parameter> driver</secondary>
	</indexterm>
	<indexterm>
		<primary>source drivers</primary>
		<secondary><parameter>tcp6()</parameter> driver</secondary>
	</indexterm>
	<indexterm>
		<primary>source drivers</primary>
		<secondary><parameter>udp()</parameter> driver</secondary>
	</indexterm>
	<indexterm>
		<primary>source drivers</primary>
		<secondary><parameter>udp6()</parameter> driver</secondary>
	</indexterm>
	<xi:include href="../../common/wnt/note-use-network-driver.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
	<para>The <parameter>tcp()</parameter>, <parameter>tcp6()</parameter>, <parameter>udp()</parameter>, <parameter>udp6()</parameter> drivers can receive syslog messages conforming to RFC3164 from the network using the TCP and UDP networking protocols. The <parameter>tcp6()</parameter> and <parameter>udp6()</parameter> drivers use the IPv6 network protocol, while <parameter>tcp()</parameter> and <parameter>udp()</parameter> use IPv4.</para>
	<para>UDP is a simple datagram oriented protocol, which provides "best effort service" to transfer messages between hosts. It may lose messages, and no attempt is made at the protocol level to retransmit such lost messages. The <emphasis>
			<link linkend="concepts-message-bsdsyslog">BSD-syslog</link>
		</emphasis> protocol traditionally uses UDP.</para>
	<para>TCP provides connection-oriented service, which basically means that the path of the messages is flow-controlled. Along this path, each message is acknowledged, and retransmission is done for lost packets. Generally it is safer to use TCP, because lost connections can be detected, and no messages get lost, assuming that the TCP connection does not break. When a TCP connection is broken the 'in-transit' messages that were sent by syslog-ng but not yet received on the other side are lost. (Basically these messages are still sitting in the socket buffer of the sending host and syslog-ng has no information about the fate of these messages). </para>
	<para>The <parameter>tcp()</parameter> and <parameter>udp()</parameter> drivers do not have any required parameters. By default they bind to the <userinput>0.0.0.0:514</userinput> address, which means that syslog-ng will listen on all available interfaces, port 514. To limit accepted connections to only one interface, use the <parameter>localip()</parameter> parameter as described below. For the list of available optional parameters, see <xref linkend="reference-source-tcpudp"/>.</para>
	<formalpara>
		<title>Declaration:</title>
		<para/>
	</formalpara>
	<synopsis>tcp([options]);
udp([options]);</synopsis>
	<note>
		<para>The TCP port 514 is reserved for use with <command>rshell</command>, so select a different port if syslog-ng and <command>rshell</command> is used at the same time. </para>
	</note>
	<para>If you specify a multicast bind address to <parameter>udp()</parameter> and <parameter>udp6()</parameter>, syslog-ng will automatically join the necessary multicast group. TCP does not support multicasting. </para>
	<para>The syslog-ng application supports TLS (Transport Layer Security, also known as SSL) for the tcp() and tcp6() drivers. For details, see the TLS-specific options below and <xref linkend="tls-serverauth"/>. For the list of available optional parameters, see <xref linkend="reference-source-tcpudp"/>.</para>
	<tip>
		<para>The <parameter>syslog()</parameter> driver also supports TLS-encrypted connections.</para>
	</tip>
	<indexterm>
		<primary>TLS</primary>
	</indexterm>
	<example xml:id="example-source-tcpudp">
		<title>Using the udp() and tcp() drivers</title>
		<para>A simple udp() source with default settings.</para>
		<synopsis>source s_udp { udp(); };# An UDP source with default settings.</synopsis>
		<para>A TCP source listening on the localhost interface, with a limited number of connections allowed.</para>
		<synopsis>source s_tcp { tcp(ip(127.0.0.1) port(1999) max-connections(10)); };</synopsis>
		<para>A TCP source listening on a TLS-encrypted channel.</para>
		<synopsis>source s_tcp { tcp(ip(127.0.0.1) port(1999)
           tls(peer-verify('required-trusted')
               key-file('/opt/syslog-ng/etc/syslog-ng/syslog-ng.key')
           cert-file('/opt/syslog-ng/etc/syslog-ng/syslog-ng.crt')));
};</synopsis>
		<para>A TCP source listening for messages using the IETF-syslog message format. Note that for transferring IETF-syslog messages, generally you are recommended to use the <parameter>syslog()</parameter> driver on both the client and the server, as it uses both the IETF-syslog message format and the protocol. For details, see <xref linkend="configuring-sources-syslog"/>.</para>
		<synopsis>source s_tcp_syslog { tcp(ip(127.0.0.1) port(1999) flags(syslog-protocol) ); };</synopsis>
	</example>
	<section xml:id="reference-source-tcpudp">
		<title>tcp(), tcp6(), udp() and udp6() source options &mdash; OBSOLETE</title>
		<xi:include href="../../common/wnt/note-use-network-driver.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
<!--
		FIXME mappinget, peldat
tcp/udp > transport(tcp/udp)
ipv4/v6 > ip-protocol(6)
tls > transport(tls)

-->
	</section>
</section>
