<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="configuring-destinations-hdfs" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Storing messages on the Hadoop Distributed File System (HDFS)</title>
    <indexterm>
        <primary>destination drivers</primary>
        <secondary><parameter>java()</parameter> driver</secondary>
    </indexterm>
    <indexterm>
        <primary>destination drivers</primary>
        <secondary><parameter>hdfs</parameter></secondary>
    </indexterm>
    <para>Version <phrase condition="pe">5.3</phrase><phrase condition="ose">3.7</phrase> of &abbrev; can send plain-text log files to the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://hadoop.apache.org/">Hadoop Distributed File System (HDFS)</link>, allowing you to store your log data on a distributed, scalable file system. This is especially useful if you have huge amount of log messages that would be difficult to store otherwise, or if you want to process your messages using Hadoop tools (for example, Apache Pig).</para>
    <para>Note the following limitations when using the &abbrev; <parameter>hdfs</parameter> destination:</para>
    <itemizedlist>
        <listitem>
            <para condition="ose">The <parameter>hdfs</parameter> destination is only supported on the Linux platform.</para>
            <para condition="pe">The <parameter>hdfs</parameter> destination is only supported on the Linux platforms that use the <filename>linux glibc2.11</filename> installer, that is: Debian 7 (wheezy), Red Hat ES 7, Ubuntu 12.04 (Precise Pangolin), Ubuntu 14.04 (Trusty Tahr).</para>
        </listitem>
        <listitem>
            <para>Since &abbrev; uses the official Java HDFS client, the <parameter>hdfs</parameter> destination has significant memory usage (about 400MB).</para>
        </listitem>
        <listitem>
            <para>The &abbrev; application always creates a new file if the previous has been closed. Appending data to existing files is not supported.</para>
        </listitem>
        <listitem>
            <xi:include href="../../common/chunk/para-hdfs-filename.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </listitem>
        <listitem>
            <xi:include href="../../common/chunk/para-hdfs-flush.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </listitem>
    </itemizedlist>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>@module mod-java

java(
    class_path("/opt/syslog-ng/lib/syslog-ng/java-modules/*.jar:&lt;path-to-preinstalled-hadoop-libraries&gt;")
    class_name("org.syslog_ng.hdfs.HdfsDestination")

    option("hdfs-uri", "hdfs://NameNode:8020")
    option("hdfs-file", "&lt;path-to-logfile&gt;")
);</synopsis>
    <example xml:id="example-destination-hdfs">
        <title>Storing logfiles on HDFS</title>
        <para>The following example defines an <parameter>hdfs</parameter> destination using only the required parameters.</para>
        <synopsis>@module mod-java

destination d_hdfs {
    java(
        class_path("/opt/syslog-ng/lib/syslog-ng/java-modules/*.jar:/opt/hadoop/libs/*.jar")
        class_name("org.syslog_ng.hdfs.HdfsDestination")

        option("hdfs-uri", "hdfs://10.140.32.80:8020")
        option("hdfs-file", "/user/log/logfile.txt")
    );
};
</synopsis>
    </example>
    <itemizedlist>
        <listitem>
            <para>To install the software required for the <parameter>hdfs</parameter> destination, see <xref linkend="destination-hdfs-prerequisites"/>.</para>
        </listitem>
        <listitem>
            <para>For details on how the <parameter>hdfs</parameter> destination works, see <xref linkend="destination-hdfs-interaction"/>.</para>
        </listitem>
        <listitem>
            <para>For the list of options, see <xref linkend="reference-destination-hdfs"/>.</para>
        </listitem>
    </itemizedlist>

    <procedure xml:id="destination-hdfs-prerequisites">
        <title>Prerequisites</title>
        <para>To send messages from &abbrev; to HDFS, complete the following steps.</para>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>Download and install the Java Runtime Environment (JRE), 1.7 (or newer). The &abbrev; <parameter>hdfs</parameter> destination is tested and supported when using the Oracle implementation of Java. Other implementations are untested and unsupported, they may or may not work as expected.</para>
        </step>
        <step>
            <para>Download the Hadoop Distributed File System (HDFS) libraries (version 2.x) from <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://hadoop.apache.org/releases.html">http://hadoop.apache.org/releases.html</link>.</para>
        </step>
        <step>
            <para>Extract the HDFS libraries into a temporary directory, then copy the following <filename>.jar</filename> files into a directory (for example, <filename>/opt/hadoop/lib/</filename>) where &abbrev; can access them. You must specify this directory in the &abbrev; configuration file. The files are located in the various <filename>lib</filename> directories under the <filename>share/hadoop/</filename> directory of the Hadoop release package.</para>
            <para>Note that the version numbers in the filenames can be different in the various Hadoop releases: <filename>commons-cli-1.2.jar</filename><filename>commons-configuration-1.6.jar</filename><filename>commons-logging-1.1.3.jar</filename><filename>hadoop-auth-2.6.0.jar</filename><filename>hadoop-hdfs-2.6.0.jar</filename><filename>log4j-1.2.17.jar</filename><filename>slf4j-api-1.7.5.jar</filename><filename>commons-collections-3.2.1.jar</filename><filename>commons-lang-2.6.jar</filename><filename>guava-11.0.2.jar</filename><filename>hadoop-common-2.6.0.jar</filename><filename>htrace-core-3.0.4.jar</filename><filename>protobuf-java-2.5.0.jar</filename><filename>slf4j-log4j12-1.7.5.jar</filename></para>
        </step>
<!-- The java home must be given at installation time for the installer. FIXME: installerbe is beleirni!  -->
    </procedure>

    <procedure xml:id="destination-hdfs-interaction">
        <title>How &abbrev; interacts with HDFS</title>
        <para>The &abbrev; application sends the log messages to the official HDFS client library, which forwards the data to the HDFS nodes. The way how &abbrev; interacts with HDFS is described in the following steps.</para>
        <step>
            <para>After &abbrev; is started and the first message arrives to the <parameter>hdfs</parameter> destination, the <parameter>hdfs</parameter> destination tries to connect to the HDFS NameNode. If the connection fails, &abbrev; will repeatedly attempt to connect again after the period set in <parameter>time-reopen()</parameter> expires.</para>
        </step>
        <step>
            <para>&abbrev; checks if the path to the logfile exists. If a directory does not exist &abbrev; automatically creates it. &abbrev; creates the destination file (using the filename set in the &abbrev; configuration file, with a UUID suffix to make it unique, for example, <filename>/usr/hadoop/logfile.txt.3dc1c59e-ab3b-4b71-9e81-93db477ed9d9</filename>) and writes the message into the file. After the file is created, &abbrev; will write all incoming messages into e <parameter>hdfs</parameter> destination.</para>
            <note>
                <xi:include href="../../common/chunk/para-hdfs-flush.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </note>
        </step>
        <step>
            <para>If the HDFS client returns an error, &abbrev; attempts to close the file, then opens a new file and repeats sending the message (trying to connect to HDFS and send the message), as set in the <parameter>retries()</parameter> parameter. If sending the message fails for <parameter>retries()</parameter> times, &abbrev; drops the message.</para>
        </step>
        <step>
            <para>The &abbrev; application closes the destination file in the following cases:</para>
            <itemizedlist>
                <listitem>
                    <para>&abbrev; is reloaded</para>
                </listitem>
                <listitem>
                    <para>&abbrev; is restarted</para>
                </listitem>
                <listitem>
                    <para>The HDFS client returns an error.</para>
                </listitem>
            </itemizedlist>
        </step>
        <step>
            <para>If the file is closed and you have set an archive directory, &abbrev; moves the file to this directory. If &abbrev; cannot move the file for some reason (for example, &abbrev; cannot connect to the HDFS NameNode), the file remains at its original location, &abbrev; will not try to move it again.</para>
        </step>
    </procedure>

    <section xml:id="reference-destination-hdfs">
        <title>hdsf destination options</title>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary><parameter>java()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary><parameter>hdfs</parameter></secondary>
        </indexterm>
        <para>The <parameter>hdfs</parameter> destination stores the log messages in files on the Hadoop Distributed File System (HDFS). The <parameter>hdfs</parameter> destination has the following options. Some of these options are directly used by the Java code underlying the <parameter>hdfs</parameter> destination, therefore these options must be specified in the following format:</para>
        <synopsis>option("&lt;option-name&gt;", "&lt;option-value&gt;")</synopsis>
        <para>For example, <userinput>option("hdfs-uri", "hdfs://10.140.32.80:8020")</userinput>. The exact format to use is indicated in the description of the option.</para>
        <para>The following options are required: <parameter>class-path()</parameter>, <parameter>class-name()</parameter>, <parameter>hdfs-file()</parameter>, <parameter>hdfs-uri()</parameter>. Note that to use <parameter>hdfs</parameter>, you must add the following line to the beginning of your &abbrev; configuration:</para>
        <synopsis>@module mod-java</synopsis>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-java-class-name.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>For the <parameter>hdfs</parameter> destination, use this option as <userinput>class-name("org.syslog_ng.hdfs.HdfsDestination")</userinput>.</para>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-java-class-path.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>For the <parameter>hdfs</parameter> destination, include the path to the directory where you copied the required libraries (see <xref linkend="destination-hdfs-prerequisites"/>), for example, <userinput>class-path("/opt/syslog-ng/lib/syslog-ng/java-modules/*.jar:/opt/hadoop/libs/*.jar")</userinput>.</para>
        </simplesect>
        <simplesect xml:id="hdfs-option-hdfs-archive-dir">
            <title>hdfs-archive-dir()</title>
            <indexterm type="parameter">
                <primary>hdfs-archive-dir()</primary>
                <secondary>hdfs</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>hdfs</primary>
                <secondary>hdfs-archive-dir</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>N/A</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The path where &abbrev; will move the closed log files. If &abbrev; cannot move the file for some reason (for example, &abbrev; cannot connect to the HDFS NameNode), the file remains at its original location. For example, <userinput>option("hdfs-archive-dir", "/usr/hdfs/archive/")</userinput>.</para>
        </simplesect>
        <simplesect xml:id="hdfs-option-hdfs-file">
            <title>hdfs-file()</title>
            <indexterm type="parameter">
                <primary>hdfs-file()</primary>
                <secondary>hdfs</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>hdfs</primary>
                <secondary>hdfs-file</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>N/A</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The path and name of the log file. For example, <userinput>option("hdfs-file", "/usr/hdfs/mylogfile.txt")</userinput>. &abbrev; checks if the path to the logfile exists. If a directory does not exist &abbrev; automatically creates it.</para>
            <xi:include href="../../common/chunk/para-hdfs-filename.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="hdfs-option-hdfs-max-filename-length">
            <title>hdfs-max-filename-length()</title>
            <indexterm type="parameter">
                <primary>hdfs-max-filename-length()</primary>
                <secondary>hdfs</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>hdfs</primary>
                <secondary>hdfs-max-filename-length</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>255</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The maximum length of the filename. This filename (including the UUID that &abbrev; appends to it) cannot be longer than what the file system permits. If the filename is longer than the value of <parameter>hdfs-max-filename-length</parameter>, &abbrev; will automatically truncate the filename. For example, <userinput>option("hdfs-max-filename-length", "255")</userinput>.</para>
        </simplesect>
        <simplesect xml:id="hdfs-option-hdfs-resources">
            <title>hdfs-resources()</title>
            <indexterm type="parameter">
                <primary>hdfs-resources()</primary>
                <secondary>hdfs</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>hdfs</primary>
                <secondary>hdfs-resources</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>N/A</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The list of Hadoop resources to load, separated by semicolons. For example, <userinput>option("hdfs-resources", "/home/user/hadoop/core-site.xml;/home/user/hadoop/hdfs-site.xml")</userinput>.</para>
        </simplesect>
        <simplesect xml:id="hdfs-option-hdfs-uri">
            <title>hdfs-uri()</title>
            <indexterm type="parameter">
                <primary>hdfs-uri()</primary>
                <secondary>hdfs</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>hdfs</primary>
                <secondary>hdfs-uri</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>N/A</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The URI of the HDFS NameNode in <userinput>hdfs://IPaddress:port</userinput> or <userinput>hdfs://hostname:port</userinput>format. The IP address of the node can be IPv4 or IPv6. For example, <userinput>option("hdfs-uri", "hdfs://10.140.32.80:8020")</userinput>. The IPv6 address must be enclosed in square brackets (<emphasis>[]</emphasis>) as specified by RFC 2732, for example, <userinput>option("hdfs-uri", "hdfs://[FEDC:BA98:7654:3210:FEDC:BA98:7654:3210]:8020")</userinput>. </para>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-retries.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-template.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-throttle.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
    </section>
</section>
