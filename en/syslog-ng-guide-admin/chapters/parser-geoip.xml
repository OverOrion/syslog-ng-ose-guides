<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="geoip-parser" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Looking up GeoIP data from IP addresses</title>
    <indexterm>
        <primary>geoip</primary>
    </indexterm>
    <indexterm>
        <primary>parsers</primary>
        <secondary>geoip</secondary>
    </indexterm>
    <para>The &abbrev; application can lookup IP addresses from an offline GeoIP database, and make the retrieved data available in name-value pairs. Depending on the database used, you can access country code, longitude, and latitude information.</para>
    <note>
        <para>To access longitude and latitude information, download the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz">GeoLiteCity</link> database, and unzip it (for example, to the <filename>/usr/share/GeoIP/GeoLiteCity.dat</filename> file). The default databases available on Linux and other platforms usually contain only the country codes.</para>
    </note>
    <para>You can refer to the separated parts of the message using the key of the value as a macro. For example, if the message contains <userinput>KEY1=value1,KEY2=value2</userinput>, you can refer to the values as <userinput>${KEY1}</userinput> and <userinput>${KEY2}</userinput>.</para>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>parser parser_name {
    geoip(
        &lt;macro-containing-the-IP-address-to-lookup&gt;
        prefix()
        database("&lt;path-to-database-file&gt;")
    );
};</synopsis>
    <example>
        <title>Using the GeoIP parser</title>
        <para>In the following example, &abbrev; retrieves the GeoIP data of the IP address contained in the ${HOST} field of the incoming message, and includes the data (prefixed with the <userinput>geoip.</userinput> string) in the output JSON message.</para>
        <synopsis>@version: 3.7
@module geoip

options {
    keep_hostname(yes);
};

source s_file {
    file("/tmp/input");
};

parser p_geoip { geoip( "${HOST}", prefix( "geoip." ) database( "/usr/share/GeoIP/GeoLiteCity.dat" ) ); };

destination d_file {
    file( "/tmp/output" template("$(format-json --scope core --key geoip*)\n") );
};


log {
    source(s_file);
    parser(p_geoip);
    destination(d_file);
};</synopsis>
        <para>For example, for the <userinput>&lt;38&gt;Jan 1 14:45:22 192.168.1.1 prg00000[1234]: test message</userinput> message the output will look like:</para>
        <synopsis>{"geoip":{"longitude":"47.460704","latitude":"19.049968","country_code":"HU"},"PROGRAM":"prg00000","PRIORITY":"info","PID":"1234","MESSAGE":"test message","HOST":"192.168.1.1","FACILITY":"auth","DATE":"Jan  1 14:45:22"}</synopsis>
        <para>If you are transferring your log messages into Elasticsearch, use the following rewrite rule to combine the longitude and latitude information into a single value (called <userinput>geoip.location</userinput>), and set the mapping in Elasticsearch accordingly. Do not forget to include the rewrite in your log path. For details on transferring your log messages to Elasticsearch, see <xref linkend="configuring-destinations-elasticsearch"/>.</para>
        <indexterm>
            <primary>geoip</primary>
            <secondary>elasticsearch</secondary>
        </indexterm>
        <indexterm>
            <primary>elasticsearch</primary>
            <secondary>transferring geoip data</secondary>
        </indexterm>
        <synopsis>rewrite r_geoip {
    set(
        "${geoip.latitude},${geoip.longitude}",
        value( "geoip.location" ),
        condition(not "${geoip.latitude}" == "")
    );
};</synopsis>
        <para>In your Elasticsearch configuration, set the appropriate mappings:</para>
        <synopsis>{
   "mappings" : {
      "_default_" : {
         "properties" : {
            "geoip" : {
               "properties" : {
                  "country_code" : {
                     "index" : "not_analyzed",
                     "type" : "string",
                     "doc_values" : true
                  },
                  "latitude" : {
                     "index" : "not_analyzed",
                     "type" : "string",
                     "doc_values" : true
                  },
                  "longitude" : {
                     "type" : "string",
                     "doc_values" : true,
                     "index" : "not_analyzed"
                  },
                  "location" : {
                     "type" : "geo_point"
                  }
               }
            }
         }
      }
   }
}</synopsis>
    </example>
    <section xml:id="geoip-parser-options">
        <title>Options of <userinput>geoip</userinput> parsers</title>
        <indexterm>
            <primary>geoip</primary>
        </indexterm>
        <indexterm>
            <primary>parsers</primary>
            <secondary>geoip</secondary>
        </indexterm>
        <para>The <parameter>geoip</parameter> parser has the following options.</para>
        <simplesect xml:id="geoip-parser-prefix">
            <xi:include href="../../common/chunk/option-parser-prefix.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>For example, to insert the <userinput>geoip.</userinput> prefix, use the <userinput>prefix(.geoip.)</userinput> option. To refer to a particular data when using a prefix, use the prefix in the name of the macro, for example, <command>${geoip.country_code}</command> .</para>
        </simplesect>
        <simplesect xml:id="geoip-parser-database">
            <title>database()</title>
            <indexterm>
                <primary>database()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
									<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>database()</entry>
                        </row>
                        <row>
                            <entry>Default:
									<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry><filename>/usr/share/GeoIP/GeoIP.dat</filename>
                            </entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The full path to the GeoIP database to use. Note that &abbrev; must have the required privileges to read this file.</para>
        </simplesect>
    </section>
</section>
