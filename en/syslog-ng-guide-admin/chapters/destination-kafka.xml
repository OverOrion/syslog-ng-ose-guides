<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="configuring-destinations-kafka" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Publishing messages to Apache Kafka</title>
    <indexterm>
        <primary>destination drivers</primary>
        <secondary><parameter>java()</parameter> driver</secondary>
    </indexterm>
    <indexterm>
        <primary>destination drivers</primary>
        <secondary><parameter>kafka</parameter></secondary>
    </indexterm>
    <para>Starting with version <phrase condition="pe">5.4</phrase><phrase condition="ose">3.7</phrase>, &abbrev; can directly publish log messages to the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://kafka.apache.org">Apache Kafka</link> message bus, where subscribers can access them.</para>
    <itemizedlist>
        <xi:include href="../../common/chunk/listitem-java-supported-platforms.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <listitem>
            <para>Since &abbrev; uses the official Java Kafka producer, the <parameter>kafka</parameter> destination has significant memory usage.</para>
        </listitem>
        <xi:include href="../../common/chunk/listitem-java-internal-messages.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    </itemizedlist>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>@module mod-java
@include "scl.conf"

kafka(
    client-lib-dir("/opt/syslog-ng/lib/syslog-ng/java-modules/:&lt;path-to-preinstalled-kafka-libraries&gt;")
    kafka-bootstrap-servers("1.2.3.4:9092,192.168.0.2:9092")
    topic("${HOST}")

);</synopsis>
    <example xml:id="example-destination-kafka">
        <title>Sending log data to Apache Kafka</title>
        <para>The following example defines a <parameter>kafka</parameter> destination, using only the required parameters.</para>
        <synopsis>@module mod-java
@include "scl.conf"

destination d_kafka {
  kafka(
    client-lib-dir("/opt/syslog-ng/lib/syslog-ng/java-modules/KafkaDestination.jar:/usr/share/kafka/lib/")
    kafka-bootstrap-servers("1.2.3.4:9092,192.168.0.2:9092")
    topic("${HOST}")
  );
};</synopsis>
    </example>
    <itemizedlist>
        <listitem>
            <para>To install the software required for the <parameter>kafka</parameter> destination, see <xref linkend="destination-kafka-prerequisites"/>.</para>
        </listitem>
        <listitem>
            <para>For details on how the <parameter>kafka</parameter> destination works, see <xref linkend="destination-kafka-interaction"/>.</para>
        </listitem>
        <listitem>
            <para>For the list of options, see <xref linkend="reference-destination-kafka"/>.</para>
        </listitem>
    </itemizedlist>
    <para condition="ose">The <parameter>kafka()</parameter> driver is actually a reusable configuration snippet configured to receive log messages using the Java language-binding of &abbrev;. For details on using or writing such configuration snippets, see <xref linkend="config-blocks"/>. You can find the source of the kafka configuration snippet on <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="https://github.com/balabit/syslog-ng/blob/master/scl/kafka/plugin.conf">GitHub</link>. For details on extending &abbrev; in Java, see the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="https://syslog-ng.gitbooks.io/getting-started/content/chapters/chapter_5/section_2.html">Getting started with syslog-ng development</link> guide.</para>

    <procedure xml:id="destination-kafka-prerequisites">
        <title>Prerequisites</title>
        <para>To publish messages from &abbrev; to Apache Kafka, complete the following steps.</para>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <xi:include href="../../common/chunk/para-java-requirements.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </step>
        <step>
            <para>Download the latest stable binary release of the Apache Kafka libraries (version 0.9 or newer) from <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://kafka.apache.org/downloads.html">http://kafka.apache.org/downloads.html</link>.</para>
        </step>
        <step>
            <para>Extract the Apache Kafka libraries into a single directory. If needed, collect the various <filename>.jar</filename> files into a single directory (for example, <filename>/opt/kafka/lib/</filename>) where &abbrev; can access them. You must specify this directory in the &abbrev; configuration file.</para>
        </step>
        <step>
            <para>Check if the following files in the Kafka libraries have the same version number: <filename>slf4j-api-&lt;version-number&gt;.jar</filename>, <filename>slf4j-log4j12-&lt;version-number&gt;.jar</filename>. If the version number of these files is different, complete the following steps:</para>
            <substeps>
                <step>
                    <para>Delete one of the files (for example, <filename>slf4j-log4j12-&lt;version-number&gt;.jar</filename>).</para>
                </step>
                <step>
                    <para>Download a version that matches the version number of the other file (for example, 1.7.6) from the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://www.slf4j.org/download.html">official SLF4J distribution</link>.</para>
                </step>
                <step>
                    <para>Copy the downloaded file into the directory of your Kafka library files (for example, <filename>/opt/kafka/lib/</filename>).</para>
                </step>
            </substeps>
        </step>
<!-- The java home must be given at installation time for the PE installer. FIXME: include it in the PE installer description!  -->
    </procedure>
    <section xml:id="destination-kafka-interaction">
        <title>How &abbrev; interacts with Apache Kafka</title>
        <para>When stopping the &abbrev; application, &abbrev; will not stop until all Java threads are finished, including the threads started by the Kafka Producer. There is no way (except for the <command>kill -9</command> command) to stop &abbrev; before the Kafka Producer stops. To change this behavior set the properties of the Kafka Producer in its properties file, and reference the file in the <parameter>properties-file</parameter> option.</para>
        <para>The &abbrev; <parameter>kafka</parameter> destination tries to reconnect to the brokers in a tight loop. This can look as spinning, because of a lot of similar debug messages. To decrease the amount of such messages, set a bigger timeout using the following properties:</para>
        <synopsis>retry.backoff.ms=1000
reconnect.backoff.ms=1000</synopsis>
        <para>For details on using property files, see <xref linkend="kafka-option-properties-file"/>. For details on the properties that you can set in the property file, see the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://kafka.apache.org/documentation.html#newproducerconfigs">Apache Kafka documentation</link>.</para>
    </section>
    <section xml:id="reference-destination-kafka">
        <title>Kafka destination options</title>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary><parameter>java()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary><parameter>kafka</parameter></secondary>
        </indexterm>
        <para>The <parameter>kafka</parameter> destination of &abbrev; can directly publish log messages to the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://kafka.apache.org">Apache Kafka</link> message bus, where subscribers can access them. The <parameter>kafka</parameter> destination has the following options.</para>
        <formalpara>
            <title>Required options:</title>
            <para/>
        </formalpara>
        <para>The following options are required: <parameter>kafka-bootstrap-servers()</parameter>, <parameter>topic()</parameter>. Note that to use <parameter>kafka</parameter>, you must add the following lines to the beginning of your &abbrev; configuration:</para>
        <synopsis>@module mod-java
@include "scl.conf"</synopsis>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-java-class-path.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            <para>For the <parameter>kafka</parameter> destination, include the path to the directory where you copied the required libraries (see <xref linkend="destination-kafka-prerequisites"/>), for example, <userinput>client-lib-dir("/opt/syslog-ng/lib/syslog-ng/java-modules/KafkaDestination.jar:/usr/share/kafka/lib/*.jar")</userinput>.</para>
        </simplesect>
        <simplesect xml:id="kafka-option-kafka-bootstrap-servers">
            <title>kafka-bootstrap-servers()</title>
            <indexterm type="parameter">
                <primary>kafka-bootstrap-servers()</primary>
                <secondary>kafka</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>kafka</primary>
                <secondary>kafka-bootstrap-servers()</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>kafka</primary>
                <secondary>server</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
								<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>list of hostnames</entry>
                        </row>
                        <row>
                            <entry>Default:
								<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry></entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> Specifies the hostname or IP address of the Kafka server. When specifying an IP address, IPv4 (for example, <userinput>192.168.0.1</userinput>) or IPv6 (for example, <userinput>[::1]</userinput>) can be used as well. Use a colon (<userinput>:</userinput>) after the address to specify the port number of the server. When specifying multiple addresses, use a comma to separate the addresses, for example, <userinput>kafka-bootstrap-servers("127.0.0.1:2525,remote-server-hostname:6464")</userinput></para>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-frac-digits.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-on-error.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="kafka-option-key">
            <title>key()</title>
            <indexterm type="parameter">
                <primary>key()</primary>
                <secondary>kafka</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>kafka</primary>
                <secondary>key</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>template</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>N/A</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The key of the partition under which the message is published. You can use templates to change the topic dynamically based on the source or the content of the message, for example, <userinput>key("${PROGRAM}")</userinput>.</para>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-log-fifo-size.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="kafka-option-properties-file">
            <title>properties-file()</title>
            <indexterm type="parameter">
                <primary>properties-file()</primary>
                <secondary>kafka</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>properties-file</primary>
                <secondary>resource</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>string (absolute path)</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>N/A</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The absolute path and filename of the Kafka properties file to load. For example, <userinput>properties-file("/opt/syslog-ng/etc/kafka_dest.properties")</userinput>. The &abbrev; application reads this file and passes the properties to the Kafka Producer. If a property is defined both in the &abbrev; configuration file (<filename>syslog-ng.conf</filename>) and in the properties file, then &abbrev; uses the definition from the &abbrev; configuration file.</para>
            <para>The &abbrev; <parameter>kafka</parameter> destination supports all properties of the official Kafka producer. For details, see the <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://kafka.apache.org/documentation.html#newproducerconfigs">Apache Kafka documentation</link>.</para>
            <para>The <parameter>kafka-bootstrap-servers</parameter> option is translated to the <userinput>bootstrap.servers</userinput> property.</para>
            <para>For example, the following properties file defines the acknowledgement method and compression:</para>
            <synopsis>acks=all
compression.type=snappy</synopsis>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-retries.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="kafka-option-sync-send">
            <title>sync-send()</title>
            <indexterm type="parameter">
                <primary>sync-send()</primary>
                <secondary>kafka</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>kafka</primary>
                <secondary>sync-send</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>true | false</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>false</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> When <parameter>sync-send</parameter> is set to <userinput>true</userinput>, &abbrev; sends the message reliably: it sends a message to the Kafka server, then waits for a reply. In case of failure, &abbrev; repeats sending the message, as set in the <parameter>retries()</parameter> parameter. If sending the message fails for <parameter>retries()</parameter> times, &abbrev; drops the message.</para>
            <para>This method ensures reliable message transfer, but is very slow.</para>
            <para>When <parameter>sync-send</parameter> is set to <userinput>false</userinput>, &abbrev; sends messages asynchronously, and receives the response asynchronously. In case of a problem, &abbrev; cannot resend the messages.</para>
            <para>This method is fast, but the transfer is not reliable. Several thousands of messages can be lost before &abbrev; recognizes the error.</para>
        </simplesect>
        <simplesect xml:id="kafka-option-template">
            <title>template()</title>
            <indexterm type="parameter">
                <primary>message-template()</primary>
                <secondary>kafka</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>kafka</primary>
                <secondary>template</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
								<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>template or template function</entry>
                        </row>
                        <row>
                            <entry>Default:
								<?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>$ISODATE $HOST $MSGHDR$MSG\n</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The message as published to Apache Kafka. You can use templates and template functions (for example, <parameter>format-json()</parameter>) to format the message, for example, <userinput>template("$(format-json --scope rfc5424 --exclude DATE --key ISODATE)")</userinput>.</para>
            <para>For details on formatting messages in JSON format, see <xref linkend="template-function-format-json"/>.</para>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-throttle.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect xml:id="kafka-option-kafka-topic">
            <title>topic()</title>
            <indexterm type="parameter">
                <primary>topic()</primary>
                <secondary>kafka</secondary>
            </indexterm>
            <indexterm type="parameter">
                <primary>kafka</primary>
                <secondary>topic</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>template</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?>
<?dbfo bgcolor="#D4D6EB" ?>
                            </entry>
                            <entry>N/A</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The Kafka topic under which the message is published. You can use templates to change the topic dynamically based on the source or the content of the message, for example, <userinput>topic("${HOST}")</userinput>.</para>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-timezone.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="../../common/chunk/option-destination-ts-format.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
    </section>
</section>
