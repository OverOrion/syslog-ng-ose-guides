<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../shared/syslog-ng-entities.ent">
 %entities;]>
<procedure xml:id="destination-hdfs-interaction" xmlns="http://docbook.org/ns/docbook">
    <title>How &abbrev; interacts with HDFS</title>
    <para>The &abbrev; application sends the log messages to the official HDFS client library, which forwards the data to the HDFS nodes. The way how &abbrev; interacts with HDFS is described in the following steps.</para>
    <step>
        <para>After &abbrev; is started and the first message arrives to the <parameter>hdfs</parameter> destination, the <parameter>hdfs</parameter> destination tries to connect to the HDFS NameNode. If the connection fails, &abbrev; will repeatedly attempt to connect again after the period set in <parameter>time-reopen()</parameter> expires.</para>
    </step>
    <step>
        <para>&abbrev; checks if the path to the logfile exists. If a directory does not exist &abbrev; automatically creates it. &abbrev; creates the destination file (using the filename set in the &abbrev; configuration file, with a UUID suffix to make it unique, for example, <filename>/usr/hadoop/logfile.txt.3dc1c59e-ab3b-4b71-9e81-93db477ed9d9</filename>) and writes the message into the file. After the file is created, &abbrev; will write all incoming messages into the <parameter>hdfs</parameter> destination.</para>
        <note>
            <para>When the <link linkend="option-hdfs-append-enabled"><parameter>hdfs-append-enabled()</parameter></link> option is set to <userinput>true</userinput>, &abbrev; will not assign a new UUID suffix to an existing file, because it is then possible to open a closed file and append data to that.</para>
        </note>
        <note>
            <xi:include href="../../shared/chunk/para-hdfs-flush.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </note>
    </step>
    <step>
        <para>If the HDFS client returns an error, &abbrev; attempts to close the file, then opens a new file and repeats sending the message (trying to connect to HDFS and send the message), as set in the <parameter>retries()</parameter> parameter. If sending the message fails for <parameter>retries()</parameter> times, &abbrev; drops the message.</para>
    </step>
    <step>
        <para>The &abbrev; application closes the destination file in the following cases:</para>
        <itemizedlist>
            <listitem>
                <para>&abbrev; is reloaded</para>
            </listitem>
            <listitem>
                <para>&abbrev; is restarted</para>
            </listitem>
            <listitem>
                <para>The HDFS client returns an error.</para>
            </listitem>
        </itemizedlist>
    </step>
    <step>
        <para>If the file is closed and you have set an archive directory, &abbrev; moves the file to this directory. If &abbrev; cannot move the file for some reason (for example, &abbrev; cannot connect to the HDFS NameNode), the file remains at its original location, &abbrev; will not try to move it again.</para>
    </step>
</procedure>
