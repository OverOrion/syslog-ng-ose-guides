<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="configuring-sources-network" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Collecting messages using the RFC3164 protocol (network() driver)</title>
    <para>The network() source driver can receive syslog messages conforming to RFC3164 from the network using the TCP, TLS, and UDP networking protocols.</para>
    <para condition="pe">You can use the <trademark>RLTP</trademark> protocol as well. For details about the <trademark>RLTP</trademark> protocol, see <xref linkend="chapter-rltp"/>.</para>
    <xi:include href="../../common/chunk/topic-network-driver-protocols.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <formalpara>
        <title>Declaration:</title>
        <para/>
    </formalpara>
    <synopsis>network([options]);</synopsis>
    <para>By default, the <parameter>network()</parameter> driver binds to <userinput>0.0.0.0</userinput>, meaning that it listens on every available IPV4 interface on the TCP/601 port. To limit accepted connections to only one interface, use the <parameter>localip()</parameter> parameter. To listen on IPv6 addresses, use the <userinput>ip-protocol(6)</userinput> option.</para>
    <example xml:id="example-source-network">
        <title>Using the network() driver</title>
        <para>Using only the default settings: listen on every available IPV4 interface on the TCP/601 port.</para>
        <synopsis>source s_network {
    network();
};</synopsis>
        <para>UDP source listening on <userinput>192.168.1.1</userinput> (the default port for UDP is 514):</para>
        <synopsis>source s_network {
    network(
        ip("192.168.1.1")
        transport("udp")
        );
};</synopsis>
        <para>TCP source listening on the IPv6 localhost, port 2222:</para>
        <synopsis>source s_network6 {
        network(
            ip("::1")
            transport("tcp")
            port(2222)
            ip-protocol(6)
        );
};</synopsis>
        <para>A TCP source listening on a TLS-encrypted channel.</para>
        <synopsis>source s_network {
    network(
        transport("tcp")
        port(2222)
        tls(peer-verify("required-trusted")
            key-file("/opt/syslog-ng/etc/syslog-ng/syslog-ng.key")
            cert-file("/opt/syslog-ng/etc/syslog-ng/syslog-ng.crt")
            );
    );
};</synopsis>
        <para>A TCP source listening for messages using the IETF-syslog message format. Note that for transferring IETF-syslog messages, generally you are recommended to use the <parameter>syslog()</parameter> driver on both the client and the server, as it uses both the IETF-syslog message format and the protocol. For details, see <xref linkend="configuring-sources-syslog"/>.</para>
        <synopsis>source s_tcp_syslog {
    network(
        ip("127.0.0.1")
        flags(syslog-protocol)
    );
};</synopsis>
    </example>
    <para>For details on the options of the <parameter>network()</parameter> source, see <xref linkend="reference-source-network"/>.</para>
    <section xml:id="reference-source-network">
        <title>network() source options</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>network()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>TLS</primary>
        </indexterm>
        <para>The <parameter>network()</parameter> driver has the following options.</para>
        <xi:include href="../../common/chunk/source-syslog-options.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    </section>
</section>
