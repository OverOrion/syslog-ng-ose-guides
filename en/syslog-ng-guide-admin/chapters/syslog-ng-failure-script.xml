<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE procedure
 [  <!ENTITY % entities SYSTEM "../../shared/syslog-ng-entities.ent">
 %entities;]>
<procedure xml:id="syslog-ng-failure-script" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Running a failure script</title>
    <indexterm>
        <primary>troubleshooting</primary>
        <secondary>syslog-ng</secondary>
    </indexterm>
    <indexterm>
        <primary>troubleshooting</primary>
        <secondary>failure script</secondary>
    </indexterm>
    <indexterm>
        <primary>failure script</primary>
    </indexterm>
    <formalpara>
        <title>Purpose:</title>
        <para/>
    </formalpara>
    <para>You can create a failure script that is executed when &abbrev; terminates abnormally, that is, when it exits with a non-zero exit code. For example, you can use this script to send an automatic e-mail notification.</para>
    <formalpara>
        <title>Prerequisites:</title>
        <para/>
    </formalpara>
    <para>The failure script must be the following file: <filename>/opt/syslog-ng/sbin/syslog-ng-failure</filename>, and must be executable.</para>
    <para>To create a sample failure script, complete the following steps.</para>
    <formalpara>
        <title>Steps:</title>
        <para/>
    </formalpara>
    <step>
        <para>Create a file named <filename>/opt/syslog-ng/sbin/syslog-ng-failure</filename> with the following content:</para>
        <synopsis>#!/usr/bin/env bash
cat &gt;&gt;/tmp/test.txt &lt;&lt;EOF
$(date)
Name............$1
Chroot dir......$2
Pid file dir....$3
Pid file........$4
Cwd.............$5
Caps............$6
Reason..........$7
Argbuf..........$8
Restarting......$9

EOF</synopsis>
    </step>
    <step>
        <para>Make the file executable: <command>chmod +x /opt/syslog-ng/sbin/syslog-ng-failure</command></para>
    </step>
    <step>
        <para>Run the following command in the <filename>/opt/syslog-ng/sbin</filename> directory: <command>./syslog-ng --process-mode=safe-background; sleep 0.5; ps aux | grep './syslog-ng' | grep -v grep | awk '{print $2}' | xargs kill -KILL; sleep 0.5; cat /tmp/test.txt</command></para>
        <para>The command starts &abbrev; in safe-background mode (which is needed to use the failure script) and then kills it. You should see that the relevant information is written into the <filename>/tmp/test.txt</filename> file, for example:</para>
        <synopsis>Thu May 18 12:08:58 UTC 2017
Name............syslog-ng
Chroot dir......NULL
Pid file dir....NULL
Pid file........NULL
Cwd.............NULL
Caps............NULL
Reason..........signalled
Argbuf..........9
Restarting......not-restarting</synopsis>
    </step>
    <step>
        <para>You should also see messages similar to the following in system syslog. The exact message depends on the signal (or the reason why &abbrev; stopped):</para>
        <synopsis>May 18 13:56:09 myhost supervise/syslog-ng[10820]: Daemon exited gracefully, not restarting; exitcode='0'
May 18 13:57:01 myhost supervise/syslog-ng[10996]: Daemon exited due to a deadlock/signal/failure, restarting; exitcode='131'
May 18 13:57:37 myhost supervise/syslog-ng[11480]: Daemon was killed, not restarting; exitcode='9'</synopsis>
        <para>The failure script should run on every non-zero exit event.</para>
    </step>
</procedure>
