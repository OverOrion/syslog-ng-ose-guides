<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="reference-macros" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Macros of &abbrev;</title>
    <indexterm>
        <primary>macros</primary>
        <secondary>reference</secondary>
    </indexterm>
    <para>The following macros are available in &abbrev;.</para>
    <simplesect xml:id="macro-ampm">
        <title>AMPM</title>
        <indexterm type="parameter">
            <primary>AMPM</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${AMPM}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> Typically used together with the <link linkend="macro-hour12"><parameter>${HOUR12}</parameter></link> macro, <parameter>${AMPM}</parameter> returns the period of the day: AM for hours before mid day and PM for hours after mid day. In reference to a 24-hour clock format, AM is between 00:00-12:00 and PM is between 12:00-24:00. 12AM is midnight. Available in <phrase condition="pe">&abbrev; 3.2</phrase><phrase condition="ose">&abbrev; 3.4</phrase> and later.</para>
    </simplesect>
    <simplesect>
        <title>BSDTAG</title>
        <indexterm type="parameter">
            <primary>BSDTAG</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${BSDTAG}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> Facility/priority information in the format used by the FreeBSD syslogd: a priority number followed by a letter that indicates the facility. The priority number can range from <parameter>0</parameter> to <parameter>7</parameter>. The facility letter can range from <parameter>A</parameter> to <parameter>Y</parameter>, where <parameter>A</parameter> corresponds to facility number zero (LOG_KERN), <parameter>B</parameter> corresponds to facility 1 (LOG_USER), and so on.</para>
    </simplesect>
    <simplesect xml:id="macro-custom">
        <title>Custom macros</title>
        <indexterm type="parameter">
            <primary>Custom macros</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> CSV parsers and pattern databases can also define macros from the content of the messages, for example, a pattern database rule can extract the username from a login message and create a macro that references the username. For details on using custom macros created with CSV parsers and pattern databases, see <xref linkend="chapter-parsers"/> and <xref linkend="patterndb-filters"/>, respectively.</para>
    </simplesect>
    <simplesect xml:id="macro-date">
        <title>DATE, R_DATE, S_DATE</title>
        <indexterm type="parameter">
            <primary>DATE, R_DATE, S_DATE</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${DATE}, ${R_DATE}, ${S_DATE}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> Date of the message using the BSD-syslog style timestamp format (month/day/hour/minute/second, each expressed in two digits). This is the original syslog time stamp without year information, for example: <parameter>Jun 13 15:58:00</parameter>.</para>
    </simplesect>
    <xi:include href="../../common/chunk/macro-day.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <simplesect xml:id="macro-facility">
        <title>FACILITY</title>
        <indexterm type="parameter">
            <primary>FACILITY</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${FACILITY}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The name of the facility (for example, <parameter>kern</parameter>) that sent the message.</para>
    </simplesect>
    <simplesect xml:id="macro-facility-num">
        <title>FACILITY_NUM</title>
        <indexterm type="parameter">
            <primary>FACILITY_NUM</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${FACILITY_NUM}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The numerical code of the facility (for example, <parameter>0</parameter>) that sent the message.</para>
    </simplesect>
    <xi:include href="../../common/chunk/macro-fulldate.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <simplesect>
        <title>FULLHOST</title>
        <indexterm type="parameter">
            <primary>FULLHOST</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${FULLHOST}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The full FQDN of the host name chain (without trimming chained hosts), including the domain name.</para>
    </simplesect>
    <simplesect>
        <title>FULLHOST_FROM</title>
        <indexterm type="parameter">
            <primary>FULLHOST_FROM</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${FULLHOST_FROM}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> FQDN of the host that sent the message to syslog-ng as resolved by syslog-ng using DNS. If the message traverses several hosts, this is the last host in the chain.</para>
        <para>The &abbrev; application uses the following procedure to determine the value of the <parameter>$FULLHOST_FROM</parameter> macro:</para>
        <orderedlist>
            <listitem>
                <para>The &abbrev; application takes the IP address of the host sending the message.</para>
            </listitem>
            <listitem>
                <para>If the <parameter>use_dns()</parameter> option is enabled, &abbrev; attempts to resolve the IP address to a hostname. If it succeeds, the returned hostname will be the value of the <parameter>$FULLHOST_FROM</parameter> macro. This value will be the FQDN of the host if the <parameter>use_fqdn()</parameter> option is enabled, but only the hostname if <parameter>use_fqdn()</parameter> is disabled.</para>
            </listitem>
            <listitem>
                <para>If the <parameter>use_dns()</parameter> option is disabled, or the address resolution fails, the <parameter>${FULLHOST_FROM}</parameter> macro will return the IP address of the sender host.</para>
            </listitem>
        </orderedlist>
    </simplesect>
    <xi:include href="../../common/chunk/macro-hour.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <simplesect xml:id="macro-hour12">
        <title>HOUR12, R_HOUR12, S_HOUR12</title>
        <indexterm type="parameter">
            <primary>HOUR12, R_HOUR12, S_HOUR12</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${HOUR12}, ${R_HOUR12}, ${S_HOUR12}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The hour of day the message was sent in 12-hour clock format. See also the <link linkend="macro-ampm"><parameter>${AMPM}</parameter></link> macro. 12AM is midnight. Available in <phrase condition="pe">&abbrev; 3.2</phrase><phrase condition="ose">&abbrev; 3.4</phrase> and later.</para>
    </simplesect>
    <simplesect xml:id="macro-host">
        <title>HOST</title>
        <indexterm type="parameter">
            <primary>HOST</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${HOST}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The name of the source host where the message originates from.</para>
        <itemizedlist>
            <listitem>
                <para>If the message traverses several hosts and the <link linkend="option-chain-hostnames">
                        <parameter>chain_hostnames()</parameter></link> option is on, the first host in the chain is used.</para>
            </listitem>
            <listitem>
                <para>If the <parameter>keep_hostname()</parameter> option is disabled (<parameter>keep_hostname(no)</parameter>), the value of the $HOST macro will be the DNS hostname of the host that sent the message to &abbrev; (that is, the DNS hostname of the last hop). In this case the $HOST and $HOST_FROM macros will have the same value.</para>
            </listitem>
            <listitem>
                <para>If the <parameter>keep_hostname()</parameter> option is enabled (<parameter>keep_hostname(yes)</parameter>), the value of the $HOST macro will be the hostname retrieved from the log message. That way the name of the original sender host can be used, even if there are log relays between the sender and the server.</para>
            </listitem>
        </itemizedlist>
    </simplesect>
    <simplesect xml:id="macro-host-from">
        <title>HOST_FROM</title>
        <indexterm type="parameter">
            <primary>HOST_FROM</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${HOST_FROM}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> Name of the host that sent the message to syslog-ng, as resolved by syslog-ng using DNS. If the message traverses several hosts, this is the last host in the chain.</para>
    </simplesect>
    <simplesect xml:id="macro-isodate">
        <title>ISODATE, R_ISODATE, S_ISODATE</title>
        <indexterm type="parameter">
            <primary>ISODATE, R_ISODATE, S_ISODATE</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${ISODATE}, ${R_ISODATE}, ${S_ISODATE}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> Date of the message in the ISO 8601 compatible standard timestamp format (yyyy-mm-ddThh:mm:ss+-ZONE), for example: <parameter>2006-06-13T15:58:00.123+01:00</parameter>. If possible, it is recommended to use <parameter>${ISODATE}</parameter> for timestamping. Note that syslog-ng can produce fractions of a second (for example milliseconds) in the timestamp by using the <parameter>frac_digits()</parameter> global or per-destination option.</para>
    </simplesect>
    <simplesect>
        <title>LEVEL_NUM</title>
        <indexterm type="parameter">
            <primary>LEVEL_NUM</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${LEVEL_NUM}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The priority (also called severity) of the message, represented as a numeric value, for example, <parameter>3</parameter>. For the textual representation of this value, use the <parameter>${LEVEL}</parameter> macro. See <xref linkend="macro-priority"/> for details.</para>
    </simplesect>
    <xi:include href="../../common/chunk/macro-min.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="../../common/chunk/macro-month.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <simplesect xml:id="macro-month-abbrev">
        <title>MONTH_ABBREV, R_MONTH_ABBREV, S_MONTH_ABBREV</title>
        <indexterm type="parameter">
            <primary>MONTH_ABBREV, R_MONTH_ABBREV, S_MONTH_ABBREV</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${MONTH_ABBREV}, ${R_MONTH_ABBREV}, ${S_MONTH_ABBREV}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The English abbreviation of the month name (3 letters).</para>
    </simplesect>
    <simplesect xml:id="macro-month-name">
        <title>MONTH_NAME, R_MONTH_NAME, S_MONTH_NAME</title>
        <indexterm type="parameter">
            <primary>MONTH_NAME, R_MONTH_NAME, S_MONTH_NAME</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${MONTH_NAME}, ${R_MONTH_NAME}, ${S_MONTH_NAME}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The English name of the month name.</para>
    </simplesect>
    <simplesect xml:id="macro-month-week">
        <title>MONTH_WEEK, R_MONTH_WEEK, S_MONTH_WEEK</title>
        <indexterm type="parameter">
            <primary>MONTH_WEEK, R_MONTH_WEEK, S_MONTH_WEEK</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${ONTH_WEEK}, ${R_MONTH_WEEK}, ${S_MONTH_WEEK}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The number of the week in the given month (0-5). The week with numerical value 1 is the first week containing a Monday. The days of month before the first Monday are considered week 0. For example, if a 31-day month begins on a Sunday, then the 1st of the month is week 0, and the end of the month (the 30th and 31st) is week 5.</para>
    </simplesect>
    <simplesect xml:id="macro-msec">
        <title>MSEC, R_MSEC, S_MSEC</title>
        <indexterm type="parameter">
            <primary>MSEC, R_MSEC, S_MSEC</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${MSEC}, ${R_MSEC}, ${S_MSEC}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The millisecond the message was sent.</para>
        <para>Available in &abbrev; version <phrase condition="pe">4 F2</phrase><phrase condition="ose">3.4</phrase> and later.</para>
    </simplesect>
    <simplesect xml:id="macro-msg">
        <title>MSG or MESSAGE</title>
        <indexterm type="parameter">
            <primary>MSG or MESSAGE</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${MSG} or ${MESSAGE}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> Text contents of the log message without the program name and pid. Note that this has changed in syslog-ng version 3.0; in earlier versions this macro included the program name and the pid. In syslog-ng 3.0, the <parameter>${MSG}</parameter> macro became equivalent with the <parameter>${MSGONLY}</parameter> macro. The program name and the pid together are available in the <parameter>${MSGHDR}</parameter> macro.</para>
    </simplesect>
    <simplesect>
        <title>MSGHDR</title>
        <indexterm type="parameter">
            <primary>MSGHDR</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${MSGHDR}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The name and the pid of the program that sent the log message in <parameter>PROGRAM[PID]:</parameter> format. Includes a trailing whitespace. Note that the macro returns an empty value if both the program and pid fields of the message are empty.</para>
    </simplesect>
    <simplesect xml:id="macro-msgid">
        <title>MSGID</title>
        <indexterm type="parameter">
            <primary>MSGID</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${MSGID}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> A string specifying the type of the message in IETF-syslog (RFC5424-formatted) messages. For example, a firewall might use the ${MSGID} "TCPIN" for incoming TCP traffic and the ${MSGID} "TCPOUT" for outgoing TCP traffic. By default, &abbrev; does not specify this value, but uses a dash (-) character instead. If an incoming message includes the ${MSGID} value, it is retained and relayed without modification.</para>
    </simplesect>
    <simplesect>
        <title>MSGONLY</title>
        <indexterm type="parameter">
            <primary>MSGONLY</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${MSGONLY}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> Message contents without the program name or pid.</para>
    </simplesect>
    <simplesect>
        <title>PID</title>
        <indexterm type="parameter">
            <primary>PID</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${PID}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The PID of the program sending the message.</para>
    </simplesect>
    <simplesect xml:id="macro-pri">
        <title>PRI</title>
        <indexterm type="parameter">
            <primary>PRI</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${PRI}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The priority and facility encoded as a 2 or 3 digit decimal number as it is present in syslog messages.</para>
    </simplesect>
    <simplesect xml:id="macro-priority">
        <title>PRIORITY or LEVEL</title>
        <indexterm type="parameter">
            <primary>PRIORITY</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>LEVEL</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${PRIORITY}</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${LEVEL}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The priority (also called severity) of the message, for example, <parameter>error</parameter>. For the textual representation of this value, use the <parameter>${LEVEL}</parameter> macro. See <xref linkend="macro-priority"/> for details.</para>
    </simplesect>
    <simplesect>
        <title>PROGRAM</title>
        <indexterm type="parameter">
            <primary>PROGRAM</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${PROGRAM}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The name of the program sending the message. Note that the content of the ${PROGRAM} variable may not be completely trusted as it is provided by the client program that constructed the message.</para>
    </simplesect>
    <simplesect xml:id="macro-rcptid">
        <title>RCPTID</title>
        <indexterm type="parameter">
            <primary>RCPTID</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${RCPTID}</primary>
        </indexterm>
        <para><guimenu>Description:</guimenu> This is disabled by default due to performance issues. To enable it, add the next option to the global options: <parameter>use_rcptid(yes);</parameter>. For details, see also <xref linkend="global-use-rcptid"/>. A unique ID for messages generated at reception time on the receiving host. It facilitates defining relationships between messages that are potentially distributed to different files on the same host, or different hosts.</para>
        <example>
            <title>Using ${RCPTID} macro</title>
            <para>Using the following template statement in the configuration: <parameter>template demo_template { template("${DATE} ${HOST} ${PROG}: ${MSG} ID:${RCPTID}\n"); };</parameter> the outgoing message will be the following: <parameter>&lt;133&gt;Feb 25 14:09:07 webserver syslogd: restart. ID:1</parameter>.</para>
        </example>
    </simplesect>

    <simplesect xml:id="macro-sdata">
        <title>SDATA, .SDATA.SDID.SDNAME</title>
        <indexterm type="parameter">
            <primary>.SDATA.SDID.SDNAME</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>SDATA</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${.SDATA.SDID.SDNAME}</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${SDATA}</primary>
        </indexterm>
        <indexterm>
            <primary>STRUCTURED-DATA</primary>
        </indexterm>
        <indexterm>
            <primary>macros</primary>
            <secondary>SDATA</secondary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The syslog-ng application automatically parses the STRUCTURED-DATA part of IETF-syslog messages, which can be referenced in macros. The <parameter>${SDATA}</parameter> macro references the entire STRUCTURED-DATA part of the message, while structured data elements can be referenced using the <parameter>${.SDATA.SDID.SDNAME}</parameter> macro.<phrase condition="pe">Available only in &product; 4.0 and later.</phrase></para>
        <note>
            <para>When using STRUCTURED-DATA macros, consider the following:</para>
            <itemizedlist>
                <listitem>
                    <para>When referencing an element of the structured data, the macro must begin with the dot (.) character. For example, <parameter>${.SDATA.timeQuality.isSynced}</parameter>.</para>
                </listitem>
                <listitem>
                    <para>The SDID and SDNAME parts of the macro names are case sensitive: <parameter>${.SDATA.timeQuality.isSynced}</parameter> is not the same as <parameter>${.SDATA.TIMEQUALITY.ISSYNCED}</parameter>.</para>
                </listitem>
            </itemizedlist>
        </note>
        <example>
            <title>Using SDATA macros</title>
            <para>For example, if a log message contains the following structured data: <parameter>[exampleSDID@0 iut="3" eventSource="Application" eventID="1011"][examplePriority@0 class="high"]</parameter> you can use macros like: <parameter>${.SDATA.exampleSDID@0.eventSource}</parameter> &mdash; this would return the <parameter>Application</parameter> string in this case.</para>
        </example>
    </simplesect>
    <xi:include href="../../common/chunk/macro-sec.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <simplesect xml:id="macro-seqnum">
        <title>SEQNUM</title>
        <indexterm type="parameter">
            <primary>SEQNUM</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${SEQNUM}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The sequence number of the message is a unique identifier of the message between the end-points. The syslog-ng client calculates this number when processing a new message from a local source; it is not calculated for relayed messages. The sequence number increases for every message, and is not lost even if syslog-ng is reloaded. The sequence number starts again from 0 when &abbrev; is restarted. The sequence number is a part of every message that uses the new IETF-syslog protocol (<parameter>${.SDATA.meta.sequenceId}</parameter>), and can be added to BSD-syslog messages using this macro.</para>
        <indexterm>
            <primary>sequence ID</primary>
        </indexterm>
        <para condition="pe">If &abbrev; receives a message via the IETF-syslog protocol that includes a sequence ID, this ID is automatically available in the <parameter>${SEQNUM}</parameter> macro.</para>
        <indexterm>
            <primary>Cisco timestamp</primary>
        </indexterm>
        <indexterm>
            <primary>Cisco sequence number</primary>
        </indexterm>
        <indexterm>
            <primary>sequence number</primary>
        </indexterm>
        <indexterm>
            <primary>sequence number</primary>
            <secondary>Cisco</secondary>
        </indexterm>
        <indexterm>
            <primary>message</primary>
            <secondary>ID</secondary>
        </indexterm>
        <indexterm>
            <primary>extended timestamp format</primary>
        </indexterm>
        <para>&abbrev; versions <phrase condition="pe">3.2</phrase><phrase condition="ose">3.4</phrase> and later versions store the sequence number from Cisco IOS log messages using the extended timestamp format in this macro. If this message is then forwarded using the IETF-syslog protocol, &abbrev; includes the sequence number received from the Cisco device in the <parameter>${.SDATA.meta.sequenceId}</parameter> part of the message.</para>
        <note>
            <para>To enable sequence numbering of log messages on Cisco devices, use the following command on the device (available in IOS 10.0 and later): <command>service sequence-numbers</command>.</para>
            <para>For details, see <link xmlns:ns1="http://www.w3.org/1999/xlink" ns1:href="http://www.cisco.com/en/US/docs/ios/12_3/configfun/command/reference/cfr_1g07.html#wp1029551">Cisco IOS Configuration Fundamentals and Network Management Command Reference</link>.</para>
        </note>
    </simplesect>
    <simplesect>
        <title>SOURCEIP</title>
        <indexterm type="parameter">
            <primary>SOURCEIP</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${SOURCEIP}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> IP address of the host that sent the message to syslog-ng. (That is, the IP address of the host in the <parameter>${FULLHOST_FROM}</parameter> macro.) Please note that when a message traverses several relays, this macro contains the IP of the last relay.</para>
    </simplesect>
    <simplesect xml:id="macro-stamp">
        <title>STAMP, R_STAMP, S_STAMP</title>
        <indexterm type="parameter">
            <primary>STAMP, R_STAMP, S_STAMP</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${STAMP}, ${R_STAMP}, ${S_STAMP}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> A timestamp formatted according to the <link linkend="reference-options"><parameter>ts_format()</parameter></link> global or per-destination option.</para>
    </simplesect>
    <simplesect xml:id="macro-sysuptime">
        <title>SYSUPTIME</title>
        <indexterm type="parameter">
            <primary>SYSUPTIME</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${SYSUPTIME}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The time elapsed since the computer running &abbrev; has booted. If this data is not available, the macro contains the time elapsed since &abbrev; was started. The value of this macro is an integer containing the time in 1/100th of the second.</para>
        <para>Available in &abbrev; version <phrase condition="pe">4 F1</phrase><phrase condition="ose">3.4</phrase> and later.</para>
    </simplesect>
    <simplesect xml:id="macro-tag">
        <title>TAG</title>
        <indexterm type="parameter">
            <primary>TAG</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${TAG}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The priority and facility encoded as a 2 digit hexadecimal number.</para>
    </simplesect>
    <simplesect xml:id="macro-tags">
        <title>TAGS</title>
        <indexterm type="parameter">
            <primary>TAGS</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${TAGS}</primary>
        </indexterm>
        <indexterm>
            <primary>macros</primary>
            <secondary>patterndb tags</secondary>
        </indexterm>
        <indexterm>
            <primary>tags</primary>
            <secondary>as macro</secondary>
        </indexterm>
        <para><guilabel>Description:</guilabel> A comma-separated list of the tags assigned to the message.<phrase condition="pe"> Available only in &product; 3.2 and later.</phrase></para>
        <note>
            <para>Note that the tags are not part of the log message and are not automatically transferred from a client to the server. For example, if a client uses a pattern database to tag the messages, the tags are not transferred to the server. A way of transferring the tags is to explicitly add them to the log messages using a template and the <parameter>${TAGS}</parameter> macro, or to add them to the structured metadata part of messages when using the IETF-syslog message format.</para>
            <para>When sent as structured metadata, it is possible to reference to the list of tags on the central server, and for example, to add them to a database column.</para>
        </note>
    </simplesect>
    <simplesect xml:id="macro-tz">
        <title>TZ, R_TZ, S_TZ</title>
        <indexterm type="parameter">
            <primary>TZ, R_TZ, S_TZ</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${TZ}, ${R_TZ}, ${S_TZ}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> Equivalent to ${TZOFFSET}, used to mean the time zone name abbreviation in syslog-ng 1.6.x.</para>
    </simplesect>
    <xi:include href="../../common/chunk/macro-tzoffset.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="../../common/chunk/macro-unixtime.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <simplesect xml:id="macro-usec">
        <title>USEC, R_USEC, S_USEC</title>
        <indexterm type="parameter">
            <primary>USEC, R_USEC, S_USEC</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${USEC}, ${R_USEC}, ${S_USEC}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The microsecond the message was sent.</para>
        <para>Available in &abbrev; version <phrase condition="pe">4 F2</phrase><phrase condition="ose">3.4</phrase> and later.</para>
    </simplesect>
    <xi:include href="../../common/chunk/macro-year.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <xi:include href="../../common/chunk/macro-week.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <simplesect xml:id="macro-week-abbrev">
        <title>WEEK_ABBREV, R_WEEK_ABBREV, S_WEEK_ABBREV</title>
        <indexterm type="parameter">
            <primary>WEEK_ABBREV, R_WEEK_ABBREV, S_WEEK_ABBREV</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${WEEK_ABBREV}, ${R_WEEK_ABBREV}, ${S_WEEK_ABBREV}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The 3-letter English abbreviation of the name of the day the message was sent, for example <parameter>Thu</parameter>.</para>
    </simplesect>
    <simplesect xml:id="macro-week-day">
        <title>WEEK_DAY, R_WEEK_DAY, S_WEEK_DAY</title>
        <indexterm type="parameter">
            <primary>WEEK_DAY, R_WEEK_DAY, S_WEEK_DAY</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${WEEK_DAY}, ${R_WEEK_DAY}, ${S_WEEK_DAY}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The day of the week as a numerical value (1-7).</para>
    </simplesect>
    <simplesect xml:id="macro-weekday">
        <title>WEEKDAY, R_WEEKDAY, S_WEEKDAY</title>
        <indexterm type="parameter">
            <primary>WEEKDAY, R_WEEKDAY, S_WEEKDAY</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${WEEKDAY}, ${R_WEEKDAY}, ${S_WEEKDAY}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> These macros are deprecated, use <link linkend="macro-week-abbrev">${WEEK_ABBREV}, ${R_WEEK_ABBREV}, ${S_WEEK_ABBREV}</link> instead. The 3-letter name of the day of week the message was sent, for example <parameter>Thu</parameter>.</para>
    </simplesect>
    <simplesect xml:id="macro-week-day_name">
        <title>WEEK_DAY_NAME, R_WEEK_DAY_NAME, S_WEEK_DAY_NAME</title>
        <indexterm type="parameter">
            <primary>WEEK_DAY_NAME, R_WEEK_DAY_NAME, S_WEEK_DAY_NAME</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>${WEEK_DAY_NAME}, ${R_WEEK_DAY_NAME}, ${S_WEEK_DAY_NAME}</primary>
        </indexterm>
        <para><guilabel>Description:</guilabel> The English name of the day.</para>
    </simplesect>
</section>
