<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
    <section xml:id="configuring-sources-eventlog" condition="pe" xmlns="http://docbook.org/ns/docbook" version="5.0">
        <title>Collecting messages from Windows eventlog sources</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary><parameter>eventlog()</parameter> driver</secondary>
        </indexterm>
        <indexterm>
            <primary>eventlog sources</primary>
        </indexterm>
        <indexterm>
            <primary>sources</primary>
            <secondary>eventlog</secondary>
        </indexterm>
        <para>The &abbrev; application can collect messages from the standard Windows eventlog containers, as well as from custom containers. The &abbrev; application forwards the messages from three standard eventlog containers (<parameter>Application, Security, System</parameter>). To enable or disable these sources, or to add custom eventlog containers, complete the following steps:</para>
        <warning>
            <para>If an eventlog container becomes corrupt, &abbrev; will stop processing the event source. A log message (<parameter>Eventlog file is corrupt</parameter>) is sent directly to the log server to notify about the error.</para>
        </warning>
        <warning>
            <para>Hazard of data loss! It is not recommended to setup archiving for the event container. It is possible to lose logs if there are non-processed events in the event container when the archiving is started. Windows closes and renames the event container and starts a new one regardless of any reading applications.</para>
            <para>To prevent this, enable <guimenu>overwrite events when needed</guimenu> mode in the Windows Event Viewer with the following conditions:</para>
            <itemizedlist>
                <listitem>
                    <para>The messages are not generated faster than the &abbrev;'s processing speed.</para>
                </listitem>
                <listitem>
                    <para>There is enough window between the first and the last events for planned &abbrev; stops. Ensure that new events will not overwrite the event last read by &abbrev; during &abbrev; stop.</para>
                </listitem>
            </itemizedlist>
        </warning>
        <example xml:id="example-source-eventlog">
            <title>Using the eventlog() driver</title>
            <synopsis>source s_AGENT_EVENT{
    eventlog(channel(Application)
        prefix(".SDATA.win@18372.4")
        read_old_records(no)
    );
    eventlog(channel(A*lic?tion)
        prefix(".SDATA.win@18372.4")
    );
    eventlog(channel(*)
    prefix(".SDATA.win@18372.4")
    );
};</synopsis>
        </example>
        <section xml:id="reference-source-eventlog">
            <title>eventlog() source options</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>eventlog()</parameter> driver</secondary>
            </indexterm>
            <para>The following options can be specified for the eventlog() driver:</para>
            <simplesect>
                <xi:include href="../../common/chunk/option-source-default-facility.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <para><guimenu>Description:</guimenu> This parameter assigns a facility value to the messages received from the eventlog source, if the message does not specify one.</para>
            </simplesect>
            <simplesect>
                <title>default-level()</title>
                <indexterm type="parameter">
                    <primary>default-level()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>priority string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><guimenu>Description:</guimenu> The alias of the <parameter>default-priority()</parameter> parameter.</para>
            </simplesect>
            <simplesect>
                <title>eventlog_api()</title>
                <indexterm type="parameter">
                    <primary>eventlog_api()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>EVT_API or EVTX_API</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Under Windows Vista: EVT_API, Windows Vista and above: EVTX_API</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><guimenu>Description:</guimenu> To read the messages from eventlog containers, the &abbrev; application uses the nativeWindows API tools. The Windows Vista and newer platforms use an XML-based eventlog format. The API (calledEVTX) that reads the XML-messages from the eventlog container and passes them to &abbrev; is inherently slow, severely limiting the performance of &abbrev;. The API tools that &abbrev; uses on the Microsoft Windows XP and 2003 Server platforms is available on the newer platforms as well, and can increase the speed of reading from eventlog containers, up to 500%. However, using this old API (called EVT) has limitations when used with XML-based eventlog containers.</para>
            </simplesect>
            <simplesect>
                <title>eventlog_channel()</title>
                <indexterm type="parameter">
                    <primary>eventlog_channel()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><guimenu>Description:</guimenu> Set the windows containers, separated with a space. The container name may include wildcard characters (for example <parameter>*</parameter>).</para>
            </simplesect>
            <simplesect>
                <title>eventlog_prefix()</title>
                <indexterm type="parameter">
                    <primary>eventlog_prefix()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                        <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                <para><guimenu>Description:</guimenu></para>
                <note>
                    <para>The names of SDATA fields must be in the following format: name@&lt;private enterprise number&gt;, for example, <parameter>mySDATA-field@18372.4</parameter>. (18372.4 is the private enterprise number of BalaBit IT Security, the developer of &abbrev;.)</para>
                    <itemizedlist>
                        <listitem>
                            <para>Messages received from eventlog sources include the <parameter>win@18372.4</parameter> SD-ID. For example, on your &abbrev; server you can refer to message fields like: <parameter>${.SDATA.win@18372.4.EVENT_SOURCE}</parameter></para>
                        </listitem>
                        <listitem>
                            <para>Messages received from eventlog sources include the <parameter>file@18372.4</parameter> SD-ID. For example, on your &abbrev; server you can refer to message fields like: <parameter>${.SDATA.file@18372.4.name}</parameter></para>
                        </listitem>
                    </itemizedlist>
                </note>
            </simplesect>
        </section>
        
        <xi:include href="../../common/syslog-ng-troubleshoot-eventlog.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    </section>
