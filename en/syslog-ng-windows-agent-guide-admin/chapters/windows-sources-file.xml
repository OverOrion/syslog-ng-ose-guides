<!DOCTYPE chapter
[
<!ENTITY % entities SYSTEM "../../shared/syslog-ng-entities.ent">
  %entities;]>
<procedure xml:id="windows-sources-file" xmlns="http://docbook.org/ns/docbook">
    <title>Managing file sources</title>
    <indexterm>
        <primary>&agentabbrev;</primary>
        <secondary>file sources</secondary>
    </indexterm>
    <indexterm>
        <primary>sources</primary>
        <secondary>windows log files</secondary>
    </indexterm>
    <formalpara>
        <title>Purpose:</title>
        <para/>
    </formalpara>
    <para>The &agent; application can collect log messages from text files. It can process messages spanning multiple lines, and supports the use of wildcards (<parameter>*</parameter>, <parameter>?</parameter>) in filenames to be able to follow log files that are automatically rotated. Note that every line of the file that ends with a newline character is considered a separate message. However, if a file contains only a single line that does not end with a newline character, &agentabbrev; will not process the line.</para>
    <para>To configure file sources, complete the following steps:</para>
    <xi:include href="../../shared/wnt/warning-windows-network-shares.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
    <warning>
        <para>If an application deletes a log file, the application must ensure that &agentabbrev; had enough time to forward the messages from the file to the central server to avoid losing messages.</para>
    </warning>
    <example>
        <title xml:id="example-collecting-multiple">Collecting the logs of multiple applications from a single folder</title>
        <para>If two applications log into the same folder (for example <filename>C:\logs</filename>), you have to create two file sources. For example, if the name of the log files is <parameter>application1-*.log</parameter> and <parameter>application2-*.log</parameter>, respectively, then create two file sources with the <filename>C:\logs</filename> Base Directory, but with different File Name Filter: <parameter>application1-*.log</parameter> and <parameter>application2-*.log</parameter>, respectively.</para>
        <para>If other applications log into the <filename>C:\logs</filename> folder, add a separate expression for each application.</para>
        <para>By default, the &agentabbrev; will send every message to the server that arrives into any of the monitored log files.</para>
    </example>
    <figure>
        <title>Managing file sources</title>
        <mediaobject>
            <imageobject role="html">
                <imagedata format="PNG" fileref="win-file-source-property.png"/>
            </imageobject>
            <imageobject role="fo">
                <imagedata format="PNG" fileref="&imgroot;/win-file-source-property.png" contentwidth="10cm"/>
            </imageobject>
        </mediaobject>
    </figure>
    <figure>
        <title>Sources properties</title>
        <mediaobject>
            <imageobject role="html">
                <imagedata format="PNG" fileref="win-sources-properties.png"/>
            </imageobject>
            <imageobject role="fo">
                <imagedata format="PNG" fileref="&imgroot;/win-sources-properties.png" contentwidth="10cm"/>
            </imageobject>
        </mediaobject>
    </figure>
    <formalpara>
        <title>Steps:</title>
        <para/>
    </formalpara>
    <step>
        <para>Start the configuration interface of the &agent; application.</para>
    </step>
    <step>
        <para>Select <guimenu>syslog-ng Agent Settings > File Sources</guimenu>, double-click on <guimenu>Sources</guimenu>, and check the <guimenu>Enable</guimenu> option.</para>
    </step>
    <step>
        <para>Select <guimenu>Add > Browse</guimenu>, and select the folder containing the log files in the <guimenu>Base Directory</guimenu> field. Select or enter the name and extension of the log files in the <guimenu>File Name Filter</guimenu> field. Wildcards can be used. The &agentabbrev; will forward log messages from every file that is located in this folder and has a name that matches the filter expression.</para>
        <xi:include href="../../shared/wnt/warning-windows-network-shares.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        <tip>
            <para>When specifying the Base Directory, you can use the environment variables of Windows, for example <parameter>%WINDIR%</parameter>, <parameter>%SYSTEMROOT%</parameter>, <parameter>%PROGRAMFILES%</parameter>, and so on.</para>
        </tip>
        <warning>
            <para>Note that when managing members of a domain, the selected path must be available on the domain members, for example <filename>C:\logs</filename> must be available on the client hosts and not on the domain controller.</para>
        </warning>
    </step>
    <step>
        <itemizedlist>
            <listitem>
                <para>To send messages from the files located in the subfolders of the folder set as Base Directory, select the <guimenu>Recursive</guimenu> option.</para>
            </listitem>
            <listitem>
                <para>To change the log facility or the log severity associated to the file source, select the desired facility or priority from the <guimenu>Log Facility</guimenu> or <guimenu>Log Severity</guimenu> fields, respectively.</para>
                <note>
                    <para>Significant changes to the settings of a file source can cause the &agentabbrev; to resend the entire contents of the matching files. This means that log messages already sent earlier to the syslog-ng server may be resent and thus duplicated in the server logs. Configuration changes that can result in such behavior are:</para>
                    <itemizedlist>
                        <listitem>
                            <para>changing the Base Directory,</para>
                        </listitem>
                        <listitem>
                            <para>changing filter options,</para>
                        </listitem>
                        <listitem>
                            <para>changing the Recursive option.</para>
                        </listitem>
                    </itemizedlist>
                </note>
            </listitem>
        </itemizedlist>
    </step>
    <step>
        <para>(Optional): By default, the &agentabbrev; application starts sending messages from the beginning of the file. If you only want to send the messages that are newly added to the file, deselect the <guimenu>Read Old Records</guimenu> option.</para>
        <note>
            <para>Be careful when <guimenu>Read Old Records</guimenu> is disabled. If a new file(s) is created while &agentabbrev; is stopped, the content of this file will not be forwarded, only the new records. To avoid message loss, never disable <guimenu>Read Old Records</guimenu> in the configuration.</para>
        </note>
    </step>
    <step xml:id="windows-sources-file-encoding">
        <indexterm>
            <primary>file sources</primary>
            <secondary>encoding</secondary>
        </indexterm>
        <indexterm>
            <primary>file encoding</primary>
        </indexterm>
        <para>By default, the &agentabbrev; application assumes that the source files are encoded using the default windows ANSI code page, specific to the locale of the host. If the files have a different encoding, select it from the <guimenu>File Encoding</guimenu> field. Note that the log messages are sent to the destinations using UTF-8 encoding.</para>
    </step>
    <step xml:id="windows-sources-file-multi-line" xreflabel="Processing multi-line messages">
        <indexterm>
            <primary>processing multi-line messages</primary>
        </indexterm>
        <indexterm>
            <primary>multi-line messages</primary>
        </indexterm>
        <indexterm>
            <primary>multiline messages</primary>
        </indexterm>
        <para>If a log messages in the log file consists of multiple lines, that is, the log messages contain newline characters, configure &agentabbrev; to process the related lines as a single message.</para>
        <indexterm>
            <primary>Tomcat log messages</primary>
        </indexterm>
        <indexterm>
            <primary>Catalina log messages</primary>
        </indexterm>
        <indexterm>
            <primary>Apache Tomcat Catalina log messages</primary>
        </indexterm>
        <indexterm>
            <primary>Oracle SQL log messages</primary>
        </indexterm>
        <para>The &agentabbrev; application can automatically handle Apache Tomcat Catalina and Oracle SQL log messages. To process such messages, select the name of the application from the <guimenu>Multiple Lines > Application</guimenu> field. Note that the timestamp of Tomcat log messages depends on the locale of the host. The &agent; application automatically removes the last CRLF control character from multi-line messages.</para>
        <para>To process multi-line log messages of a different application, complete the following steps.</para>
        <substeps>
            <step>
                <para>Select <guimenu>Multiple Lines > Application > Custom</guimenu>, and set the <guimenu>Multiple Lines > Prefix</guimenu> and optionally the <guimenu>Multiple Lines > Garbage</guimenu> fields.</para>
            </step>
            <step>
                <indexterm>
                    <primary>multi-line-prefix()</primary>
                </indexterm>
                <indexterm>
                    <primary>multi_line_prefix()</primary>
                </indexterm>
                <para>Specify a string or regular expression that matches the beginning of the log messages in the <guimenu>Multiple Lines > Prefix</guimenu> field. If the <guimenu>Prefix</guimenu> option is set, the &agentabbrev; ignores newline characters from the source until a line matches the regular expression again, and treats the lines between the matching lines as a single message.</para>
                <note>
                    <para>Use as simple regular expressions as possible, because complex regular expressions can severely reduce the rate of processing multi-line messages.</para>
                </note>
            </step>
            <step>
                <para>Use the <guimenu>Multiple Lines > Garbage</guimenu> option when processing multi-line messages that contain unneeded parts between the messages. Specify a string or regular expression that matches the beginning of the unneeded message parts. If the <guimenu>Garbage</guimenu> option is set, the &agentabbrev; ignores lines between the line matching the <guimenu>Garbage</guimenu> expression and the next line matching <guimenu>Prefix</guimenu>.</para>
                <para>When receiving multi-line messages from a source when the <guimenu>Garbage</guimenu> option is set but no matching line is received between two lines that match <guimenu>Prefix</guimenu>, the &agentabbrev; application will continue to process the incoming lines as a single message until a line matching <guimenu>Garbage</guimenu> is received.</para>
                <warning>
                    <para>If the <guimenu>Garbage</guimenu> option is set, the &agentabbrev; application discards lines between the line matching the <guimenu>Garbage</guimenu> and the next line matching <guimenu>Prefix</guimenu> expressions.</para>
                </warning>
            </step>
            <step>
                <para>(Optional): After creating and testing a custom pattern, please consider sending your pattern to &vendor; so we can include it in a future version of &agentabbrev;. To share your pattern with &vendor; and other &agentabbrev; users, click <guimenu>Multiple Lines > Send custom pattern to BalaBit</guimenu>. Your e-mail application will open, with an e-mail containing the application name and the pattern.</para>
            </step>
        </substeps>
    </step>
    <step>
        <para>Select <guimenu>Apply</guimenu>, then <guimenu>OK</guimenu>. To activate the changes, restart the &agentabbrev; service.</para>
    </step>
</procedure>
