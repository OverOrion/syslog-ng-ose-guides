<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
[
<!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
  %entities;]>
<section xml:id="windows-sources-eventlog" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Eventlog sources</title>
    <indexterm>
        <primary>eventlog sources</primary>
    </indexterm>
    <indexterm>
        <primary>&agentabbrev;</primary>
        <secondary>eventlog sources</secondary>
    </indexterm>
    <indexterm>
        <primary>sources</primary>
        <secondary>eventlog</secondary>
    </indexterm>
    <para>The &agent; application can collect messages from the standard Windows eventlog containers, as well as from custom containers. The agent automatically forwards the messages from three standard eventlog containers (<parameter>Application, Security, System</parameter>). To enable or disable these sources, or to add custom eventlog containers, complete the following steps:</para>
    <note>
        <para>The &agent; sends its own log messages into the <parameter>Application</parameter> eventlog container.</para>
        <para>The agent stores the ID of the last message sent to the destination server, so if the agent is not operating for a time (for example it is restarted ), then it starts reading messages from the last stored message ID, sending out all the new messages.</para>
    </note>
    <warning>
        <para>If an eventlog container becomes corrupt, the agent will stop processing the event source. A log message (<parameter>Eventlog file is corrupt</parameter>) is sent directly to the log server to notify about the error.</para>
    </warning>
    <warning>
        <para>Hazard of data loss! It is not recommended to setup archiving for the event container. It is possible to lose logs if there are non-processed events in the event container when the archiving is started. Windows closes and renames the event container and starts a new one regardless of any reading applications.</para>
        <para>To prevent this, enable <guimenu>overwrite events when needed</guimenu> mode in the Windows Event Viewer with the following conditions:</para>
        <itemizedlist>
            <listitem>
                <para>The messages are not generated faster than the agent's processing speed.</para>
            </listitem>
            <listitem>
                <para>There is enough window between the first and the last events for planned agent stops. Ensure that new events will not overwrite the event last read by the agent during agent stop.</para>
            </listitem>
        </itemizedlist>
    </warning>
    <procedure xml:id="windows-sources-regular-eventlog">
        <title>Managing eventlog sources</title>
        <indexterm>
            <primary>eventlog sources</primary>
            <secondary>managing</secondary>
        </indexterm>
        <figure>
            <title>Managing eventlog sources</title>
            <mediaobject>
                <imageobject role="html">
                    <imagedata format="PNG" align="center" fileref="win-event-containers-properties.png"/>
                </imageobject>
                <imageobject role="fo">
                    <imagedata format="PNG" fileref="&imgroot;/win-event-containers-properties.png" contentwidth="10cm"/>
                </imageobject>
            </mediaobject>
        </figure>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>Start the configuration interface of the &agent; application.</para>
        </step>
        <step>
            <para>Select <guimenu>syslog-ng Agent Settings > Eventlog Sources</guimenu>, and double-click on <guimenu>Event Containers</guimenu>.</para>
        </step>
        <step>
            <itemizedlist>
                <listitem>
                    <para>To disable sending messages from an eventlog container, deselect the checkbox before the name of the container.</para>
                </listitem>
                <listitem>
                    <para>To modify the log facility associated with the messages of the container, select the container, click <guimenu>Edit</guimenu>, and select the log facility to use in the <guimenu>Log Facility</guimenu> field.</para>
                </listitem>
            </itemizedlist>
        </step>
        <step>
            <para>Select <guimenu>Apply</guimenu>, then <guimenu>OK</guimenu>. To activate the changes, restart the &agentabbrev; service.</para>
        </step>
    </procedure>
    <procedure xml:id="windows-sources-eventlog-add">
        <title>Adding eventlog sources</title>
        <indexterm>
            <primary>eventlog sources</primary>
            <secondary>adding new</secondary>
        </indexterm>
        <formalpara>
            <title>Purpose:</title>
            <para/>
        </formalpara>
        <para>To forward the messages from an eventlog container to your central log server, complete the following steps.</para>
        <formalpara>
            <title>Prerequisites:</title>
            <para/>
        </formalpara>
        <para>You need to know the name of the eventlog container. If you do not know the name of the container, see <xref linkend="windows-custom-eventlog-name-vista"/> or <xref linkend="windows-custom-eventlog-name-xp"/>.</para>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>Start the configuration interface of the &agent; application.</para>
        </step>
        <step>
            <para>Select <guimenu>syslog-ng Agent Settings > Eventlog Sources</guimenu>, and double-click on <guimenu>Event Containers</guimenu>.</para>
        </step>
        <step>
            <indexterm>
                <primary>eventlog sources</primary>
                <secondary>wildcards in the name of</secondary>
            </indexterm>
            <para>Click <guimenu>Add</guimenu>, and enter the name of the container into the <guimenu>Event Container Name</guimenu> field. You can use the <parameter>*</parameter> and <parameter>?</parameter> wildcard characters in the name of the container. That way you can handle multiple eventlog containers in a single source.</para>
            <para>If you use wildcards in the name of the eventlog container, note the following points:</para>
            <itemizedlist>
                <listitem>
                    <para>If none of the existing eventlog containers match the pattern, the &agentabbrev; will send a warning message into the debug log. For details on enabling debug logs, see <xref linkend="windows-debug-logging"/>.</para>
                </listitem>
                <listitem>
                    <para>The &agentabbrev; application checks for new eventlog containers only when it starts or restarts. If a new eventlog container is created with a name that matches the pattern of an eventlog source, restart the &agentabbrev; service.</para>
                    <warning>
                        <para>Hazard of data loss! If you use wildcards in multiple eventlog source names, make sure that only one pattern matches every container name. If two eventlog sources match the same container, &agentabbrev; might ignore the messages of the eventlog container.</para>
                    </warning>
                </listitem>
            </itemizedlist>
        </step>
        <step>
            <para>Click <guimenu>Apply</guimenu>, then <guimenu>OK</guimenu>. To activate the changes, restart the &agentabbrev; service.</para>
            <formalpara>
            <title>Expected result:</title>
                <para/>
            </formalpara>
            <para>The &agentabbrev; application starts sending new messages from the newly added eventlog container. Note that the &agentabbrev; will send existing messages from the eventlog container only if you have selected the <guimenu>Read Old Records</guimenu> option.</para>
        </step>
    </procedure>
    <procedure xml:id="windows-custom-eventlog-name-vista">
        <title>Determining the name of a custom eventlog container on Windows Vista and newer</title>
        <indexterm>
            <primary>eventlog sources</primary>
            <secondary>finding the name of</secondary>
        </indexterm>
        <formalpara>
            <title>Purpose:</title>
            <para/>
        </formalpara>
        <para>To determine the name of a custom eventlog container on Windows Vista, Server 2008, and Windows 7, complete the following steps.</para>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>Open the Event Viewer application.</para>
        </step>
        <step>
            <para>Select the custom container you are looking for (for example <parameter>DNS Server</parameter>).</para>
        </step>
        <step>
            <para>Right click on the container and select <guimenu>Properties</guimenu>.</para>
        </step>
        <step>
            <para>The name of the container is the name of the file (without the extension) displayed in the <guimenu>Logname</guimenu> field (for example for <parameter>C:\WINDOWS\system32\config\DnsEvent.Evt</parameter> it is <parameter>DnsEvent</parameter>).</para>
        </step>
        <step>
            <para>Use this name as the name of the custom eventlog container during the procedure described in <xref linkend="windows-sources-regular-eventlog"/>.</para>
            <note>
                <para>On Windows Vista and Server 2008, some container are not real containers, but show selected messages collected from multiple containers. To forward such messages to the syslog-ng server, you have to find out which real containers are displayed in the container, and add them to the configuration of the syslog-ng Agent.</para>
                <para>Some containers have the <parameter>%4</parameter> characters in their names. When adding these to the &agentabbrev;, replace <parameter>%4</parameter> with the <parameter>/</parameter> (slash) character. For example write <parameter>microsoft-windows-bits-client/analytic</parameter> instead of <parameter>microsoft-windows-bits-client%4analytic</parameter>.</para>
                <para>If you are sending old messages to the server as well, the &agentabbrev; will not send the very first message stored in the container. This is a bug in the Windows API.</para>
            </note>
        </step>
    </procedure>
    <procedure xml:id="windows-custom-eventlog-name-xp">
        <title>Determining the name of a custom eventlog container on Windows XP, or Server 2003</title>
        <indexterm>
            <primary>eventlog sources</primary>
            <secondary>finding the name of</secondary>
        </indexterm>
        <formalpara>
            <title>Purpose:</title>
            <para/>
        </formalpara>
        <para>To determine the name of a custom eventlog container on Windows XP, or Server 2003, complete the following steps.</para>
        <formalpara>
            <title>Steps:</title>
            <para/>
        </formalpara>
        <step>
            <para>On the client host select <guimenu>Start > Run > regedit</guimenu>.</para>
        </step>
        <step>
            <para>Navigate to <guimenu>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Eventlog\</guimenu>. The custom containers are listed here. For example, the following are valid container names: <parameter>DFS Replication</parameter>, <parameter>File Replication Service</parameter>, <parameter>DNS Server</parameter>.</para>
        </step>
        <step>
            <para>Use this name as the name of the custom eventlog container during the procedure described in <xref linkend="windows-sources-regular-eventlog"/>.</para>
        </step>
    </procedure>
</section>
