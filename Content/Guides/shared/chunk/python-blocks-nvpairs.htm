<?xml version="1.0" encoding="UTF-8"?>

<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body oldrole="topic">
<ul oldrole="itemizedlist">
<!-- Applies to Python template functions and Python parsers -->
<li oldrole="listitem">
<p oldrole="para">To reference a name-value pair or a macro in the Python code, use the following format. For example, if the first argument in the definition of the function is called <span class="Code" oldrole="userinput">log-message</span>, the value of the HOST macro is <span class="Code" oldrole="userinput">log-message['HOST']</span>, and so on. (The <span class="Code" oldrole="userinput">log-message</span> contains the entire log message (not just the text body) in a structure similar to a Python dict, but it is actually an object.)</p>
</li>
<li oldrole="listitem">
<p oldrole="para">You can define new name-value pairs in the Python function. For example, if the first argument in the definition of the function is called <span class="Code" oldrole="userinput">log-message</span>, you can create a new name-value pair like this: <span class="Code" oldrole="userinput">log_message["new-macro-name"]="value"</span>. This is useful when you parse a part of the message from Python, or lookup a value based on data extracted from the log message.</p>
<p oldrole="para">Note that the names of the name-value pairs are case-sensitive. If you create a new name-value pair called <span class="Code" oldrole="userinput">new-macro-name</span> in Python, and want to reference it in another part of the <MadCap:variable name="General.abbrev"></MadCap:variable> configuration file (for example, in a template), use the <span class="Code" oldrole="userinput">${new-macro-name}</span> macro.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">You cannot override hard macros (see <MadCap:xref href="../../syslog-ng-guide-admin/chapters/macros-hard-vs-soft.htm#macros-hard-vs-soft"></MadCap:xref>).</p>
</li>
<li oldrole="listitem">
<p oldrole="para">To list all available keys (names of name-value pairs), use the <span class="Code" oldrole="userinput">log_message.keys()</span> function.</p>
</li>
</ul>
</body></html>
