<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body oldrole="topic">
        <ul oldrole="itemizedlist">
            <li oldrole="listitem">
                <p oldrole="para">The main body of the configuration file consists of object definitions: sources, destinations, logpaths define which log message are received and where they are sent. All identifiers, option names and attributes, and any other strings used in the syslog-ng configuration file are case sensitive. Object definitions (also called statements) have the following syntax:</p><pre class="Code" oldrole="synopsis">type-of-the-object identifier-of-the-object {&lt;parameters&gt;};</pre>
                <ul oldrole="itemizedlist">
                    <li oldrole="listitem">
                        <p oldrole="para"><i oldrole="emphasis">Type of the object</i>: One of <span class="Code" oldrole="parameter">source</span>, <span class="Code" oldrole="parameter">destination</span>, <span class="Code" oldrole="parameter">log</span>, <span class="Code" oldrole="parameter">filter</span>, <span class="Code" oldrole="parameter">parser</span>, <span class="Code" oldrole="parameter">rewrite</span> rule, or <span class="Code" oldrole="parameter">template</span>.</p>
                    </li>
                    <li oldrole="listitem">
                        <p oldrole="para"><i oldrole="emphasis">Identifier of the object</i>: A unique name identifying the object. When using a reserved word as an identifier, enclose the identifier in quotation marks.</p>
                        <p oldrole="para">All identifiers, attributes, and any other strings used in the syslog-ng configuration file are case sensitive.</p>
                        <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="tip" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
                            <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
                            </col>
                            <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
                            </col>
                            <tbody>
                                <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
                                    <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
                                        <p>
                                            <img src="../../../Resources/Images/Common/note.png" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">TIP: </span>
                                        <p oldrole="para">Use identifiers that refer to the type of the object they identify. For example, prefix source objects with <span class="Code" oldrole="userinput">s_</span>, destinations with <span class="Code" oldrole="userinput">d_</span>, and so on.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                        <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
                            <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
                            </col>
                            <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
                            </col>
                            <tbody>
                                <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
                                    <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
                                        <p>
                                            <img src="../../../Resources/Images/Common/note.png" />
                                        </p>
                                    </td>
                                    <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span>
                                        <p oldrole="para">Repeating a definition of an object (that is, defining the same object with the same id more than once) is not allowed, unless you use the <span class="Code" oldrole="parameter">@define allow-config-dups 1</span> definition in the configuration file.</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </li>
                    <li oldrole="listitem">
                        <p oldrole="para"><i oldrole="emphasis">Parameters</i>: The parameters of the object, enclosed in braces <span class="Code" oldrole="userinput">{parameters}</span>.</p>
                    </li>
                    <li oldrole="listitem">
                        <p oldrole="para"><i oldrole="emphasis">Semicolon</i>: Object definitions end with a semicolon (<span class="Code" oldrole="userinput">;</span>).</p>
                    </li>
                </ul>
                <p oldrole="para">For example, the following line defines a source and calls it <span class="Code" oldrole="userinput">s_internal</span>.</p><pre class="Code" oldrole="synopsis">source s_internal {
    internal();
};</pre>
                <p oldrole="para">The object can be later referenced in other statements using its ID, for example, the previous source is used as a parameter of the following log statement:</p><pre class="Code" oldrole="synopsis">log {
    source(s_internal);
    destination(d_file);
};</pre>
            </li>
            <li oldrole="listitem">
                <p oldrole="para">The parameters and options within a statement are similar to function calls of the C programming language: the name of the option followed by a list of its parameters enclosed within brackets and terminated with a semicolon.</p><pre class="Code" oldrole="synopsis">option(parameter1, parameter2);
option2(parameter1, parameter2);</pre>
                <p oldrole="para">For example, the <span class="Code" oldrole="parameter">file()</span> driver in the following source statement has three options: the filename (<span class="Code" oldrole="filename">/var/log/apache/access.log</span>), <span class="Code" oldrole="parameter">follow-freq()</span>, and <span class="Code" oldrole="parameter">flags()</span>. The <span class="Code" oldrole="parameter">follow-freq()</span> option also has a parameter, while the <span class="Code" oldrole="parameter">flags()</span> option has two parameters.</p><pre class="Code" oldrole="synopsis">source s_tail {
    file("/var/log/apache/access.log"
        follow-freq(1)
        flags(no-parse, validate-utf8)
    );
};</pre>
                <p oldrole="para">Objects may have required and optional parameters. Required parameters are positional, meaning that they must be specified in a defined order. Optional parameters can be specified in any order using the <literal>option(value)</literal> format. If a parameter (optional or required) is not specified, its default value is used. The parameters and their default values are listed in the reference section of the particular object.</p>
                <div class="Example">
                    <h6 oldrole="example">Example: Using required and optional parameters</h6>
                    <p oldrole="para">The <span class="Code" oldrole="parameter">unix-stream()</span> source driver has a single required argument: the name of the socket to listen on. Optional parameters follow the socket name in any order, so the following source definitions have the same effect:</p><pre class="Code" oldrole="synopsis">source s_demo_stream1 {
    unix-stream("&lt;path-to-socket&gt;"
        max-connections(10)
        group(log)
    );
};
source s_demo_stream2 {
    unix-stream("&lt;path-to-socket&gt;"
        group(log)
        max-connections(10)
    );
};</pre>
                </div>
            </li>
            <li oldrole="listitem">
                <p oldrole="para">Some options are global options, or can be set globally, for example, whether <MadCap:variable name="General.abbrev"></MadCap:variable> should use DNS resolution to resolve IP addresses. Global options are detailed in <MadCap:xref href="../../syslog-ng-guide-admin/chapters/chapter-global-options.htm#chapter-global-options"><span style="color: #04aada;" class="mcFormatColor">Global options of [%=General.abbrev%]</span></MadCap:xref>.</p><pre class="Code" oldrole="synopsis">options {
    use-dns(no);
};</pre>
            </li>
            <li oldrole="listitem">
                <p oldrole="para">Objects can be used before definition.</p>
            </li>
            <li oldrole="listitem">
                <p oldrole="para">Objects can be defined inline as well. This is useful if you use the object only once (for example, a filter). For details, see <MadCap:xref href="../../syslog-ng-guide-admin/chapters/inline-objects.htm#inline-objects"><span style="color: #04aada;" class="mcFormatColor">Defining configuration objects inline</span></MadCap:xref>.</p>
            </li>
            <li oldrole="listitem">
                <p oldrole="para">To add comments to the configuration file, start a line with <span class="Code" oldrole="userinput">#</span> and write your comments. These lines are ignored by syslog-ng.</p><pre class="Code" oldrole="synopsis"># Comment: This is a stream source
source s_demo_stream {
    unix-stream("&lt;path-to-socket&gt;"
        max-connections(10)
        group(log)
    );
};</pre>
            </li>
        </ul>
    </body>
</html>