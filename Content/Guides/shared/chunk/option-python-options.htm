<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="" />
    </head>
    <body oldrole="topic">
        <div>
            <h6>options()</h6>
            <MadCap:keyword term="options()">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyE-Column1-Body1">Type:</td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyD-Column1-Body1">string</td>
                    </tr>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Default:</td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">N/A</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> This option allows you to pass custom values from the configuration file to the Python code. The Python code will receive these values during initialization as the <span class="Code">options</span> dictionary. For example, you can use this to set the IP address of the server from the configuration file, so it is not hard-coded in the Python object.</p>
            <pre class="Code">python(
    class("MyPythonClass")
    options(
        host 127.0.0.1
        port 1883
        otheroption value)
);</pre>
            <p>For example, you can refer to the value of the host field in the Python code as <span class="Code" oldrole="userinput">options["host"]</span>. Note that the Python code receives the values as strings, so you might have to cast them to the type required, for example: <span class="Code" oldrole="userinput">int(options["port"])</span></p>
        </div>
    </body>
</html>
