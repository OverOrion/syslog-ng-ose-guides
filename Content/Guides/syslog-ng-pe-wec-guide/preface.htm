<?xml version="1.0" encoding="UTF-8"?>





  %entities;
  ]
 &gt;
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body name="preface" oldrole="section">
<h1 name="preface" xmlns="http://docbook.org/ns/docbook">Introduction</h1>
<p oldrole="para"><MadCap:snippetBlock src="../xml-stylesheet/common/copyright.htm"></MadCap:snippetBlock>The &wec; (&wecabbrev;) acts as a log collector and forwarder tool for the Microsoft Windows platform. It collects the log messages of Windows-based hosts over HTTPS (using TLS encryption and mutual authentication), and forwards them to a &abbrev; server. In Windows terminology, this tool allows you to define source-initiated subscriptions, and have them forwarded to a &abbrev; server.</p>
<p oldrole="para">Unlike the <a href="https://syslog-ng.com/documents/html/syslog-ng-pe-6.0-guides/en/syslog-ng-windows-agent-guide-admin/html/index.html">&agent;</a>, the &wec; is a standalone tool that does not require installing on the Windows-based host itself. This can be an advantage when your organization's policies restrict or do not allow the installation of third-party tools.</p>
<p oldrole="para">Another difference between the &wec; tool and &agent; is that &wecabbrev; forwards logs only about Windows events, while &agentabbrev; forwards both Windows event logs as well as files from Windows hosts to the &abbrev; server.</p>
<p oldrole="para">The &wec; sits between your Windows hosts and your &product; server, accepting log messages from the remote Windows side with WinRM and feeding them to &product; 7.0.</p>
<p class="CaptionFigure">How &wec; works in &abbrev; 7.0</p>
<p><img class="Image" contentwidth="&screenshotsize;" fileref="&imgroot;/wec-topology.png" format="PNG" MadCap:mediastyle="@media print { width: auto; height: auto; }" oldrole="figure" src="../Resources/Images_Notlocalized/syslog-ng-pe-wec-guide/wec-topology.png" style="height: auto; width: auto;"/></p>
<p oldrole="para">At a high level, this is how you can get Windows event logs to be forwarded to your &product; server using the &wecabbrev; tool:</p>
<ol oldrole="orderedlist">
<li oldrole="listitem">
<p oldrole="para">Configure Windows event source computers.</p>
<p oldrole="para">For details on how to configure your Windows hosts, see <MadCap:xref href="wec-configure-event-source-computers.htm#wec-configure-event-source-computers"></MadCap:xref>.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">Set up the &wec; as the server that collects and forwards event logs.</p>
<p oldrole="para">For details on how to set up and configure the &wec; tool, see <MadCap:xref href="wec-install.htm#wec-install"></MadCap:xref>, <MadCap:xref href="wec-generate-certs.htm#wec-generate-certs"></MadCap:xref>, and <MadCap:xref href="wec-configure.htm#wec-configure"></MadCap:xref>.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">The &wec; accepts incoming event log subscription requests from the Windows hosts.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">The &wec; handshakes the event forwarding settings with the Windows hosts, for example, which events to forward.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">The &wec; accepts the forwarded event logs, and writes the raw logs to a Unix datagram socket.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">&abbrev; reads the Unix datagram socket using a source called <span class="Code" oldrole="parameter">windowsevent()</span>.</p>
<p oldrole="para">For details on how to configure your &abbrev; server, see <MadCap:xref href="wec-configure-syslog-ng.htm#wec-configure-syslog-ng"></MadCap:xref>.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">&abbrev; parses the logs into key-value pairs using the XML parser.</p>
<p oldrole="para">For details on the XML parser, see <a href="https://support.oneidentity.com/technical-documents/one-identity-psm/syslog-ng-pe-guide-admin/xml-parser" oldrole="olink"></a>.</p>
</li>
</ol>
</body></html>
