<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <body name="wec-generate-certs" oldrole="procedure">
        <h1 name="wec-generate-certs"><a name="wec-generate-certs"></a>Generate SSL certificates for <MadCap:variable name="General.wec"></MadCap:variable></h1>
        <h6 oldrole="formalpara" MadCap:conditions="CommonConditions_DoNotEdit.DoNotPublish">Purpose:</h6>
        <p>When the Windows-based host and the <MadCap:variable name="General.wec"></MadCap:variable> start communicating for the first time, they authenticate each other by exchanging and verifying each other's certificates. The process begins with the Windows host requesting and verifying the <MadCap:variable name="General.wecabbrev"></MadCap:variable> tool's certificates. After successful verification, the Windows host sends its own certificates for verification to <MadCap:variable name="General.wecabbrev"></MadCap:variable>.</p>
        <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="tip" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
            <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
            </col>
            <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
            </col>
            <tbody>
                <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
                    <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
                        <p>
                            <img src="../../Resources/Images/Common/note.png" />
                        </p>
                    </td>
                    <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">TIP: </span>
                        <p>If the Windows host fails to authenticate the <MadCap:variable name="General.wecabbrev"></MadCap:variable> tool's certificates for some reason, check the Windows event logs for details.</p>
                        <p>For details on which event logs to look at, see <MadCap:xref href="wec-troubleshoot.htm#wec-troubleshoot"><span style="color: #04aada;" class="mcFormatColor">Troubleshoot [%=General.wec%]</span></MadCap:xref>.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>The example described in this section uses OpenSSL for certificate generation. Note, however, that you can generate certificates using the Windows Public Key Infrastructure (PKI).</p>
        <p>To generate the SSL certificates for <MadCap:variable name="General.wecabbrev"></MadCap:variable>, complete the following steps:</p>
        <div>
            <h6 oldrole="formalpara" MadCap:conditions="CommonConditions_DoNotEdit.DoNotPublish">Steps:</h6>
            <p class="Procedure">To generate SSL certificates for <MadCap:variable name="General.wec"></MadCap:variable></p>

            <ol oldrole="procedure">
                <li oldrole="step">
                    <p>Create two certificate template files for both the server and the client(s).</p>
                    <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
                        <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
                        </col>
                        <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
                        </col>
                        <tbody>
                            <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
                                <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
                                    <p>
                                        <img src="../../Resources/Images/Common/note.png" />
                                    </p>
                                </td>
                                <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span>
                                    <p>The templates shown here are examples only. Not all elements of the example <span class="Code" oldrole="filename">*opts.cnf</span> files are mandatory, for example, you do not need to define two DNS instances.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <p>The contents of <span class="Code" oldrole="filename">server-certopts.cnf</span>:</p><pre class="Code" oldrole="synopsis">[req]
default_bits = 4096
default_md = sha256
req_extensions = req_ext
keyUsage = keyEncipherment,dataEncipherment
basicConstraints = CA:FALSE
distinguished_name = dn

[ req_ext ]
subjectAltName = @alt_names
extendedKeyUsage = serverAuth,clientAuth

[ alt_names ]
DNS.1 = &lt;1st DNS hostname of server (preferably FQDN)&gt;
...
DNS.&lt;N&gt; = &lt;Nth DNS hostname of server (preferably FQDN)&gt;
IP.1 = &lt;1st IP of server&gt;
...
IP.&lt;N&gt; = &lt;Nth IP of server&gt;

[dn]</pre>
                    <p>For example:</p><pre class="Code" oldrole="synopsis">[req]
default_bits = 4096
default_md = sha256
req_extensions = req_ext
keyUsage = keyEncipherment,dataEncipherment
basicConstraints = CA:FALSE
distinguished_name = dn

[ req_ext ]
subjectAltName = @alt_names
extendedKeyUsage = serverAuth,clientAuth

[ alt_names ]
DNS.1 = windowseventcollector.widgits
DNS.2 = wec.widgits
IP.1 = 10.64.10.2

[dn]</pre>
                    <p>The contents of <span class="Code" oldrole="filename">client-certopts.cnf</span>:</p><pre class="Code" oldrole="synopsis">[req]
default_bits = 4096
default_md = sha256
req_extensions = req_ext
keyUsage = keyEncipherment,dataEncipherment
basicConstraints = CA:FALSE
distinguished_name = dn

[ req_ext ]
subjectAltName = @alt_names
extendedKeyUsage = serverAuth,clientAuth

[ alt_names ]
DNS.1 = &lt;1st DNS hostname of client (preferably FQDN)&gt;
...
DNS.&lt;N&gt; = &lt;Nth DNS hostname of client (preferably FQDN)&gt;
IP.1 = &lt;1st IP of client&gt;
...
IP.&lt;N&gt; = &lt;Nth IP of client&gt;

[dn]</pre>
                    <p>For example:</p><pre class="Code" oldrole="synopsis">[req]
default_bits = 4096
default_md = sha256
req_extensions = req_ext
keyUsage = keyEncipherment,dataEncipherment
basicConstraints = CA:FALSE
distinguished_name = dn

[ req_ext ]
subjectAltName = @alt_names
extendedKeyUsage = serverAuth,clientAuth

[ alt_names ]
DNS.1 = windowsclient01.widgits
DNS.2 = client01.widgits
IP.1 = 10.64.10.11

[dn]</pre>
                </li>
                <li oldrole="step">
                    <p>Generate the certificate authority (CA):</p><pre class="Code" oldrole="synopsis">$ openssl genrsa -out ca.key 4096

$ openssl req -x509 -new -nodes -key ca.key -days 3650 -out ca.crt -subj '&lt;subject name for CA cert (must be formatted as /type0=value0/type1=value1/type2=..., characters may be escaped by \ (backslash), no spaces are skipped)&gt;'</pre>
                    <p>For example:</p><pre class="Code" oldrole="synopsis">$ openssl genrsa -out ca.key 4096

$ openssl req -x509 -new -nodes -key ca.key -days 3650 -out ca.crt -subj '/C=AU/ST=Victoria/L=Melbourne/O=Internet Widgits Pty Ltd/OU=Operations/CN=Operations Root CA'</pre>
                    <p>Place a copy of the <span class="Code" oldrole="filename">ca.crt</span> file in a directory of your choice. Take a note of the directory because you need to reference it in the <a href="option-cadir.htm"><span class="Code" oldrole="parameter">cadir</span></a> option of the <MadCap:variable name="General.wecabbrev"></MadCap:variable> configuration file.</p>
                </li>
                <li name="step-thumbprint-CA" oldrole="step">
                    <p>Save the thumbprint of the CA:</p><pre class="Code" oldrole="synopsis">$ openssl x509 -in ca.crt -fingerprint -sha1 -noout | sed -e 's/\://g'</pre>
                    <p>You will need the fingerprint to configure the event source computers that send log messages to <MadCap:variable name="General.wec"></MadCap:variable>. For details, see <MadCap:xref href="wec-configure-event-source-computers.htm"/>.</p>
                </li>
                <li oldrole="step">
                    <p>Create the server certificate:</p>
                    <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
                        <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
                        </col>
                        <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
                        </col>
                        <tbody>
                            <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
                                <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
                                    <p>
                                        <img src="../../Resources/Images/Common/note.png" />
                                    </p>
                                </td>
                                <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span>
                                    <p>The Common Name must be the FQDN (or IP address) of the <MadCap:variable name="General.wec"></MadCap:variable> server.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table><pre class="Code" oldrole="synopsis">$ openssl req -new -newkey rsa:4096 -nodes -out server.csr -keyout server.key -subj '&lt;subject name for server cert (must be formatted as /type0=value0/type1=value1/type2=..., characters may be escaped by \ (backslash), no spaces are skipped)&gt;'

$ openssl x509 -req -in server.csr -out server.crt -CA ca.crt -CAkey ca.key -CAcreateserial -extfile server-certopts.cnf -extensions req_ext -days 365</pre>
                    <p>For example:</p><pre class="Code" oldrole="synopsis">$ openssl req -new -newkey rsa:4096 -nodes -out server.csr -keyout server.key -subj '/C=AU/ST=Victoria/L=Melbourne/O=Internet Widgits Pty Ltd/OU=Operations/CN=windowseventcollector.widgits'

$ openssl x509 -req -in server.csr -out server.crt -CA ca.crt -CAkey ca.key -CAcreateserial -extfile server-certopts.cnf -extensions req_ext -days 365</pre>
                </li>
                <li oldrole="step">
                    <p>Create client(s') certificates:</p>
                    <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
                        <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
                        </col>
                        <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
                        </col>
                        <tbody>
                            <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
                                <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
                                    <p>
                                        <img src="../../Resources/Images/Common/note.png" />
                                    </p>
                                </td>
                                <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span>
                                    <p>The Common Name must be the FQDN (or IP address) of the client.</p>
                                </td>
                            </tr>
                        </tbody>
                    </table><pre class="Code" oldrole="synopsis">$ openssl req -new -newkey rsa:4096 -nodes -out client.csr -keyout client.key -subj '&lt;subject name for client cert (must be formatted as /type0=value0/type1=value1/type2=..., characters may be escaped by \ (backslash), no spaces are skipped)&gt;'

$ openssl x509 -req -in client.csr -out client.crt -CA ca.crt -CAkey ca.key -CAcreateserial -extfile client-certopts.cnf -extensions req_ext -days 365</pre>
                    <p>For example:</p><pre class="Code" oldrole="synopsis">$ openssl req -new -newkey rsa:4096 -nodes -out client.csr -keyout client.key -subj '/C=AU/ST=Victoria/L=Melbourne/O=Internet Widgits Pty Ltd/OU=Operations/CN=windowsclient01.widgits'

$ openssl x509 -req -in client.csr -out client.crt -CA ca.crt -CAkey ca.key -CAcreateserial -extfile client-certopts.cnf -extensions req_ext -days 365</pre>
                </li>
                <li oldrole="step">
                    <p>Export the client(s') certificate(s) to the format recognized by the Windows Certificate Manager tool.</p><pre class="Code" oldrole="synopsis">$ openssl pkcs12 -export  -inkey client.key -in client.crt -certfile ca.crt -out client.p12</pre>
                </li>
            </ol>
        </div>
    </body>
</html>