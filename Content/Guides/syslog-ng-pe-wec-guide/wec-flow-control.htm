<?xml version="1.0" encoding="UTF-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body name="wec-flow-control" oldrole="section">
<h1 name="wec-flow-control">Flow control</h1>
<p oldrole="para">The <MadCap:variable name="General.wec"></MadCap:variable> tool applies flow control to minimize event log loss.</p>
<p oldrole="para"><MadCap:variable name="General.wecabbrev"></MadCap:variable> regularly (in every second) polls the datagram socket that will receive the Windows events to check whether it exists already. Once the socket has been created (<MadCap:variable name="General.abbrev"></MadCap:variable> has started up), <MadCap:variable name="General.wecabbrev"></MadCap:variable> connects to the socket and accepts the incoming connections from the Windows hosts. If the datagram socket does not exist, <MadCap:variable name="General.wecabbrev"></MadCap:variable> refuses the incoming connections.</p>
<p oldrole="para">If the socket exists (<MadCap:variable name="General.abbrev"></MadCap:variable> is running) but <MadCap:variable name="General.abbrev"></MadCap:variable> does not read the Unix datagram socket, <MadCap:variable name="General.wecabbrev"></MadCap:variable> fills up the kernel buffer of the datagram socket and stores <span class="Code" oldrole="parameter">queuesize</span> amounts of log messages in the memory. When all buffers are full, <MadCap:variable name="General.wecabbrev"></MadCap:variable> stops reading messages from the HTTP connections to prevent message loss.</p>
<p oldrole="para">The buffer size of a datagram socket is determined by certain Linux kernel parameters: the value of <span class="Code" oldrole="userinput">rmem_*</span> (max/default) and the count of <span class="Code" oldrole="userinput">net.unix.max_dgram_qlen</span>.</p>

<h6 oldrole="simplesect">Reliability</h6>
<p oldrole="para"><MadCap:variable name="General.wecabbrev"></MadCap:variable> flags a message as delivered once it has put the message in the socket buffer. If <MadCap:variable name="General.abbrev"></MadCap:variable> does not read the socket for some reason (for example, because it is still flow-controlled) and <MadCap:variable name="General.abbrev"></MadCap:variable> is stopped, the contents of this socket (that is, the messages that are in the kernel buffer, unread by <MadCap:variable name="General.abbrev"></MadCap:variable>) will be lost.</p>
<p oldrole="para">This is why in cases when a restart is necessary, it is recommended to stop the <MadCap:variable name="General.wec"></MadCap:variable> and <MadCap:variable name="General.abbrev"></MadCap:variable> in the following order:</p>
<ol oldrole="orderedlist">
<li oldrole="listitem">
<p oldrole="para"><MadCap:variable name="General.wec"></MadCap:variable></p>
</li>
<li oldrole="listitem">
<p oldrole="para"><MadCap:variable name="General.abbrev"></MadCap:variable></p>
</li>
</ol>
<p oldrole="para">While it is not guaranteed that <MadCap:variable name="General.abbrev"></MadCap:variable> has read all sockets by the time you stop it, at least you can maximize the chances that it has.</p>

</body></html>