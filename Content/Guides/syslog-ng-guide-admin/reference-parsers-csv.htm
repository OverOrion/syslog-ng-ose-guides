<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="" />
    </head>
    <body name="reference-parsers-csv">
        <h1 name="reference-parsers-csv">Options of CSV parsers</h1>
        <MadCap:keyword term="segmenting messages">
        </MadCap:keyword>
        <MadCap:keyword term="CSV parsers">
        </MadCap:keyword>
        <MadCap:keyword term="splitting messages">
        </MadCap:keyword>
        <MadCap:snippetBlock src="../shared/chunk/topic-parser-csv-intro.flsnp">
        </MadCap:snippetBlock>
        <div>
            <h6 name="parser-options"><a name="parser-options"></a>columns()</h6>
            <MadCap:keyword term="columns()">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 

                            </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">columns("PARSER.COLUMN1", "PARSER.COLUMN2", ...)</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies the name of the columns to separate messages to. These names will be automatically available as macros. The values of these macros do not include the delimiters.</p>
        </div>
        <div>
            <h6 name="csv-parser-delimiter"><a name="csv-parser-delimiter"></a>delimiters()</h6>
            <MadCap:keyword term="delimiters()">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 

                            </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">
                            <p>delimiters(chars("&lt;delimiter_characters&gt;")) <i>or <span class="Code">delimiters("&lt;delimiter_characters&gt;")</span></i></p>
                            <p>delimiters(strings("&lt;delimiter_string1&gt;", "&lt;delimiter_string2&gt;", ...)")</p>
                            <p>delimiters(chars("&lt;delimiter_characters&gt;"), strings("&lt;delimiter_string1&gt;"))</p>
                        </td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> The delimiter is the character or string that separates the columns in the message. If you specify multiple characters using the <span class="Code">delimiters(chars("&lt;delimiter_characters&gt;"))</span> option, every character will be treated as a delimiter. To separate the columns at the tabulator (tab character), specify <span class="Code">\t</span>. For example, to separate the text at every hyphen (-) and colon (:) character, use <b class="Code">delimiters(chars("-:"))</b>, Note that the delimiters will not be included in the column values.</p>
            <div>
                <h6>String delimiters:</h6>
                <p>If you have to use a string as a delimiter, list your string delimiters in the <span class="Code">delimiters(strings("&lt;delimiter_string1&gt;", "&lt;delimiter_string2&gt;", ...)")</span> format.</p>
                <p>By default, <MadCap:variable name="General.abbrev"></MadCap:variable> uses space as a delimiter. If you want to use only the strings as delimiters, you have to disable the space delimiter, for example: <b class="Code">delimiters(chars(""), strings("&lt;delimiter_string&gt;"))</b></p>
                <p>Otherwise, <MadCap:variable name="General.abbrev"></MadCap:variable> will use the string delimiters in addition to the default character delimiter, so <span class="Code">delimiters(strings("=="))</span> actually equals <span class="Code">delimiters(chars(" "), strings("=="))</span>, and not <span class="Code">delimiters(chars(""), strings("=="))</span></p>
            </div>
            <div>
                <h6>Multiple delimiters:</h6>
                <p>If you use more than one delimiter, note the following points:</p>
                <ul>
                    <li>
                        <p><MadCap:variable name="General.abbrev"></MadCap:variable> will split the message at the nearest possible delimiter. The order of the delimiters in the configuration file does not matter.</p>
                    </li>
                    <li>
                        <p>You can use both string delimiters and character delimiters in a parser.</p>
                    </li>
                    <li>
                        <p>The string delimiters can include characters that are also used as character delimiters.</p>
                    </li>
                    <li>
                        <p>If a string delimiter and a character delimiter both match at the same position of the message, <MadCap:variable name="General.abbrev"></MadCap:variable> uses the string delimiter.</p>
                    </li>
                </ul>
            </div>
        </div>
        <div>
            <h6 name="csv-parser-dialect"><a name="csv-parser-dialect"></a>dialect()</h6>
            <MadCap:keyword term="dialect()">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 

                            </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">escape-none|escape-backslash|escape-double-char</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies how to handle escaping in the parsed message. The following values are available. Default value: <span class="Code">escape-none</span></p>
            <ul>
                <MadCap:snippetBlock src="../shared/chunk/option-escaping.htm">
                </MadCap:snippetBlock>
            </ul><pre>parser p_demo_parser {
    csv-parser(
        prefix(".csv.")
        delimiters(" ")
        dialect(escape-backslash)
        flags(strip-whitespace, greedy)
        columns("column1", "column2", "column3")
    );
};</pre>
        </div>
        <div>
            <h6 name="csv-parser-flags"><a name="csv-parser-flags"></a>flags()</h6>
            <MadCap:keyword term="flags()">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 

                            </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">drop-invalid, escape-none, escape-backslash, escape-double-char, greedy, strip-whitespace</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies various options for parsing the message. The following flags are available:</p>
            <ul>
                <li>
                    <p><i>drop-invalid</i>: When the <span class="Code">drop-invalid</span> option is set, the parser does not process messages that do not match the parser. For example, a message does not match the parser if it has less columns than specified in the parser, or it has more columns but the <span class="Code">greedy</span> flag is not enabled. Using the <span class="Code">drop-invalid</span> option practically turns the parser into a special filter, that matches messages that have the predefined number of columns (using the specified delimiters).</p>
                    <MadCap:keyword term="drop-invalid">
                    </MadCap:keyword>
                    <div class="Note">
                        <p class="Hyphenation"><span class="AllNoteStyles">TIP:</span> Messages dropped as invalid can be processed by a <span class="Code">fallback</span> log path. For details on the <span class="Code">fallback</span> option, see <MadCap:xref href="reference-logflags.htm"><span style="color: #04aada;" class="mcFormatColor">Log path flags</span></MadCap:xref>.</p>
                    </div>
                </li>
                <MadCap:snippetBlock src="../shared/chunk/option-escaping.htm">
                </MadCap:snippetBlock>
                <li>
                    <p><i>greedy</i>: The <span class="Code">greedy</span> option assigns the remainder of the message to the last column, regardless of the delimiter characters set. You can use this option to process messages where the number of columns varies.</p>
                    <MadCap:keyword term="greedy">
                    </MadCap:keyword>
                    <div class="Example">
                        <h6 name="example-parser-greedy"><a name="example-parser-greedy"></a>Example: Adding the end of the message to the last column</h6>
                        <p>If the <span class="Code">greedy</span> option is enabled, the syslog-ng application adds the not-yet-parsed part of the message to the last column, ignoring any delimiter characters that may appear in this part of the message.</p>
                        <p>For example, you receive the following comma-separated message: <span class="Code">example 1, example2, example3</span>, and you segment it with the following parser:</p><pre>csv-parser(columns("COLUMN1", "COLUMN2", "COLUMN3") delimiters(","));</pre>
                        <p>The <span class="Code">COLUMN1</span>, <span class="Code">COLUMN2</span>, and <span class="Code">COLUMN3</span> variables will contain the strings <span class="Code">example1</span>, <span class="Code">example2</span>, and <span class="Code">example3</span>, respectively. If the message looks like <span class="Code">example 1, example2, example3, some more information</span>, then any text appearing after the third comma (that is, <span class="Code">some more information</span>) is not parsed, and possibly lost if you use only the variables to reconstruct the message (for example, to send it to different columns of an SQL table).</p>
                        <p>Using the <span class="Code">greedy</span> flag will assign the remainder of the message to the last column, so that the <span class="Code">COLUMN1</span>, <span class="Code">COLUMN2</span>, and <span class="Code">COLUMN3</span> variables will contain the strings <span class="Code">example1</span>, <span class="Code">example2</span>, and <span class="Code">example3, some more information</span>.</p><pre>csv-parser(columns("COLUMN1", "COLUMN2", "COLUMN3") delimiters(",") flags(greedy));</pre>
                    </div>
                </li>
                <li>
                    <p><i>strip-whitespace</i>: The <span class="Code">strip-whitespace</span> flag removes leading and trailing whitespaces from all columns.</p>
                    <MadCap:keyword term="strip-whitespace">
                    </MadCap:keyword>
                </li>
            </ul>
        </div>
        <div>
            <h6 name="csv-parser-null"><a name="csv-parser-null"></a>null()</h6>
            <MadCap:keyword term="null()">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 

                            </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">string</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> If the value of a column is the value of the <span class="Code">null()</span> parameter, <MadCap:variable name="General.abbrev"></MadCap:variable> changes the value of the column to an empty string. For example, if the columns of the message contain the "N/A" string to represent empty values, you can use the <span class="Code">null("N/A")</span> option to change these values to empty stings.</p>
        </div>
        <MadCap:snippetBlock src="../shared/chunk/option-parser-prefix.flsnp">
        </MadCap:snippetBlock>
        <MadCap:snippetBlock src="../shared/chunk/no-default-prefix.flsnp" /><pre>parser {
    csv-parser(prefix("myprefix."));
};</pre>
        <div>
            <h6 name="csv-parser-quote-pairs"><a name="csv-parser-quote-pairs"></a>quote-pairs()</h6>
            <MadCap:keyword term="quote-pairs()">
            </MadCap:keyword>
            <MadCap:keyword term="quote_pairs()">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 

                            </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">quote-pairs('&lt;quote_pairs&gt;')</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> List quote-pairs between single quotes. Delimiter characters or strings enclosed between quote characters are ignored. Note that the beginning and ending quote character does not have to be identical, for example, <b class="Code">[}</b> can also be a quote-pair. For an example of using <span class="Code">quote-pairs()</span> to parse Apache log files, see <MadCap:xref href="csv-parser.htm#example-parser-apache"><span style="color: #04aada;" class="mcFormatColor">Example: Parsing Apache log files</span></MadCap:xref>.</p>
        </div>
        <div>
            <MadCap:snippetBlock src="../shared/chunk/option-parser-template.flsnp">
            </MadCap:snippetBlock>
            <p>For examples, see <MadCap:xref href="csv-parser.htm#example-csv-parser"><span style="color: #04aada;" class="mcFormatColor">Example: Segmenting hostnames separated with a dash</span></MadCap:xref> and <MadCap:xref href="csv-parser.htm#example-parser-multiple"><span style="color: #04aada;" class="mcFormatColor">Example: Segmenting a part of a message</span></MadCap:xref>.</p>
        </div>
    </body>
</html>