<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="regular-expr">
        <h1 name="regular-expr"><a name="regular-expr"></a>Using wildcards, special characters, and regular expressions in filters</h1>
        <MadCap:keyword term="regular expressions">
        </MadCap:keyword>
        <p>The <span class="Code" oldrole="parameter">host()</span>, <span class="Code" oldrole="parameter">match()</span>, and <span class="Code" oldrole="parameter">program()</span> filter functions accept regular expressions as parameters. The exact type of the regular expression to use can be specified with the <span class="Code" oldrole="parameter">type()</span> option. By default, <MadCap:variable name="General.abbrev"></MadCap:variable> uses PCRE regular expressions.</p>
        <MadCap:keyword term="filters:['wildcards']">
        </MadCap:keyword>
        <p>In regular expressions, the asterisk (<span class="Code" oldrole="userinput">*</span>) character means 0, 1, or any number of the previous expression. For example, in the <span class="Code" oldrole="userinput">f*ilter</span> expression the asterisk means 0 or more f letters. This expression matches for the following strings: <span class="Code" oldrole="userinput">ilter</span>, <span class="Code" oldrole="userinput">filter</span>, <span class="Code" oldrole="userinput">ffilter</span>, and so on. To achieve the wildcard functionality commonly represented by the asterisk character in other applications, use <span class="Code" oldrole="userinput">.*</span> in your expressions, for example, <span class="Code" oldrole="userinput">f.*ilter</span>.</p>
        <p>Alternatively, if you do not need regular expressions, only wildcards, use <span class="Code" oldrole="userinput">type(glob)</span> in your filter:</p>
        <div class="Example">
            <h6 name="example-wildcard-filter"><a name="example-wildcard-filter"></a>Example: Filtering with widcards</h6>
            <p>The following filter matches on hostnames starting with the <span class="Code" oldrole="userinput">myhost</span> string, for example, on <span class="Code" oldrole="userinput">myhost-1</span>, <span class="Code" oldrole="userinput">myhost-2</span>, and so on.</p><pre>filter f_wildcard {host("myhost*" type(glob));};</pre>
        </div>
        <p>For details on using regular expressions in <MadCap:variable name="General.abbrev"></MadCap:variable>, see <MadCap:xref href="#"><span style="color: #04aada;" class="mcFormatColor">Using wildcards, special characters, and regular expressions in filters</span></MadCap:xref>.</p>
        <MadCap:keyword term="filters:['control characters']">
        </MadCap:keyword>
        <p>To filter for special control characters like the carriage return (CR), use the <span class="Code" oldrole="userinput">\r</span> escape prefix in <MadCap:variable name="General.abbrev"></MadCap:variable> version 3.0 and 3.1. In <MadCap:variable name="General.abbrev"></MadCap:variable> 3.2 and later, you can also use the <span class="Code" oldrole="userinput">\x</span> escape prefix and the ASCII code of the character. For example, to filter on carriage returns, use the following filter:</p><pre>filter f_carriage_return {match("\x0d" value ("MESSAGE"));};</pre>
    </body>
</html>