<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="concepts-diskbuffer">
        <h1 name="concepts-diskbuffer">Using disk-based and memory buffering</h1>
        <MadCap:keyword term="disk buffer">
        </MadCap:keyword>
        <MadCap:keyword term="disk-based buffering">
        </MadCap:keyword>
        <MadCap:keyword term="parameters:['log-disk-fifo-size()']">
        </MadCap:keyword>
        <p>The <MadCap:variable name="General.product"></MadCap:variable> application can store messages on the local hard disk if the destination (for example, the central log server) or the network connection to the destination becomes unavailable. The <MadCap:variable name="General.abbrev"></MadCap:variable> application automatically sends the stored messages to the destination when the connection is reestablished. The disk buffer is used as a queue: when the connection to the destination is reestablished, <MadCap:variable name="General.abbrev"></MadCap:variable> sends the messages to the destination in the order they were received.</p>
        <div class="Note">
            <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 

			Disk-based buffering can be used in conjunction with flow-control. For details on flow-control, see <MadCap:xref href="concepts-flow-control.htm"><span style="color: #04aada;" class="mcFormatColor">Managing incoming and outgoing messages with flow-control</span></MadCap:xref>.</p>
        </div>
        <MadCap:snippetBlock src="../shared/chunk/p-disk-buffer-drivers.htm">
        </MadCap:snippetBlock>
        <p>Every such destination uses a separate disk buffer (similarly to the output buffers controlled by <span class="Code" oldrole="parameter">log-fifo-size()</span>). The hard disk space is not pre-allocated, so ensure that there is always enough free space to store the disk buffers even when the disk buffers are full.</p>
        <p>If <MadCap:variable name="General.abbrev" /> is restarted (using the <span class="Code" oldrole="command">/etc/init.d/syslog-ng restart</span> command, or another appropriate command on your platform), it automatically saves any unsent messages from the disk buffer and in-memory queues. After the restart, <MadCap:variable name="General.abbrev" /> sends the saved messages to the destination. In other words, the disk buffer is persistent. The disk buffer is also resistant to <MadCap:variable name="General.abbrev" /> crashes.</p>
        <p>The <MadCap:variable name="General.abbrev"></MadCap:variable> application supports two types of disk buffering: reliable and normal. For details, see <MadCap:xref href="configuring-diskbuffer-reliable.htm"><span style="color: #04aada;" class="mcFormatColor">Enabling reliable disk-based buffering</span></MadCap:xref> and <MadCap:xref href="configuring-diskbuffer-normal.htm"><span style="color: #04aada;" class="mcFormatColor">Enabling normal disk-based buffering</span></MadCap:xref>, respectively.</p>
        <div>
            <h6>Message handling and normal disk-based buffering</h6>
            <p>When you use disk-based buffering, and the <span class="Code" oldrole="parameter">reliable()</span> option is set to <span class="Code" oldrole="userinput">no</span>, <MadCap:variable name="General.abbrev"></MadCap:variable> handles outgoing messages the following way:</p>
            <p class="CaptionFigure" MadCap:autonum="Figure 1: ">Handling outgoing messages in <MadCap:variable name="General.abbrev"></MadCap:variable></p>
            <img class="Image" src="../Images/Figures/disk-buffer-diagram-normal.png" />
            <ul>
                <li>
                    <p><i>Output queue</i>: In-memory queue. If there is space left in it, <MadCap:variable name="General.abbrev" /> puts the message into this queue first . Messages stored here are processed faster, because <MadCap:variable name="General.abbrev" /> can skip writing to, and reading from the disk, as well as serializing or deserializing the message, saving I/O and processor time as a result. The contents of the in-memory output queue are persisted to the disk-buffer file during <MadCap:variable name="General.abbrev" /> reload, restart or stop, but they cannot be persisted if in the event of power failures, or if <MadCap:variable name="General.abbrev" /> crashes. By default, the output queue can hold 1000 messages (you can adjust this number using the <span class="Code">quot-size()</span> option).</p>
                </li>
                <MadCap:keyword term="disk queue{see}['disk buffer']">
                </MadCap:keyword>
                <li>
                    <p><i>Disk-buffer file</i>: Disk queue. If there is no space left in the output queue, the message is stored on the disk-buffer file. Messages stored here are persisted on the disk, even in case of power failures or if <MadCap:variable name="General.abbrev" /> crashes. Using the disk-buffer file takes considerable amount of disk I/O and processor time. The size of this queue can be set with the <span class="Code">disk-buf-size()</span> option.</p>
                </li>
                <MadCap:keyword term="overflow queue{see}['output buffer']">
                </MadCap:keyword>
                <li>
                    <p><i>Overflow queue</i>: In-memory queue. This queue is used to trigger flow-control if it is set. The contents of the in-memory overflow queue are persisted to the disk-buffer file in case of <MadCap:variable name="General.abbrev" /> reload, restart or stop, but they are not persisted in case of power failures or if <MadCap:variable name="General.abbrev" /> crashes. Setting the size of the overflow queue can be done with the <span class="Code">mem-buf-length()</span> option.</p>
                </li>
            </ul>
            <table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');">
                <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
                <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2">
                </col>
                <tbody>
                    <tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1">
                        <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1">
                            <p>
                                <img src="../../Resources/Images/Common/caution.png" />
                            </p>
                        </td>
                        <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1"><span class="Yellow">Caution: </span>
                            <p>Hazard of data loss!</p>
                            <p>In case of normal disk-buffers, the messages stored in the output queue and the overflow queue can be lost in case of power failures or if <MadCap:variable name="General.abbrev" /> crashes.</p>
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="Note">
                <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 

				Using disk buffer can significantly decrease performance.</p>
            </div>
        </div>
        <div>
            <h6>Message handling and reliable disk-based buffering</h6>
            <p>When you use disk-based buffering, and the <span class="Code" oldrole="parameter">reliable()</span> option is set to <span class="Code" oldrole="userinput">yes</span>, <MadCap:variable name="General.abbrev"></MadCap:variable> handles outgoing messages the following way.</p>
            <p>The <span class="Code" oldrole="parameter">mem-buf-size()</span> option determines when flow-control is triggered. After the size of the disk-buffer file reaches (<span class="Code">disk-buf-size()</span> minus <span class="Code">mem-buf-size()</span>), messages are written into both the disk-buffer file and the overflow queue, indicating that flow-control needs to slow down the message source. These messages are not taken out from the control window (governed by <span class="Code" oldrole="parameter">log-iw-size()</span>), causing the control window to fill up.</p>
            <p>If the control window is full, the flow-control completely stops reading incoming messages from the source. (As a result, <span class="Code">mem-buf-size()</span> must be at least as large as <span class="Code">log-iw-size()</span> times the average message size.)</p>
            <p class="CaptionFigure" MadCap:autonum="Figure 2: ">Handling outgoing messages in <MadCap:variable name="General.abbrev" /> with the reliable disk-buffer option</p>
            <p>
                <img class="Image" scale="60" src="../Images/Figures/disk-buffer-diagram-reliable.png" />
            </p>
            <ul>
                <li>
                    <p><i>Output queue</i>: In-memory and disk queue. If there is space left in it, <MadCap:variable name="General.abbrev" /> puts the message into this queue first. In case of reliable disk-buffer, in addition to storing the message in memory, it is stored directly in the disk-buffer file as well for safety reasons (see the next point). Messages stored here are processed faster, because <MadCap:variable name="General.abbrev" /> can skip reading from the disk, and deserializing the message, saving I/O and processor time. By default, the output queue can hold 1000 messages (you can adjust it using the <span class="Code">quot-size()</span> option).</p>
                </li>
                <li>
                    <p><i>Disk-buffer file</i>: Disk queue. If there is no space left in the output queue, the message is stored on the disk-buffer file. Messages stored here are persisted on the disk, and survive <MadCap:variable name="General.abbrev" /> crash or power failure. Using the disk-buffer file takes considerable amount of disk I/O and processor time. The size of this queue can be set with the <span class="Code">disk-buf-size()</span> option.</p>
                </li>
                <li>
                    <p><i>Overflow queue</i>: In-memory and disk queue. This queue is used to trigger flow-control if it is set. Similarly to the output queue, in case of reliable disk-buffer in addition to storing the message in memory, it is stored directly in the disk-buffer file as well for safety reasons. Setting the size of the overflow queue can be done with the <span class="Code">mem-buf-size()</span> option.</p>
                </li>
            </ul>
        </div>
    </body>
</html>