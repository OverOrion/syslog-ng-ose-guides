<?xml version="1.0" encoding="utf-8"?>
<!-- FIXME find a better title -->
<!-- FIXME describe the various ways patterndb can be used: message classification and tagging, content extraction, message correlation, ... -->
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="configuring-pattern-databases" oldrole="section">
        <h1 name="configuring-pattern-databases">Using pattern databases</h1>
        <MadCap:keyword term="parsers">
        </MadCap:keyword>
        <MadCap:keyword term="message parsing">
        </MadCap:keyword>
        <MadCap:keyword term="parsing messages">
        </MadCap:keyword>
        <MadCap:keyword term="pattern database">
        </MadCap:keyword>
        <MadCap:keyword term="classifying messages:['configuration']">
        </MadCap:keyword>
        <MadCap:keyword term="message classification">
        </MadCap:keyword>
        <p oldrole="para">To classify messages using a pattern database, include a <span class="Code" oldrole="parameter">db-parser()</span> statement in your syslog-ng configuration file using the following syntax:</p>
        <h6 oldrole="formalpara">Declaration:</h6><pre class="Code" oldrole="synopsis">parser &lt;identifier&gt; {db-parser(file("&lt;database_filename&gt;"));};</pre>
        <p oldrole="para">Note that using the parser in a log statement only performs the classification, but does not automatically do anything with the results of the classification.</p>
        <div class="Example">
            <h6 oldrole="example">Example: Defining pattern databases</h6>
            <p oldrole="para">The following statement uses the database located at <span class="Code" oldrole="filename">/opt/syslog-ng/var/db/patterndb.xml</span>.</p><pre class="Code" oldrole="synopsis">parser pattern_db {
            db-parser(
                file("/opt/syslog-ng/var/db/patterndb.xml")
            );
            };</pre>
            <p oldrole="para">To apply the patterns on the incoming messages, include the parser in a log statement:</p><pre class="Code" oldrole="synopsis">log {
        source(s_all);
        parser(pattern_db);
        destination( di_messages_class);
        };</pre>
        </div>
        <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
            <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
            </col>
            <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
            </col>
            <tbody>
                <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
                    <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
                        <p>
                            <img src="../../../Resources/Images/Common/note.png" />
                        </p>
                    </td>
                    <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span>
                        <p oldrole="para">The default location of the pattern database file is <span class="Code" oldrole="filename">/opt/syslog-ng/var/run/patterndb.xml</span>. The <span class="Code" oldrole="parameter">file</span> option of the <span class="Code" oldrole="parameter">db-parser()</span> statement can be used to specify a different file, thus different db-parser statements can use different pattern databases. Later versions of syslog-ng will be able to dynamically generate a main database from separate pattern database files.</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="Example">
            <h6 oldrole="example">Example: Using classification results</h6>
            <p oldrole="para">The following destination separates the log messages into different files based on the class assigned to the pattern that matches the message (for example Violation and Security type messages are stored in a separate file), and also adds the ID of the matching rule to the message:</p><pre class="Code" oldrole="synopsis">destination di_messages_class {
        file("/var/log/messages-${.classifier.class}"
        template("${.classifier.rule_id};${S_UNIXTIME};${SOURCEIP};${HOST};${PROGRAM};${PID};${MSG}\n")
        template-escape(no)
    );
};</pre>
        </div>
        <p oldrole="para">For details on how to create your own pattern databases see <MadCap:xref href="reference-patterndb-schemes.htm#reference-patterndb-schemes"></MadCap:xref>.</p>
    </body>
</html>