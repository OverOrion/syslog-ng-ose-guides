<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="patterndb-scheme-patterns" oldrole="section">
		<h1>Element: patterns</h1>
		<div><h6 oldrole="simplesect">Location</h6>
		<p oldrole="para">/<a href="">patterndb</a>/<a href="">ruleset</a>/<i oldrole="emphasis" role="bold">patterns</i></p></div>
		<div><h6 oldrole="simplesect">Description</h6>
		<p oldrole="para">A container element. A <span class="Code" oldrole="userinput">&lt;patterns&gt;</span> element may contain any number of <span class="Code" oldrole="userinput">&lt;pattern&gt;</span> elements.</p></div>
		<div><h6 oldrole="simplesect">Attributes</h6>
		<p oldrole="para">N/A</p></div>
		<div><h6 oldrole="simplesect">Children</h6>
		<ul oldrole="itemizedlist">
			<li oldrole="listitem">
				<p oldrole="para"><i oldrole="emphasis" role="bold">pattern</i>: The name of the application <MadCap:variable name="General.mdash"></MadCap:variable> syslog-ng matches this value to the ${PROGRAM} header of the syslog message to find the rulesets applicable to the syslog message.</p>
				<p oldrole="para">Specifying multiple patterns is useful if two or more applications have different names (that is, different ${PROGRAM} fields), but otherwise send identical log messages.</p>
				<p oldrole="para">It is not necessary to use multiple patterns if only the end of the ${PROGRAM} fields is different, use only the beginning of the ${PROGRAM} field as the <span class="Code" oldrole="userinput">pattern</span>. For example, the Postfix e-mail server sends messages using different process names, but all of them begin with the <span class="Code" oldrole="userinput">postfix</span> string.</p>
				<p oldrole="para">You can also use parsers in the program pattern if needed, and use the parsed results later. For example: <span class="Code" oldrole="parameter">&lt;pattern&gt;postfix\@ESTRING:.postfix.component:[@&lt;/pattern&gt;</span></p>
				<table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
					<col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
					</col>
					<col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
					</col>
					<tbody>
						<tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
							<td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
								<p>
									<img src="../../../Resources/Images/Common/note.png" />
								</p>
							</td>
							<td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span>
								<p oldrole="para">If the <span class="Code" oldrole="userinput">&lt;pattern&gt;</span> element of a ruleset is not specified, &amp;abbrev; will use this ruleset as a fallback ruleset: it will apply the ruleset to messages that have an empty PROGRAM header, or if none of the program patterns matched the PROGRAM header of the incoming message.</p>
							</td>
						</tr>
					</tbody>
				</table>
			</li>
		</ul>
		<div class="Example">
			<h6 oldrole="simplesect">Example</h6><pre class="Code" oldrole="synopsis">&lt;patterns&gt;
    &lt;pattern&gt;firstapplication&lt;/pattern&gt;
    &lt;pattern&gt;otherapplication&lt;/pattern&gt;
&lt;/patterns&gt;</pre>
			<p oldrole="para">Using parsers in the program pattern:</p><pre class="Code" oldrole="synopsis">&lt;pattern&gt;postfix\@ESTRING:.postfix.component:[@&lt;/pattern&gt;</pre>
		</div></div>
    </body>
</html>