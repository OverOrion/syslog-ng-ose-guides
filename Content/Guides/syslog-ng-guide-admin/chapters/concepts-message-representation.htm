<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="concepts-message-representation">
        <h1 name="concepts-message-representation">Message representation in <MadCap:variable name="General.OSE"></MadCap:variable></h1>
        <MadCap:keyword term="log messages, representation">
        </MadCap:keyword>
        <p>When the <MadCap:variable name="General.OSE"></MadCap:variable> application receives a message, it automatically parses the message. The <MadCap:variable name="General.OSE"></MadCap:variable> application can automatically parse log messages that conform to the RFC3164 (BSD or legacy-syslog) or the RFC5424 (IETF-syslog) message formats. If <MadCap:variable name="General.OSE"></MadCap:variable> cannot parse a message, it results in an error.</p>
		<div class="Note">
			<p class="Hyphenation">
			<span class="AllNoteStyles">TIP:</span> In case you need to relay messages that cannot be parsed without any modifications or changes, use the <span class="Code" oldrole="parameter">flags(no-parse)</span> option in the source definition, and a template containing only the <span class="Code" oldrole="parameter">${MESSAGE}</span> macro in the destination definition.</p>
            <p>To parse non-syslog messages, for example, JSON, CSV, or other messages, you can use the built-in parsers of <MadCap:variable name="General.OSE"></MadCap:variable>. For details, see <MadCap:xref href="chapter-parsers.htm"><span style="color: #04aada;" class="mcFormatColor">parser: Parse and segment structured messages</span></MadCap:xref>.</p>
        </div>
        <p>A parsed syslog message has the following parts:</p>
        <ul>
            <li>
                <p><b class="UI">Timestamps</b>
                </p>
                <p>Two timestamps are associated with every message: one is the timestamp contained within the message (that is, when the sender sent the message), the other is the time when <MadCap:variable name="General.OSE"></MadCap:variable> has actually received the message.</p>
            </li>
            <li>
                <p><b class="UI">Severity</b>
                </p>
                <p>The severity of the message.</p>
            </li>
            <li>
                <p><b class="UI">Facility</b>
                </p>
                <p>The facility that sent the message.</p>
            </li>
            <li>
                <p><b class="UI">Tags</b>
                </p>
                <p>Custom text labels added to the message that are mainly used for filtering. None of the current message transport protocols adds tags to the log messages. Tags can be added to the log message only within <MadCap:variable name="General.OSE"></MadCap:variable>. The <MadCap:variable name="General.OSE"></MadCap:variable> application automatically adds the id of the source as a tag to the incoming messages. Other tags can be added to the message by the pattern database, or using the <span class="Code" oldrole="parameter">tags()</span> option of the source.</p>
            </li>
            <li>
                <p><b class="UI">IP address of the sender</b>
                </p>
                <p>The IP address of the host that sent the message. Note that the IP address of the sender is a hard macro and cannot be modified within <MadCap:variable name="General.OSE"></MadCap:variable> but the associated hostname can be modified, for example, using rewrite rules.</p>
                
            </li>
            <li>
                <p><b class="UI">Hard macros</b>
                </p>
                <MadCap:keyword term="macros:['hard']">
                </MadCap:keyword>
                <MadCap:keyword term="macros:['read-only']">
                </MadCap:keyword>
                <MadCap:keyword term="hard macros">
                </MadCap:keyword>
                <MadCap:keyword term="read-only macros">
                </MadCap:keyword>
                <p>Hard macros contain data that is directly derived from the log message, for example, the ${MONTH} macro derives its value from the timestamp. The most important consideration with hard macros is that they are read-only, meaning they cannot be modified using rewrite rules or other means.</p>
            </li>
            <li>
                <p><b class="UI">Soft macros</b>
                </p>
                <MadCap:keyword term="macros:['soft']">
                </MadCap:keyword>
                <MadCap:keyword term="macros:['rewritable']">
                </MadCap:keyword>
                <MadCap:keyword term="soft macros">
                </MadCap:keyword>
                <MadCap:keyword term="rewritable macros">
                </MadCap:keyword>
                <p>Soft macros (sometimes also called name-value pairs) are either built-in macros automatically generated from the log message (for example, ${HOST}), or custom user-created macros generated by using the syslog-ng pattern database or a CSV-parser. The SDATA fields of RFC5424-formatted log messages become soft macros as well. In contrast with hard macros, soft macros are writable and can be modified within <MadCap:variable name="General.OSE"></MadCap:variable>, for example, using rewrite rules.</p>
				<div class="Note">
					<p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 
					It is also possible to set the value of built-in soft macros using parsers, for example, to set the ${HOST} macro from the message using a column of a CSV-parser.</p>
                    <p>The data extracted from the log messages using named pattern parsers in the pattern database are also soft macros.</p>
                </div>
				<div class="Note">
					<p class="Hyphenation">
					<span class="AllNoteStyles">TIP:</span> For the list of hard and soft macros, see <MadCap:xref href="macros-hard-vs-soft.htm"><span style="color: #04aada;" class="mcFormatColor">Hard vs. soft macros</span></MadCap:xref>.</p>
                </div>
            </li>
        </ul>
        <div>
            <h6 name="message-size-and-encoding"><a name="message-size-and-encoding"></a>Message size and encoding</h6>
            <MadCap:keyword term="message encoding">
            </MadCap:keyword>
            <MadCap:keyword term="truncating messages">
            </MadCap:keyword>
            <p>Internally, <MadCap:variable name="General.OSE"></MadCap:variable> represents every message as UTF-8. The maximal length of the log messages is limited by the <span class="Code" oldrole="parameter">log-msg-size()</span> option: if a message is longer than this value, <MadCap:variable name="General.OSE"></MadCap:variable> truncates the message at the location it reaches the <span class="Code" oldrole="parameter">log-msg-size()</span> value, and discards the rest of the message.</p>
            <p>When encoding is set in a source (using the <span class="Code" oldrole="parameter">encoding()</span> option) and the message is longer (in bytes) than <span class="Code" oldrole="parameter">log-msg-size()</span> in UTF-8 representation, <MadCap:variable name="General.OSE"></MadCap:variable> splits the message at an undefined location (because the conversion between different encodings is not trivial).</p>
        </div>
    </body>
</html>