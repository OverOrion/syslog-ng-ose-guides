<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body name="json-parser-options" oldrole="section">
<h1 name="json-parser-options" xmlns="http://docbook.org/ns/docbook">Options of JSON parsers</h1>
<p oldrole="para">The JSON parser has the following options.</p>

<h6 name="json-parser-extract-prefix" oldrole="simplesect">extract-prefix()</h6>
<MadCap:keyword term="extract-prefix()"></MadCap:keyword>
<MadCap:keyword term="extract_prefix()"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Synopsis: 

                            </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">extract-prefix()</td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Extract only the specified subtree from the JSON message. Use the dot-notation to specify the subtree. The rest of the message will be ignored. For example, assuming that the incoming object is named <span class="Code" oldrole="userinput">msg</span>, the <span class="Code" oldrole="userinput">json-parser(extract-prefix("foo.bar[5]"));</span> parser is equivalent to the <span class="Code" oldrole="userinput">msg.foo.bar[5]</span> javascript code. Note that the resulting expression must be a JSON object in order to extract its members into name-value pairs.</p>
<p oldrole="para">This feature also works when the top-level object is an array, because you can use an array index at the first indirection level, for example: <span class="Code" oldrole="userinput">json-parser(extract-prefix("[5]"))</span>, which is equivalent to <span class="Code" oldrole="userinput">msg[5]</span>.</p>
<p oldrole="para">In addition to alphanumeric characters, the key of the JSON object can contain the following characters: <span class="Code" oldrole="userinput">!"#$%&amp;'()*+,-/:;&lt;=&gt;?@\^_`{|}~</span></p>
<p oldrole="para">It cannot contain the following characters: <span class="Code" oldrole="userinput">.[]</span></p>
<div class="Example">
<h6 oldrole="example">Example: Convert logstash eventlog format v0 to v1</h6>
<p oldrole="para">The following parser converts messages in the logstash eventlog v0 format to the v1 format.</p>
<pre class="Code" oldrole="synopsis">parser p_jsoneventv0 {
  channel {
    parser { json-parser(extract-prefix("@fields")); };
    parser { json-parser(prefix(".json.")); };
    rewrite {
      set("1" value("@version"));
      set("${.json.@timestamp}" value("@timestamp"));
      set("${.json.@message}" value("message"));
    };
  };
};</pre>
</div>


<h6 name="json-parser-marker" oldrole="simplesect">marker</h6>
<MadCap:keyword term="marker"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Synopsis: 

                            </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">marker()</td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Use a marker in case of mixed log messages, to identify JSON encoded messages for the parser.</p>
<p oldrole="para">Some logging implementations require a marker to be set before the JSON payload. The JSON parser is able to find these markers and parse the message only if it is present.</p>
<div class="Example">
<h6 oldrole="example">Example: Using the marker option in JSON parser</h6>
<p oldrole="para">This json parser parses log messages which use the "@cee:" marker in front of the json payload. It inserts "<span class="Code" oldrole="userinput">.cee.</span>" in front of the name of name-value pairs, so later on it is easier to find name-value pairs that were parsed using this parser. (For details on selecting name-value pairs, see <MadCap:xref href="concepts-value-pairs.htm#options-value-pairs"></MadCap:xref>.)</p>
<pre class="Code" oldrole="synopsis">parser {
        json-parser(
            marker("@cee:")
            prefix(".cee.")
        );
    };</pre>
</div>


<MadCap:snippetBlock src="../../shared/chunk/option-parser-prefix.htm"></MadCap:snippetBlock>
<MadCap:snippetBlock src="../../shared/chunk/para-macro-prefix-parser.htm"></MadCap:snippetBlock>


<MadCap:snippetBlock src="../../shared/chunk/option-parser-template.htm"></MadCap:snippetBlock>

</body></html>
