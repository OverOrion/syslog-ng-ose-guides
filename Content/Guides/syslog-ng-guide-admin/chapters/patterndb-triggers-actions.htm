<?xml version="1.0" encoding="utf-8"?>


<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="patterndb-triggers-actions">
        <h1 name="patterndb-triggers-actions">Triggering actions for identified messages</h1>
        <MadCap:keyword term="alerting">
        </MadCap:keyword>
        <MadCap:keyword term="actions">
        </MadCap:keyword>
        <MadCap:keyword term="secondary messages">
        </MadCap:keyword>
        <MadCap:keyword term="generating alerts">
        </MadCap:keyword>
        <MadCap:keyword term="triggers">
        </MadCap:keyword>
        <MadCap:keyword term="triggered messages">
        </MadCap:keyword>
        <MadCap:keyword term="message triggers">
        </MadCap:keyword>
        <p>The <MadCap:variable name="General.OSE"></MadCap:variable> application can generate (trigger) messages automatically if certain events occur, for example, a specific log message is received, or the correlation timeout of a message expires. Basically, you can define messages for every pattern database rule that are emitted when a message matching the rule is received. Triggering messages is often used together with message correlation, but can also be used separately. When used together with message correlation, you can also create a new correlation context when a new message is received.</p>
        <MadCap:keyword term="inject-mode">
        </MadCap:keyword>
        <p>The generated message is injected into the same place where the <span class="Code" oldrole="parameter">db-parser()</span> statement is referenced in the log path. To post the generated message into the <span class="Code" oldrole="parameter">internal()</span> source instead, use the <span class="Code" oldrole="parameter">inject-mode()</span> option in the definition of the parser.</p>
        <div class="Example">
            <h6>Example: Sending triggered messages to the internal() source</h6>
            <p>To send the generated messages to the <span class="Code" oldrole="parameter">internal</span> source, use the <span class="Code" oldrole="userinput">inject-mode(internal)</span> option:</p><pre>parser p_db {
    db-parser(
        file("mypatterndbfile.xml")
        inject-mode(internal)
    );
};</pre>
            <p>To inject the generated messages where the pattern database is referenced, use the <span class="Code" oldrole="userinput">inject-mode(pass-through)</span> option:</p><pre>parser p_db {
    db-parser(
        file("mypatterndbfile.xml")
        inject-mode(pass-through)
    );
};</pre>
        </div>
        <p>The generated message must be configured in the pattern database rule. It is possible to create an entire message, use macros and values extracted from the original message with pattern database, and so on.</p>
        <MadCap:snippetBlock src="../../shared/chunk/example-patterndb-actions.htm">
        </MadCap:snippetBlock>
        <div class="Example">
            <h6>Example: Creating a new context from an action</h6>
            <p>In <MadCap:variable name="General.OSE"></MadCap:variable> version <MadCap:conditionaltext MadCap:conditions="General.ose">3.8</MadCap:conditionaltext><MadCap:conditionaltext MadCap:conditions="General.pe">7</MadCap:conditionaltext> and newer, you can create a new context as an action. For details, see <MadCap:xref href="patterndb-scheme-create-context.htm"><span style="color: #04aada;" class="mcFormatColor">Element: create-context</span></MadCap:xref>.</p>
            <MadCap:snippetBlock src="../../shared/chunk/example-create-context-action.htm">
            </MadCap:snippetBlock>
        </div>
        <p>For details on configuring actions, see the description of the <a href="">pattern database format</a>.</p>
    </body>
</html>