<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="configuring-destinations-hdfs">
        <h1 name="configuring-destinations-hdfs"><span class="Code" oldrole="parameter">hdfs</span>: Storing messages on the Hadoop Distributed File System (HDFS)</h1>
        <MadCap:keyword term="destination drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;java()&lt;/span&gt;, ' driver']">
        </MadCap:keyword>
        <MadCap:keyword term="destination drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;hdfs&lt;/span&gt;]">
        </MadCap:keyword>
        <p>Starting with version <MadCap:conditionaltext MadCap:conditions="General.pe">5.3</MadCap:conditionaltext><MadCap:conditionaltext MadCap:conditions="General.ose">3.7</MadCap:conditionaltext>, <MadCap:variable name="General.OSE"></MadCap:variable> can send plain-text log files to the <a href="http://hadoop.apache.org/">Hadoop Distributed File System (HDFS)</a>, allowing you to store your log data on a distributed, scalable file system. This is especially useful if you have huge amounts of log messages that would be difficult to store otherwise, or if you want to process your messages using Hadoop tools (for example, Apache Pig).</p>
        <p>For more information about the benefits of using syslog-ng as a data collection, processing, and filtering tool in a Hadoop environment, see the blog post <a href="https://syslog-ng.com/blog/filling-your-data-lake-with-log-messages-the-syslog-ng-hadoop-hdfs-destination/">Filling your data lake with log messages: the syslog-ng Hadoop (HDFS) destination</a>.</p>
        <p>Note the following limitations when using the <MadCap:variable name="General.OSE"></MadCap:variable> <span class="Code" oldrole="parameter">hdfs</span> destination:</p>
        <ul>
            <MadCap:snippetBlock src="../../shared/chunk/listitem-java-supported-platforms.htm">
            </MadCap:snippetBlock>
            <li>
                <p>Since <MadCap:variable name="General.OSE"></MadCap:variable> uses the official Java HDFS client, the <span class="Code" oldrole="parameter">hdfs</span> destination has significant memory usage (about 400MB).</p>
            </li>
            <li>
                <MadCap:snippetBlock src="../../shared/chunk/para-hdfs-flush.htm">
                </MadCap:snippetBlock>
            </li>
            <MadCap:snippetBlock src="../../shared/chunk/listitem-java-internal-messages.htm">
            </MadCap:snippetBlock>
        </ul>
        <div>
            <h6>Declaration:</h6><pre>
@include "scl.conf"

hdfs(
    client-lib-dir("/opt/syslog-ng/lib/syslog-ng/java-modules/:&lt;path-to-preinstalled-hadoop-libraries&gt;")
    hdfs-uri("hdfs://NameNode:8020")
    hdfs-file("&lt;path-to-logfile&gt;")
);</pre>
        </div>
        <div class="Example">
            <h6 name="example-destination-hdfs"><a name="example-destination-hdfs"></a>Example: Storing logfiles on HDFS</h6>
            <p>The following example defines an <span class="Code" oldrole="parameter">hdfs</span> destination using only the required parameters.</p><pre>
@include "scl.conf"

destination d_hdfs {
    hdfs(
        client-lib-dir("/opt/syslog-ng/lib/syslog-ng/java-modules/:/opt/hadoop/libs")
        hdfs-uri("hdfs://10.140.32.80:8020")
        hdfs-file("/user/log/logfile.txt")
    );
};
</pre>
        </div>
        <ul>
            <li>
                <p>To install the software required for the <span class="Code" oldrole="parameter">hdfs</span> destination, see <MadCap:xref href="destination-hdfs-prerequisites.htm"><span style="color: #04aada;" class="mcFormatColor">Prerequisites</span></MadCap:xref>.</p>
            </li>
            <li>
                <p>For details on how the <span class="Code" oldrole="parameter">hdfs</span> destination works, see <MadCap:xref href="destination-hdfs-interaction.htm"><span style="color: #04aada;" class="mcFormatColor">How [%=General.OSE%] interacts with HDFS</span></MadCap:xref>.</p>
            </li>
            <li>
                <p>For details on using MapR-FS, see <MadCap:xref href="destination-hdfs-maprfs.htm"><span style="color: #04aada;" class="mcFormatColor">Storing messages with MapR-FS</span></MadCap:xref>.</p>
            </li>
            <li>
                <p>For details on using Kerberos authentication, see <MadCap:xref href="destination-hdfs-kerberos-authentication.htm"><span style="color: #04aada;" class="mcFormatColor">Kerberos authentication with syslog-ng hdfs() destination</span></MadCap:xref>.</p>
            </li>
            <li>
                <p>For the list of options, see <MadCap:xref href="reference-destination-hdfs.htm"><span style="color: #04aada;" class="mcFormatColor">HDFS destination options</span></MadCap:xref>.</p>
            </li>
        </ul>
        <p condition="ose" MadCap:conditions="General.ose">The <span class="Code" oldrole="parameter">hdfs()</span> driver is actually a reusable configuration snippet configured to receive log messages using the Java language-binding of <MadCap:variable name="General.OSE"></MadCap:variable>. For details on using or writing such configuration snippets, see <MadCap:xref href="config-blocks.htm"><span style="color: #04aada;" class="mcFormatColor">Reusing configuration blocks</span></MadCap:xref>. You can find the source of the hdfs configuration snippet on <a href="https://github.com/syslog-ng/syslog-ng/blob/master/scl/hdfs/plugin.conf">GitHub</a>. For details on extending <MadCap:variable name="General.OSE"></MadCap:variable> in Java, see the <a href="https://syslog-ng.gitbooks.io/getting-started/content/chapters/chapter_5/section_2.html">Getting started with syslog-ng development</a> guide.</p>
        <MadCap:snippetBlock src="../../shared/wnt/note-jvm-reload.htm">
        </MadCap:snippetBlock>
    </body>
</html>