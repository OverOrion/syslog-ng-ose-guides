<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.OSE">
    <head>
        <meta name="description" content="" />
    </head>
    <body>
        <h1 name="list-configuration-options"><a name="list-configuration-options"></a>Listing configuration options</h1>
        <p>Starting with <MadCap:variable name="General.OSE"></MadCap:variable> <MadCap:conditionaltext MadCap:conditions="General.OSE">3.25</MadCap:conditionaltext>, you can use the <span class="Code">syslog-ng-cfg-db.py</span> utility to list the available options of configuration objects. For example, you can list all the options that can be set in the file source, and so on.</p>
		<p>The <span class="Code">syslog-ng-cfg-db.py</span> utility has the following options:</p>
		<ul>
        <li>The following command lists the contexts that the utility supports. <pre>syslog-ng-cfg-db.py</pre>
        <div class="Note">
            <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> Currently, sources and destinations are supported.</p>
        </div>
</li>
        <li>The following command lists the available drivers of a context:<pre>syslog-ng-cfg-db.py -c &lt;source|destination&gt;</pre>
</li>
        <li>The following command lists the available options of a specific driver and specifies the context and the driver:<pre>syslog-ng-cfg-db.py -c &lt;source|destination&gt; -d &lt;driver&gt;</pre>
        <p>For example, to list the options of the <span class="Code">kafka-c()</span> destination driver:</p><pre>syslog-ng-cfg-db.py -c destination -d kafka-c</pre>
				
        <p>The output includes the available options of the driver in alphabetical order, and the type of the option. For example:</p><pre>destination kafka-c(
    bootstrap-servers/kafka-bootstrap-servers(&lt;string&gt;)
    client-lib-dir(&lt;string&gt;)
    config/option()
    config/option(&lt;string&gt; &lt;arrow&gt; &lt;string-or-number&gt;)
    config/option(&lt;string&gt; &lt;string-or-number&gt;)
    flush-timeout-on-reload(&lt;number&gt;)
    flush-timeout-on-shutdown(&lt;number&gt;)
    frac-digits(&lt;number&gt;)
    key(&lt;string&gt;)
    local-time-zone/time-zone(&lt;string&gt;)
    log-fifo-size(&lt;number&gt;)
    message/template(&lt;string&gt;)
    on-error(&lt;string&gt;)
    persist-name(&lt;string&gt;)
    poll-timeout(&lt;number&gt;)
    properties-file(&lt;path&gt;)
    send-time-zone(&lt;string&gt;)
    sync-send(&lt;yesno&gt;)
    throttle(&lt;number&gt;)
    time-zone(&lt;string&gt;)
    topic(&lt;string&gt;)
    ts-format(&lt;string&gt;)
    workers(&lt;number&gt;)
    config/option(
        &lt;string&gt;(&lt;string-or-number&gt;)
    )
    key(
        &lt;identifier&gt;(&lt;string&gt;)
    )
    message/template(
        &lt;identifier&gt;(&lt;string&gt;)
    )
)</pre>
        <div class="Note">
            <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> The script caches the list of the options, so if you want to rebuild the database, you have to use the <span class="Code">-r</span> option.</p>
        </div></li>
			</ul>
    </body>
</html>