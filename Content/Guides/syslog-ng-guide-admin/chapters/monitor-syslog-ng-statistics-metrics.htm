<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <body name="monitor-syslog-ng-statistics-metrics" oldrole="section">
        <h1 name="monitor-syslog-ng-statistics-metrics">The <span class="Code" oldrole="parameter">monitoring()</span> source</h1>
        <p oldrole="para">The <span class="Code" oldrole="parameter">monitoring()</span> source allows you to select which statistics of <MadCap:variable name="General.abbrev"></MadCap:variable> you want to monitor. In addition, the statistics are available as structured name-value pairs, so you can format the output similarly to other log messages. That way, you can easily convert the statistics and metrics, for example, into JSON or WELF format. That way, you can send the statistics of your log messages into a monitoring solution<MadCap:conditionaltext MadCap:conditions="syslogngPE.ose">, for example, into Riemann, Redis, or Graphite</MadCap:conditionaltext>.</p>
        <p oldrole="para">The <span class="Code" oldrole="parameter">monitoring()</span> source queries the statistics (counters) that <MadCap:variable name="General.abbrev"></MadCap:variable> collects, formats them, and optionally resets the counters. The <span class="Code" oldrole="parameter">monitoring()</span> source emits only these messages, making it easy to route them to their appropriate destination. The <a href="reference-options.htm"><span class="Code" oldrole="parameter">stats-level()</span> global option</a> determines exactly which statistics <MadCap:variable name="General.abbrev"></MadCap:variable> collects.</p>
        <h6 oldrole="formalpara">Declaration:</h6><pre class="Code" oldrole="synopsis">source s_monitor{
    monitoring(
        query("*")
    );};</pre>
        <div class="Example">
            <h6 name="example-source-monitor-json" oldrole="example">Example: Save all statistics into a file in JSON format</h6>
            <p oldrole="para">The following configuration increases the <span class="Code" oldrole="parameter">stats-level()</span> option to 3, and generates a JSON-formatted message every 10 seconds. The generated message contains every available statistics, and is saved into the <span class="Code" oldrole="filename">/var/log/syslog-ng-statistics.log</span> file.</p><pre class="Code" oldrole="synopsis">@version: <MadCap:variable name="syslogngPEVariables.Version"></MadCap:variable>
options{
    stats-level(3);
    keep-hostname(no);
};
source s_monitor{ monitoring(
    query("*")
    freq(10)
    message-template('$(format-json --scope nv_pairs)')
    );};
destination d_file {
    file("/var/log/syslog-ng-statistics.log");
};
log {
    source(s_monitor);
    destination(d_file);
};</pre>
            <p oldrole="para">The generated message is similar to this one:</p><pre class="Code" oldrole="synopsis">[2017-04-03T14:00:31.786133] Outgoing message; message='Apr&#160; 3 14:00:31 example-hostname syslog-ng[12281]: {"src":{"severity":{"7":{"processed":"0"},"6":{"processed":"0"},"5":{"processed":"0"},"4":{"processed":"0"},"3":{"processed":"0"},"2":{"processed":"0"},"1":{"processed":"0"},"0":{"processed":"0"}},"monitoring":{"s_monitor#0":{"stamp":"0","processed":"0"}},"facility":{"other":{"processed":"0"},"9":{"processed":"0"},"8":{"processed":"0"},"7":{"processed":"0"},"6":{"processed":"0"},"5":{"processed":"0"},"4":{"processed":"0"},"3":{"processed":"0"},"23":{"processed":"0"},"22":{"processed":"0"},"21":{"processed":"0"},"20":{"processed":"0"},"2":{"processed":"0"},"19":{"processed":"0"},"18":{"processed":"0"},"17":{"processed":"0"},"16":{"processed":"0"},"15":{"processed":"0"},"14":{"processed":"0"},"13":{"processed":"0"},"12":{"processed":"0"},"11":{"processed":"0"},"10":{"processed":"0"},"1":{"processed":"0"},"0":{"processed":"0"}}},"source":{"s_monitor":{"processed":"0"}},"global":{"sdata_updates":{"processed":"0"},"payload_reallocs":{"processed":"2"},"msg_clones":{"processed":"0"}},"destination":{"d_file":{"processed":"0"}},"center":{"received":{"processed":"0"},"queued":{"processed":"0"}},"PROGRAM":"syslog-ng","PID":"12281"}\x0a'</pre>
            <p oldrole="para">For reference, the JSON part in a readable format is:</p><pre class="Code" oldrole="synopsis">{
  "center" : {
      "queued" : { "processed" : "0" },
      "received" : { "processed" : "0" }
    },
  "destination" : { "d_file" : { "processed" : "0" } },
  "global" : {
      "msg_clones" : { "processed" : "0" },
      "payload_reallocs" : { "processed" : "2" },
      "sdata_updates" : { "processed" : "0" }
    },
  "PID" : "12281",
  "PROGRAM" : "syslog-ng",
  "source" : { "s_monitor" : { "processed" : "0" } },
  "src" : {
      "facility" : {
          "0" : { "processed" : "0" },
          "1" : { "processed" : "0" },
          "2" : { "processed" : "0" },
          "3" : { "processed" : "0" },
          "4" : { "processed" : "0" },
          "5" : { "processed" : "0" },
          "6" : { "processed" : "0" },
          "7" : { "processed" : "0" },
          "8" : { "processed" : "0" },
          "9" : { "processed" : "0" },
          "10" : { "processed" : "0" },
          "11" : { "processed" : "0" },
          "12" : { "processed" : "0" },
          "13" : { "processed" : "0" },
          "14" : { "processed" : "0" },
          "15" : { "processed" : "0" },
          "16" : { "processed" : "0" },
          "17" : { "processed" : "0" },
          "18" : { "processed" : "0" },
          "19" : { "processed" : "0" },
          "20" : { "processed" : "0" },
          "21" : { "processed" : "0" },
          "22" : { "processed" : "0" },
          "23" : { "processed" : "0" },
          "other" : { "processed" : "0" }
        },
      "monitoring" : { "s_monitor#0" : {
              "processed" : "0",
              "stamp" : "0"
            } },
      "severity" : {
          "0" : { "processed" : "0" },
          "1" : { "processed" : "0" },
          "2" : { "processed" : "0" },
          "3" : { "processed" : "0" },
          "4" : { "processed" : "0" },
          "5" : { "processed" : "0" },
          "6" : { "processed" : "0" },
          "7" : { "processed" : "0" }
        }
    }
}</pre>
        </div>
    </body>
</html>