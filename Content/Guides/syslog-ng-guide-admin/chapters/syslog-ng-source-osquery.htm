<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body name="syslog-ng-source-osquery" oldrole="section">
<h1 name="syslog-ng-source-osquery"><span class="Code" oldrole="parameter">osquery</span>: Collect and parse osquery result logs</h1>
<MadCap:keyword term="source drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;osquery()&lt;/span&gt;, ' driver']"></MadCap:keyword>
<MadCap:keyword term="osquery"></MadCap:keyword>
<MadCap:keyword term="monitoring"></MadCap:keyword>
<p oldrole="para">The <a href="https://osquery.io">osquery</a> application allows you to ask questions about your machine using an SQL-like language. For example, you can query running processes, logged in users, installed packages and syslog messages as well. You can make queries on demand, and also schedule them to run regularly.</p>
<p oldrole="para">The <span class="Code" oldrole="parameter">osquery()</span> source of &abbrev; allows you read the results of periodical osquery queries (from the <span class="Code" oldrole="filename">/var/log/osquery/osqueryd.results.log</span> file) and automatically parse the messages (if you want to use &abbrev; to <a href="https://syslog-ng.com/blog/endpoint-visibility-and-monitoring-using-osquery-and-syslog-ng/">send log messages to osquery, read this blogpost</a>). For example, you can:</p>
<ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para">Create filters from the fields of the messages.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">Limit which fields to store, or create additional fields (combine multiple fields into one filed, and so on).</p>
</li>
<li oldrole="listitem">
<p oldrole="para">Send the messages to a central location, for example, to Elasticsearch, directly from &abbrev;.</p>
</li>
</ul>
<p oldrole="para">The &abbrev; application automatically adds the <span class="Code" oldrole="parameter">.osquery.</span> prefix to the name of the fields the extracted from the message.</p>
<p oldrole="para">The <span class="Code" oldrole="parameter">osquery()</span> source is available in &abbrev; version <MadCap:conditionaltext MadCap:conditions="ose">3.10</MadCap:conditionaltext><MadCap:conditionaltext MadCap:conditions="pe">7.0.4</MadCap:conditionaltext> and later.</p>
<h6 oldrole="formalpara">Prerequisites:</h6>

<ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para">To use the <span class="Code" oldrole="parameter">osquery()</span> driver, the <span class="Code" oldrole="filename">scl.conf</span> file must be included in your &abbrev; configuration:</p>
<pre class="Code" oldrole="synopsis">@include "scl.conf"</pre>
</li>
<li condition="ose" oldrole="listitem">
<p oldrole="para">&abbrev; must be compiled with JSON-support enabled.</p>
</li>
</ul>
<p oldrole="para">The <span class="Code" oldrole="parameter">osquery()</span> driver is actually a reusable configuration snippet configured to read the osquery log file using the <span class="Code" oldrole="parameter">file()</span> driver, and process its JSON contents. For details on using or writing such configuration snippets, see <MadCap:xref href="config-blocks.htm#config-blocks"></MadCap:xref>. You can find the source of this configuration snippet on <a href="https://github.com/balabit/syslog-ng/blob/master/scl/osquery/plugin.conf">GitHub</a>.</p>
<div class="Example">
<h6 name="example-source-osquery" oldrole="example">Example: Using the osquery() driver with the default settings</h6>
<p oldrole="para">The following &abbrev; configuration sample uses the default settings of the driver, reading osquery result logs from the <span class="Code" oldrole="filename">/var/log/osquery/osqueryd.results.log</span> file, and writes the log messages generated from the traps into a file.</p>
<pre class="Code" oldrole="synopsis">@version: 7.0.4
@include "scl.conf"
source s_osquery {
    osquery();
};
log {
    source(s_osquery);
    destination {
        file("/var/log/example.log");
    };
};</pre>
<p oldrole="para">Filter for messages related to loading Linux kernel modules:</p>
<pre class="Code" oldrole="synopsis">@version: 7.0.4
@include "scl.conf"
source s_osquery {
    osquery();
};
log {
    source(s_osquery);
    filter f_modules {
        "${.osquery.name}" eq "pack_incident-response_kernel_modules"
    };
    destination {
        file("/var/log/example.log");
    };
};</pre>
</div>
<div class="Example">
<h6 oldrole="example">Example: Using the osquery() driver with custom configuration</h6>
<p oldrole="para">The following &abbrev; configuration sample reads osquery result logs from the <span class="Code" oldrole="filename">/tmp/osquery_input.log</span> file, and writes the log messages generated from the traps into a file. Using the <span class="Code" oldrole="parameter">format-json</span> template, the outgoing message will be a well-formed JSON message.</p>
<h6 oldrole="formalpara">Input message:</h6>

<pre class="Code" oldrole="synopsis">{"name":"pack_osquery-monitoring_osquery_info","hostIdentifier":"testhost","calendarTime":"Fri Jul 21 10:04:41 2017 UTC","unixTime":"1500631481","decorations":{"host_uuid":"4C4C4544-004D-3610-8043-C2C04F4D3332","username":"myuser"},"columns":{"build_distro":"xenial","build_platform":"ubuntu","config_hash":"43cd1c6a7d0c283e21e026a53e619b2e582e94ee","config_valid":"1","counter":"4","extensions":"active","instance_id":"d0c3eb0d-f8e0-4bea-868b-18a2c61b438d","pid":"19764","resident_size":"26416000","start_time":"1500629552","system_time":"223","user_time":"476","uuid":"4C4C4544-004D-3610-8043-C2C04F4D3332","version":"2.5.0","watcher":"19762"},"action":"added"}
</pre>
<h6 oldrole="formalpara">&abbrev; configuration:</h6>

<pre class="Code" oldrole="synopsis">@version: 3.10
@include "scl.conf"
source s_osquery {
    osquery(
      file(/tmp/osquery_input.log)
      prefix(.osquery.)
    );
};
destination d_file {
    file(
      "/tmp/output.txt"
      template("$(format_json --key .osquery.*)\n")
    );
};
log {
  source(s_osquery);
  destination(d_file);
  flags(flow-control);
};</pre>
<h6 oldrole="formalpara">Outgoing message:</h6>

<pre class="Code" oldrole="synopsis">Outgoing message; message='{"_osquery":{"unixTime":"1500631481","name":"pack_osquery-monitoring_osquery_info","hostIdentifier":"testhost","decorations":{"username":"myuser","host_uuid":"4C4C4544-004D-3610-8043-C2C04F4D3332"},"columns":{"watcher":"19762","version":"2.5.0","uuid":"4C4C4544-004D-3610-8043-C2C04F4D3332","user_time":"476","system_time":"223","start_time":"1500629552","resident_size":"26416000","pid":"19764","instance_id":"d0c3eb0d-f8e0-4bea-868b-18a2c61b438d","extensions":"active","counter":"4","config_valid":"1","config_hash":"43cd1c6a7d0c283e21e026a53e619b2e582e94ee","build_platform":"ubuntu","build_distro":"xenial"},"calendarTime":"Fri Jul 21 10:04:41 2017 UTC","action":"added"}}\x0a'
</pre>
</div>
<p oldrole="para">To configure a destination to send the log messages to Elasticsearch, see <MadCap:xref href="configuring-destinations-elasticsearch2.htm#configuring-destinations-elasticsearch2"></MadCap:xref>. For other destinations, see <MadCap:xref href="chapter-destinations.htm#chapter-destinations"></MadCap:xref>.</p>
</body></html>
