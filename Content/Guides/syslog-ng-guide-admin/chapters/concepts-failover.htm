<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- FIXME jumplist -->
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body condition="pe" name="concepts-failover" oldrole="section">
<h1 condition="pe" name="concepts-failover">Client-side failover</h1>
<MadCap:keyword term="secondary servers"></MadCap:keyword>
<MadCap:keyword term="failover servers"></MadCap:keyword>
<MadCap:keyword term="fail-over servers"></MadCap:keyword>
<MadCap:keyword term="tcp failover"></MadCap:keyword>
<MadCap:keyword term="fail-over"></MadCap:keyword>
<MadCap:keyword term="client-side failover"></MadCap:keyword>
<MadCap:keyword term="FailoverSyslogServer"></MadCap:keyword>
<p oldrole="para">&abbrev; can detect if the remote server of a network destination becomes unaccessible, and start sending messages to a secondary server. Multiple failover servers can be configured, so if the secondary server becomes unaccessible as well, &abbrev; will switch to the third server in the list, and so on. If there are no more failover servers left, &abbrev; returns to the beginning of a list and attempts to connect to the primary server.</p>
<p oldrole="para">When &abbrev; starts up, it will always try to connect to the primary server first, but once it fails over to a secondary server, it will not automatically attempt to return to the primary server even if it becomes available. If &abbrev; is restarted, it will attempt to connect the primary server. Reloading the configuration of &abbrev; will not cause &abbrev; to return to the primary server, unless the configuration of the destination has changed.</p>
<p oldrole="para">If &abbrev; uses TLS-encryption to communicate with the remote server, &abbrev; checks the certificate of the failover server as well. The certificates of the failover servers should match their domain names or IP addresses &mdash; for details, see <MadCap:xref href="tls-serverauth.htm#tls-serverauth"></MadCap:xref>. Note that when mutual authentication is used, the &abbrev; client sends the same certificate to every server.</p>
<p oldrole="para">The primary server and the failover servers must be accessible with the same communication method: it is not possible to use different destination drivers or options for the different servers.</p>
<table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');"><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2"></col><tbody><tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1"><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1"><p><img src="../../../Resources/Images/Common/note.png"/></p></td><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span><p oldrole="para">Client-side failover works only for TCP-based connections (including TLS-encrypted connections), that is, the <span class="Code" oldrole="parameter">syslog()</span> and <span class="Code" oldrole="parameter">network()</span> destination drivers (excluding UDP transport).</p><p oldrole="para">Client-side failover is not supported in the <span class="Code" oldrole="parameter">sql()</span> driver, even though it may use a TCP connection to access a remote database.</p></td></tr></tbody></table>
<p oldrole="para">For details on configuring failover servers, see <MadCap:xref href="destination-network.htm#reference-destination-network-chapter"></MadCap:xref> and <MadCap:xref href="destination-syslog.htm#reference-destination-syslog-chapter"></MadCap:xref>.</p>
</body></html>
