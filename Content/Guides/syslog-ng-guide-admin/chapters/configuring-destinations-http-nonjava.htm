<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
    </head>
    <body name="configuring-destinations-http-nonjava" oldrole="section">
        <h1 name="configuring-destinations-http-nonjava"><a name="configuring-destinations-http-nonjava"></a><span class="Code" oldrole="parameter">http</span>: Posting messages over HTTP<MadCap:conditionaltext MadCap:conditions="General.ose"> without Java</MadCap:conditionaltext></h1>
        <MadCap:keyword term="destination drivers:['http()']">
        </MadCap:keyword>
        <MadCap:keyword term="destination drivers:['http']">
        </MadCap:keyword>
        <p oldrole="para">Version <MadCap:conditionaltext MadCap:conditions="General.ose">3.8</MadCap:conditionaltext><MadCap:conditionaltext MadCap:conditions="General.pe">7.0.4</MadCap:conditionaltext> of <MadCap:variable name="General.abbrev"></MadCap:variable> can directly post log messages to web services using the HTTP protocol<MadCap:conditionaltext MadCap:conditions="General.ose">, without having to use Java</MadCap:conditionaltext>. The current implementation has the following limitations:</p>
        <ul oldrole="itemizedlist">
            <li oldrole="listitem">
                <p oldrole="para">Only the PUT and the POST methods are supported.</p>
            </li>
        </ul>
        <p oldrole="para">HTTPS connection, as well as password- and certificate-based authentication is supported.</p>
        <p oldrole="para">If the server returns a status code beginning with 4 (for example, 404) to the POST or PUT request, <MadCap:variable name="General.abbrev"></MadCap:variable> drops the message without trying to resend it.</p>
        <div class="Example">
            <h6 oldrole="example">Example: Client certificate authentication with HTTPS</h6><pre class="Code" oldrole="synopsis">destination d_https {
    http(
        [...]
        tls(
            ca-file("/&lt;path-to-certificate-directory&gt;/ca-crt.pem")
            ca-dir("/&lt;path-to-certificate-directory&gt;/")
            cert-file("/&lt;path-to-certificate-directory&gt;/server-crt.pem")
            key-file("/&lt;path-to-certificate-directory&gt;/server-key.pem")
            )
        [...]
    );
};</pre>
        </div>
        <div><h6 oldrole="formalpara">Declaration:</h6>
        <!--
    FIXME remove options that have usable defaults
--><pre class="Code" oldrole="synopsis">destination d_http {
    http(
        url("&lt;web-service-IP-or-hostname&gt;")
        method("&lt;HTTP-method&gt;")
        user-agent("&lt;USER-AGENT-message-value&gt;")
        user("&lt;username&gt;")
        password("&lt;password&gt;")
    );
};</pre></div>
        <div class="Example">
            <h6 name="example-destination-http-nonjava" oldrole="example"><a name="example-destination-http-nonjava"></a>Example: Sending log data to a web service</h6>
            <p oldrole="para">The following example defines an <span class="Code" oldrole="parameter">http</span> destination.</p><pre class="Code" oldrole="synopsis">destination d_http {
    http(
        url("http://127.0.0.1:8000")
        method("PUT")
        user-agent("syslog-ng User Agent")
        user("user")
        password("password")
        headers("HEADER1: header1", "HEADER2: header2")
        body("${ISODATE} ${MESSAGE}")
    );
};

log {
    source(s_file);
    destination(d_http);
    flags(flow-control);
};
</pre>
        </div>
        <p oldrole="para" MadCap:condition="General.ose">You can also use the http() destination to <a href="syslog-ng-with-splunk.htm">forward log messages to Splunk using <MadCap:variable name="General.abbrev"></MadCap:variable></a>.</p>
    </body>
</html>
