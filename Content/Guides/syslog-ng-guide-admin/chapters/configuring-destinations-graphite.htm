<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body condition="ose" name="configuring-destinations-graphite" oldrole="section">
<h1 condition="ose" name="configuring-destinations-graphite"><span class="Code" oldrole="parameter">graphite</span>: Sending metrics to Graphite</h1>
<MadCap:keyword term="destination drivers:['graphite()']"></MadCap:keyword>
<p oldrole="para">The <span class="Code" oldrole="parameter">graphite()</span> destination can send metrics to a <a href="http://graphite.readthedocs.io/en/latest/index.html">Graphite</a> server to store numeric time-series data. There are many ways to feed the Graphite template function with name value pairs. The <MadCap:variable name="General.abbrev"></MadCap:variable> CSV and PatternDB parsers (for details, see <MadCap:xref href="../../shared/syslog-ng-patterndb-using-parsers.htm#syslog-ng-patterndb-using-parsers"></MadCap:xref>) can parse log messages and generate name value pairs based on message content. The CSV parser (for details, see <MadCap:xref href="parser-csv.htm#csv-parser"></MadCap:xref>) can be used for logs which have a constant field based structure, like the Apache web server access logs. The patterndb parser can parse information and can extract important fields from free form log messages, as long as patterns describing the log messages are available. Another way is to send JSON-based log messages (for details, see <MadCap:xref href="json-parser.htm#json-parser"></MadCap:xref>) to <MadCap:variable name="General.abbrev"></MadCap:variable>, like running a simple shell script collecting metrics and running it from cron regularly.</p>
<h6 oldrole="formalpara">Declaration:</h6>

<pre class="Code" oldrole="synopsis">graphite(payload());</pre>
<div class="Example">
<h6 name="example-destination-graphite" oldrole="example">Example: Using the graphite() driver</h6>
<p oldrole="para">To use the graphite() destination, the only mandatory parameter is payload, which specifies the value pairs to send to graphite. In the following example any value pairs starting with "monitor." are forwarded to graphite.</p>
<pre class="Code" oldrole="synopsis">destination d_graphite { graphite(payload("--key monitor.*")); };</pre>
</div>
<table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');"><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2"></col><tbody><tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1"><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1"><p><img src="../../../Resources/Images/Common/note.png"/></p></td><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span><p oldrole="para">The <span class="Code" oldrole="parameter">graphite()</span> destination is only a wrapper around the <span class="Code" oldrole="parameter">network()</span> destination and the <span class="Code" oldrole="parameter">graphite-output</span> template function. If you want to fine-tune the TCP parameters, use the <span class="Code" oldrole="parameter">network()</span> destination instead, as described in <MadCap:xref href="reference-template-functions.htm#template-function-graphite"></MadCap:xref>.</p></td></tr></tbody></table>
</body></html>
