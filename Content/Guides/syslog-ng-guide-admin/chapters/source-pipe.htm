<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.ose">
    <head>
        <meta name="description" content="" />
    </head>
    <body condition="ose" name="source-pipe">
        <h1 condition="ose" name="source-pipe">pipe: Collecting messages from named pipes</h1>
        <MadCap:keyword term="source drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;pipe()&lt;/span&gt;, ' driver']">
        </MadCap:keyword>
        <p>The pipe driver opens a named pipe with the specified name and listens for messages. It is used as the native message delivery protocol on HP-UX.</p>
        <p>The pipe driver has a single required parameter, specifying the filename of the pipe to open. For the list of available optional parameters, see <MadCap:xref href="reference-source-pipe.htm"><span style="color: #04aada;" class="mcFormatColor">pipe() source options</span></MadCap:xref>.</p>
        <div>
            <h6>Declaration:</h6><pre>pipe(filename);</pre>
        </div>
		<div class="Note">
			<p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 

			As of syslog-ng Open Source Edition 3.0.2, pipes are created automatically. In earlier versions, you had to create the pipe using the <span class="Code" oldrole="command">mkfifo(1)</span> command.</p>
        </div>
        <p>Pipe is very similar to the <span class="Code" oldrole="parameter">file()</span> driver, but there are a few differences, for example, <span class="Code" oldrole="parameter">pipe()</span> opens its argument in read-write mode, therefore it is not recommended to be used on special files like <span class="Code">/proc/kmsg</span>.</p>
        <table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" style="width: 100%;mc-table-style: url('../../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');">
            <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;">
            </col>
            <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2">
            </col>
            <tbody>
                <tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1">
                    <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1">
                        <p>
                            <img src="../../../Resources/Images/Common/caution.png" />
                        </p>
                    </td>
                    <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1"><span class="Yellow">Caution: </span>
                        <ul>
                            <li>
                                <p>It is not recommended to use <span class="Code" oldrole="parameter">pipe()</span> on anything else than real pipes.</p>
                            </li>
                            <li>
                                <p>By default, <MadCap:variable name="General.OSE"></MadCap:variable> uses the <span class="Code" oldrole="userinput">flags(no-hostname)</span> option for pipes, meaning that <MadCap:variable name="General.OSE"></MadCap:variable> assumes that the log messages received from the pipe do not contain the hostname field. If your messages do contain the hostname field, use <span class="Code" oldrole="userinput">flags(expect-hostname)</span>. For details, see <MadCap:xref href="../../shared/chunk/option-source-flags.htm"><span style="color: #04aada;" class="mcFormatColor">flags()</span></MadCap:xref>.</p>
                            </li>
                        </ul>
                    </td>
                </tr>
            </tbody>
        </table>
        <div class="Example">
            <h6 name="example-source-pipe"><a name="example-source-pipe"></a>Example: Using the pipe() driver</h6><pre>source s_pipe {
    pipe("/dev/pipe" pad-size(2048));
};</pre>
        </div>
    </body>
</html>