<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="reference-regexp-types" oldrole="section">
        <h1 name="reference-regexp-types">Types and options of regular expressions</h1>
        <p>By default, syslog-ng uses PCRE-style regular expressions. To use other expression types, add the <span class="Code" oldrole="parameter">type()</span> option after the regular expression.</p>
        <p>The <MadCap:variable name="General.abbrev"></MadCap:variable> application supports the following expression types:</p>
        <ul oldrole="itemizedlist">
            <li oldrole="listitem">
                <p>
                    <MadCap:xref href="regexp-type-options.htm#reference-regexp-pcre"><span style="color: #04aada;" class="mcFormatColor">Perl Compatible Regular Expressions (pcre)</span>
                    </MadCap:xref>
                </p>
            </li>
            <li oldrole="listitem">
                <p>
                    <MadCap:xref href="regexp-type-options.htm#reference-regexp-string"><span style="color: #04aada;" class="mcFormatColor">Literal string searches (string)</span>
                    </MadCap:xref>
                </p>
            </li>
            <li oldrole="listitem">
                <p>
                    <MadCap:xref href="regexp-type-options.htm#reference-regexp-glob"><span style="color: #04aada;" class="mcFormatColor">Glob patterns without regular expression support (glob)</span>
                    </MadCap:xref>
                </p>
            </li>
        </ul>
        <div>
            <h6 name="reference-regexp-pcre" oldrole="simplesect"><a name="reference-regexp-pcre"></a>pcre</h6>
            <MadCap:keyword term="pcre">
            </MadCap:keyword>
            <MadCap:keyword term="regular expressions:['pcre']">
            </MadCap:keyword>
            <p><i oldrole="emphasis" role="bold" style="font-style: normal;">Description:</i> Use Perl Compatible Regular Expressions (PCRE).<MadCap:conditionaltext MadCap:conditions="General.pe"> Starting with <MadCap:variable name="General.abbrev"></MadCap:variable> version 3.1, PCRE expressions are supported on every platform.</MadCap:conditionaltext> If the <span class="Code" oldrole="parameter">type()</span> parameter is not specified, syslog-ng uses PCRE regular expressions by default.</p>
            <p>PCRE regular expressions have the following flag options:</p>
        </div>
        <div>
            <h6 oldrole="formalpara">global:</h6>
            <MadCap:keyword term="global">
            </MadCap:keyword>
            <p>Usable only in rewrite rules: match for every occurrence of the expression, not only the first one.</p>
        </div>
        <div>
            <h6 oldrole="formalpara">ignore-case:</h6>
            <MadCap:keyword term="ignore-case">
            </MadCap:keyword>
            <p>Disable case-sensitivity.</p>
        </div>
        <div>
            <h6 oldrole="formalpara">store-matches:</h6>
            <MadCap:keyword term="store-matches">
            </MadCap:keyword>
            <p>Store the matches of the regular expression into the <span class="Code" oldrole="userinput">$0, ... $255</span> variables. The <span class="Code" oldrole="userinput">$0</span> stores the entire match, <span class="Code" oldrole="userinput">$1</span> is the first group of the match (parentheses), and so on. Named matches (also called named subpatterns), for example, <span class="Code" oldrole="userinput">(?&lt;name&gt;...)</span>, are stored as well. Matches from the last filter expression can be referenced in regular expressions.</p>
        </div>
        <div>
            <h6 oldrole="formalpara">unicode:</h6>
            <MadCap:keyword term="unicode">
            </MadCap:keyword>
            <p>Use Unicode support for UTF-8 matches: UTF-8 character sequences are handled as single characters.</p>
        </div>
        <div>
            <h6 oldrole="formalpara">utf8:</h6>
            <MadCap:keyword term="utf8">
            </MadCap:keyword>
            <p>An alias for the <span class="Code" oldrole="parameter">unicode</span> flag.</p>
            <div class="Example">
                <h6 name="example-regexp-pcre" oldrole="example"><a name="example-regexp-pcre"></a>Example: Using PCRE regular expressions</h6><pre class="Code" oldrole="synopsis">rewrite r_rewrite_subst {
    subst("a*", "?", value("MESSAGE") flags("utf8" "global"));&#160;&#160;
};</pre>
            </div>
        </div>
        <div>
            <h6 name="reference-regexp-string" oldrole="simplesect"><a name="reference-regexp-string"></a>string</h6>
            <MadCap:keyword term="string">
            </MadCap:keyword>
            <p><i oldrole="emphasis" role="bold" style="font-style: normal;">Description:</i> Match the strings literally, without regular expression support. By default, only identical strings are matched. For partial matches, use the <span class="Code" oldrole="userinput">flags("prefix")</span> or the <span class="Code" oldrole="userinput">flags("substring")</span> flags.</p>
        </div>
        <div>
            <h6 name="reference-regexp-glob" oldrole="simplesect"><a name="reference-regexp-glob"></a>glob</h6>
            <MadCap:keyword term="glob">
            </MadCap:keyword>
            <MadCap:keyword term="glob patterns">
            </MadCap:keyword>
            <p><i oldrole="emphasis" role="bold" style="font-style: normal;">Description:</i> Match the strings against a pattern containing '*' and '?' wildcards, without regular expression and character range support. The advantage of glob patterns to regular expressions is that globs can be processed much faster.</p>
            <ul oldrole="variablelist">
                <li oldrole="varlistentry">
                    <p><span class="Code" oldrole="command">*</span>: matches an arbitrary string, including an empty string</p>
                </li>
                <li oldrole="varlistentry">
                    <p><span class="Code" oldrole="command">?</span>: matches an arbitrary character</p>
                </li>
            </ul>
            <div cellspacing="0" class="Note" oldrole="note" style="width: 100%;"><span class="AllNoteStyles">NOTE: </span>
                <ul oldrole="itemizedlist">
                    <li oldrole="listitem">
                        <p>The wildcards can match the <span class="Code" oldrole="userinput">/</span> character.</p>
                    </li>
                    <li oldrole="listitem">
                        <p>You cannot use the <span class="Code" oldrole="userinput">*</span> and <span class="Code" oldrole="userinput">?</span> literally in the pattern.</p>
                    </li>
                </ul>
            </div>
        </div>
    </body>
</html>