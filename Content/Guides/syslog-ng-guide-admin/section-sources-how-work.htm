<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:conditions="General.OSE">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="section-sources-how-work">
        <h1 name="section-sources-how-work">How sources work</h1>
        <MadCap:keyword term="sources">
        </MadCap:keyword>
        <MadCap:keyword term="source drivers">
        </MadCap:keyword>
        <p>A source is where syslog-ng receives log messages. Sources consist of one or more drivers, each defining where and how messages are received.</p>
        <p>To define a source, add a source statement to the syslog-ng configuration file using the following syntax:<MadCap:keyword term="sources:['defining']"></MadCap:keyword></p><pre>source &lt;identifier&gt; {
    source-driver(params); source-driver(params); ...
};</pre>
        <div class="Example">
            <h6>Example: A simple source statement</h6>
            <p>The following source statement receives messages on the TCP port <span class="Code">1999</span> of the interface having the <span class="Code">10.1.2.3</span> IP address.</p><pre>source s_demo_tcp {
    network(ip(10.1.2.3) port(1999));
};</pre>
        </div>
        <div class="Example">
            <h6>Example: A source statement using two source drivers</h6>
            <p>The following source statement receives messages on the <span class="Code">1999</span> TCP port and the <span class="Code">1999</span> UDP port of the interface having the <span class="Code">10.1.2.3</span> IP address.</p><pre>source s_demo_two_drivers {
    network(ip(10.1.2.3) port(1999));
    network(ip(10.1.2.3) port(1999) transport("udp"));
};</pre>
        </div>
        <div class="Example">
            <h6>Example: Setting default priority and facility</h6>
            <MadCap:keyword term="setting facility">
            </MadCap:keyword>
            <MadCap:keyword term="overriding facility">
            </MadCap:keyword>
            <p>If the message received by the source does not have a proper syslog header, you can use the <span class="Code">default-facility()</span> and <span class="Code">default-priority()</span> options to set the facility and priority of the messages. Note that these values are applied only to messages that do not set these parameters in their header.</p><pre>source headerless_messages { network(default-facility(syslog) default-priority(emerg)); };</pre>
        </div>
        <p>Define a source only once. The same source can be used in several log paths. Duplicating sources causes syslog-ng to open the source (TCP/IP port, file, and so on) more than once, which might cause problems. For example, include the <span class="Code">/dev/log</span> file source only in one source statement, and use this statement in more than one log path if needed.</p>
        <table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');">
            <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;">
            </col>
            <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2">
            </col>
            <tbody>
                <tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1">
                    <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1">
                        <p>
                            <img src="../../Resources/Images/Common/caution.png" />
                        </p>
                    </td>
                    <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1"><span class="Yellow">Caution: </span>
                        <MadCap:snippetBlock src="../shared/chunk/para-initializing-sources-destinations.htm">
                        </MadCap:snippetBlock>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>To collect log messages on a specific platform, it is important to know how the native <span class="Code">syslogd</span> communicates on that platform. The following table summarizes the operation methods of <span class="Code">syslogd</span> on some of the tested platforms:</p>
        <MadCap:snippetBlock src="../shared/chunk/table-syslogd-operation-method-platform.htm">
        </MadCap:snippetBlock>
        <p>Each possible communication mechanism has a corresponding source driver in syslog-ng. For example, to open a unix socket with <span class="Code">SOCK_DGRAM</span> style communication use the driver <span class="Code">unix-dgram</span>. The same socket using the <span class="Code" >SOCK_STREAM</span> style — as used under Linux — is called <span class="Code" >unix-stream</span>.</p>
        <div class="Example">
            <h6>Example: Source statement on a Linux based operating system</h6>
            <p>The following source statement collects the following log messages:</p>
            <ul>
                <li>
                    <p><i>internal()</i>: Messages generated by syslog-ng.</p>
                </li>
                <li>
                    <p><i>network(transport("udp"))</i>: Messages arriving to the <span class="Code">514/UDP</span> port of any interface of the host.</p>
                </li>
                <li>
                    <p><i>unix-dgram("/dev/log");</i>: Messages arriving to the <span class="Code">/dev/log</span> socket.</p>
                </li>
            </ul><pre>source s_demo {
    internal();
    network(transport("udp"));
    unix-dgram("/dev/log");
};</pre>
        </div>
        <p>The following table lists the source drivers available in syslog-ng.</p>
        <MadCap:snippetBlock src="../shared/chunk/table-source-drivers.htm">
        </MadCap:snippetBlock>
    </body>
</html>