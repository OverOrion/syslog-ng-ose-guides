<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <meta name="description" content="" />
    </head>
    <body name="load-bal-multi-dest-macro">
        <h1 name="load-bal-multi-dest-macro">Load balancing with a round robin load balancing method based on the R_MSEC macro of <MadCap:variable name="General.abbrev" /> </h1>
        <p>This section describes a round robin load balancing method based on the <span class="Code">R_MSEC</span> macro of <MadCap:variable name="General.product" /> (<MadCap:variable name="General.abbrev" />) to load balance your logs between multiple  <MadCap:variable name="General.abbrev" /> destinations.</p>
        <div class="Note">
            <p class="Hyphenation"><span class="AllNoteStyles">TIP:</span> If <span class="Code">R_MSEC</span> is not precise enough, you can replace it with <span class="Code">R_USEC</span> (which uses microseconds instead of milliseconds).</p>
        </div>
        <p>For more information about the <span class="Code">R_MSEC</span> macro and further macros of <MadCap:variable name="General.abbrev" />, see <MadCap:xref href="reference-macros.htm"><span style="color: #04aada;" class="mcFormatColor">Macros of [%=General.OSE%]</span></MadCap:xref>.</p>
        <div class="Example">
            <h6>Example: round robin load balancing between multiple destinations</h6>
            <p>The following example is a round-robin load balancing method, based on <MadCap:variable name="General.abbrev" />'s <span class="Code">R_MSEC</span> macro.</p><pre>destination d_lb_network { 
  channel { 
    channel { 
      <b>filter { 
      "0" == "$(% ${R_MSEC} 2)" 
      };</b> 
      destination { 
        network("myhost1" 
          disk-buffer(mem-buf-length(10000) disk-buf-size(2000000))); 
      }; 
      flags(final); 
    }; 
 
    channel { 
    <b>filter { 
    "1" == "$(% ${R_MSEC} 2)" 
    };</b> 

    destination { 
      network("myhost2" 
        disk-buffer(mem-buf-length(10000) disk-buf-size(2000000))); 
    }; 
    flags(final); 
    }; 
  }; 
}; </pre>
            <p>The <span class="Code">filter {"	&lt;return value	&gt;" == "$(% ${R_MSEC} 	2)"};</span> code snippets (in bold) serve as the basis of the method. This filter separates incoming log messages' timestamp values based on the <span class="Code">R_MSEC</span> macro, using a division with remainder method, and distributes the log messages equally between two destinations based on the return value (in this case, <span class="Code">0</span> or <span class="Code">1</span>).</p>
        </div>
        <p>If you need a file instead of a network destination, replace the network destination with the file in the example (and use the same analogy for any other <MadCap:variable name="General.abbrev" /> destinations).</p>
        <p>For an alternative method to use the round robin load balancing method based on the <span class="Code">R_MSEC</span> macro, see <MadCap:xref href="load-bal-multi-dest-msec-h.htm"><span style="color: #04aada;" class="mcFormatColor">Configuration generator for the load balancing method based on MSEC hashing</span></MadCap:xref>.</p>
    </body>
</html>