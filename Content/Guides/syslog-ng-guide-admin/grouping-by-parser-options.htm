<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
    <head>
        <link href="../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css" rel="stylesheet" MadCap:stylesheetType="table" />
        <meta name="description" content="" />
    </head>
    <body name="grouping-by-parser-options">
        <h1 name="grouping-by-parser-options">Options of grouping-by parsers</h1>
        <p>The <span class="Code">grouping-by</span> has the following options.</p>
        <div>
            <h6 name="grouping-by-parser-aggregate"><a name="grouping-by-parser-aggregate"></a>aggregate()</h6>
            <MadCap:keyword term="aggregate()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['aggregate()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
                                 </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">aggregate()</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies the message that <MadCap:variable name="General.abbrev"></MadCap:variable> generates when the context is closed. This option is mandatory.</p>
            <p>Note that the <span class="Code">aggregate()</span> option has access to every message of the context, and has the following options:</p>
            <ul>
                <li>
                    <MadCap:snippetBlock src="../shared/chunk/option-inherit-mode.flsnp">
                    </MadCap:snippetBlock>
                    <MadCap:keyword term="inherit-mode()">
                    </MadCap:keyword>
                    <p>The default value of <span class="Code">inherit-mode()</span> is <span class="Code">context</span>.</p>
                    <p>For details on the message context, see <MadCap:xref href="grouping-by-parser.htm"><span style="color: #04aada;" class="mcFormatColor">Correlating messages using the grouping-by() parser</span></MadCap:xref>.</p>
                </li>
                <li>
                    <p><i>tags</i>: Adds the specified tag to the list of tags.</p>
                    <MadCap:keyword term="tags()">
                    </MadCap:keyword>
                </li>
                <li>
                    <p><i>value</i>: Adds a name-value pair to the generated message. You can include text, macros, template functions, and you can also reference every message of the context. For details on accessing other messages of the context, see <MadCap:xref href="referencing-previous-messages-grouping-by.htm"><span style="color: #04aada;" class="mcFormatColor">Referencing earlier messages of the context</span></MadCap:xref>.</p>
                    <MadCap:keyword term="value()">
                    </MadCap:keyword>
                </li>
            </ul>
        </div>
        <div>
            <h6 name="grouping-by-parser-having"><a name="grouping-by-parser-having"></a>having()</h6>
            <MadCap:keyword term="having()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['having()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
                                 </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">having()</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies a filter: <MadCap:variable name="General.abbrev"></MadCap:variable> generates the aggregate message only if the result of the filter expression is true. Note that the <span class="Code">having()</span> filter has access to every message of the context. For details on accessing other messages of the context, see <MadCap:xref href="referencing-previous-messages-grouping-by.htm"><span style="color: #04aada;" class="mcFormatColor">Referencing earlier messages of the context</span></MadCap:xref>.</p>
        </div>
        <div>
            <h6 name="grouping-by-parser-inject-mode"><a name="grouping-by-parser-inject-mode"></a>inject-mode()</h6>
            <MadCap:keyword term="inject-mode()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['inject-mode()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
                                 </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">inject-mode()</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> By default, the aggregated message that <MadCap:variable name="General.abbrev"></MadCap:variable> generates is injected into the same place where the <span class="Code">grouping-by()</span> statement is referenced in the log path. To post the generated message into the <span class="Code">internal()</span> source instead, use the <b class="Code">inject-mode()</b> option in the definition of the parser.</p>
            <div class="Example">
                <h6>Example: Sending triggered messages to the internal() source</h6>
                <p>To send the generated messages to the <span class="Code">internal</span> source, use the <b class="Code">inject-mode("internal")</b> option:</p><pre>parser p_grouping-by {grouping-by(
    ...
    inject-mode("internal")
);};</pre>
                <p>To inject the generated messages where the parser is referenced, use the <b class="Code">inject-mode("pass-through")</b> option:</p><pre>parser p_grouping-by {grouping-by(
    ...
    inject-mode("pass-through")
);};</pre>
            </div>
            <p>You can configure the generated message in the <span class="Code">aggregate()</span> option (see <MadCap:xref href="#grouping-by-parser-aggregate"><span style="color: #04aada;" class="mcFormatColor">aggregate()</span></MadCap:xref>). You can create an entire message, use macros and values extracted from the original message, and so on.</p>
        </div>
        <div>
            <h6 name="grouping-by-parser-key"><a name="grouping-by-parser-key"></a>key()</h6>
            <MadCap:keyword term="key()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['key()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
                                 </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">key()</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies the key as a template (that is, the name of a name-value pair) that every message must have to be added to the context. The value of the key must be the same for every message of the context. For example, this can be a session-id parsed from firewall messages, and so on.</p>
            <p>This is a mandatory option.</p>
            <div class="Note">
                <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 

				Messages that do not have a key will all belong to the same context.</p>
            </div>
            <div class="Note">
                <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span> 

				If the value of the key is static (for example, key("PROGRAM") instead of key("$PROGRAM")), all messages will belong to the same context.</p>
            </div>
        </div>
        <div>
            <h6 name="grouping-by-parser-scope"><a name="grouping-by-parser-scope"></a>scope()</h6>
            <MadCap:keyword term="scope()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['scope()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
                                 </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">scope()</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies which messages belong to the same context. The following values are available:</p>
            <ul>
                <li>
                    <p><i>process</i>: Only messages that are generated by the same process of a client belong to the same context, that is, messages that have identical ${HOST}, ${PROGRAM} and ${PID} values.</p>
                </li>
                <li>
                    <p><i>program</i>: Messages that are generated by the same application of a client belong to the same context, that is, messages that have identical ${HOST} and ${PROGRAM} values.</p>
                </li>
                <li>
                    <p><i>host</i>: Every message generated by a client belongs to the same context, only the ${HOST} value of the messages must be identical.</p>
                </li>
                <li>
                    <p><i>global</i>: Every message belongs to the same context. This is the default value.</p>
                </li>
            </ul>
        </div>
        <div>
            <h6 name="grouping-by-parser-sort-key"><a name="grouping-by-parser-sort-key"></a>sort-key()</h6>
            <MadCap:keyword term="sort-key()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['sort-key()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
						</td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">sort-key()</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Allows sorting of the elements before they are aggregated into a context.
Use this when entries are not received in order. This works similarly to the SQL ORDER BY keyword.</p>
            <div class="Note">
                <p class="Hyphenation"><span class="AllNoteStyles">NOTE:</span>
                </p>
                <ul>
                    <li>Sorting is done by <MadCap:variable name="General.abbrev" />   when the context is about to be closed by trigger() or timeout(), but before <MadCap:variable name="General.abbrev" /> evaluates the <a href="#grouping-by-parser-having">having()</a> option. </li>
                    <li><MadCap:variable name="General.abbrev" /> can slow down if you specify several sort-key macro or template options, for example, <span class="Code">sort-key("${3}${4}")</span>.</li>
                </ul>
            </div>
        </div>
        <div>
            <h6 name="grouping-by-parser-timeout"><a name="grouping-by-parser-timeout"></a>timeout()</h6>
            <MadCap:keyword term="timeout()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['timeout()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
                                 </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">timeout([seconds])</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies the maximum time to wait for all messages of the context to arrive. If no new message is added to the context during this period, the context is assumed to be complete and <MadCap:variable name="General.abbrev"></MadCap:variable> generates and sends the triggered message (specified in the <MadCap:xref href="#grouping-by-parser-aggregate"><span style="color: #04aada;" class="mcFormatColor">aggregate()</span></MadCap:xref> option), and clears the context. If a new message is added to the context, the timeout period is restarted.</p>
            <p>This option is mandatory, and its value must be equal to or greater than <b class="Code">1</b>.</p>
        </div>
        <div>
            <h6 name="grouping-by-parser-trigger"><a name="grouping-by-parser-trigger"></a>trigger()</h6>
            <MadCap:keyword term="trigger()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['trigger()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
                                 </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">trigger()</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> A filter that specifies the final message of the context. If the filter matches the incoming message, <MadCap:variable name="General.abbrev"></MadCap:variable> generates and sends the triggered message (specified in the <MadCap:xref href="#grouping-by-parser-aggregate"><span style="color: #04aada;" class="mcFormatColor">aggregate()</span></MadCap:xref> option), and clears the context.</p>
        </div>
        <div>
            <h6 name="grouping-by-parser-where"><a name="grouping-by-parser-where"></a>where()</h6>
            <MadCap:keyword term="where()">
            </MadCap:keyword>
            <MadCap:keyword term="grouping-by():['where()']">
            </MadCap:keyword>
            <table cellspacing="0" class="TableStyle-RuledTableWithHeading_DoNotEdit" colsep="0" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
                <tbody>
                    <tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyB-Column1-Body1">Synopsis: 
                                 </td>
                        <td class="TableStyle-RuledTableWithHeading_DoNotEdit-BodyA-Column1-Body1">where()</td>
                    </tr>
                </tbody>
                <col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;">
                </col>
            </table>
            <p><i style="font-style: normal;">Description:</i> Specifies a filter condition. Messages not matching the filter will not be added to the context. Note that the <span class="Code">where()</span> filter has access only to the current message.</p>
        </div>
    </body>
</html>