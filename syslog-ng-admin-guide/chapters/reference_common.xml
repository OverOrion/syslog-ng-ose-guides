<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter SYSTEM "../../xml-stylesheet/pdf/dtd/docbookx.dtd"
 [  
 <!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]> 
<chapter>
    <title/>
    <section id="table_source_tcp_options">
        <title>Options for tcp(), tcp6(), udp(), and udp6() sources</title>
        <simplesect id="source_option_encoding">
            <title>encoding()</title>
                <indexterm type="parameter">
                    <primary>encoding()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the characterset (encoding, for example <parameter>UTF-8</parameter>)
                        of messages using the legacy BSD-syslog protocol. To list the available
                        character sets on a host, execute the <command>iconv -l</command>
                    command.</para>
        </simplesect>
        <simplesect id="source_option_ip">
            <title>ip() or localip()</title>
                <indexterm type="parameter">
                    <primary>ip() or localip()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0.0.0.0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The IP address to bind to. Note that this is not the address where
                        messages are accepted from.</para>
        </simplesect>
        <simplesect id="source_option_ip_tos">
            <title>ip_tos()</title>
                <indexterm type="parameter">
                    <primary>ip_tos()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the Type-of-Service value of outgoing packets.</para>
        </simplesect>
        <simplesect id="source_option_ip_ttl">
            <title>ip_ttl()</title>
                <indexterm type="parameter">
                    <primary>ip_ttl()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the Time-To-Live value of outgoing packets.</para>
        </simplesect>
        <simplesect id="source_option_keep_alive">
            <title>keep-alive()</title>
                <indexterm type="parameter">
                    <primary>keep-alive()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies whether connections to sources should be closed when syslog-ng
                        is restarted (upon the receipt of a SIGHUP signal). Note that this applies
                        to the server (source) side of the syslog-ng connections, client-side
                        (destination) connections are always reopened after receiving a HUP signal
                        unless the <parameter>keep-alive</parameter> option is enabled for the
                        destination.</para>
        </simplesect>
        <simplesect id="source_option_max_connections">
            <title>max-connections()</title>
                <indexterm type="parameter">
                    <primary>max-connections()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>10</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the maximum number of simultaneous connections.</para>
        </simplesect>
        <simplesect id="source_option_port">
            <title>port() or localport()</title>
                <indexterm type="parameter">
                    <primary>port() or localport()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>514</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The port number to bind to.</para>
        </simplesect>
        <simplesect id="source_option_so_broadcast">
            <title>so_broadcast()</title>
                <indexterm type="parameter">
                    <primary>so_broadcast()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> This option controls the <parameter>SO_BROADCAST</parameter> socket
                        option required to make syslog-ng send messages to a broadcast address. For details, see
                        the <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect id="source_option_so_keepalive">
            <title>so_keepalive()</title>
                <indexterm type="parameter">
                    <primary>so_keepalive()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Enables keep-alive messages, keeping the socket open. This only effects
                        TCP and UNIX-stream sockets. For details, see the <command>socket(7)</command> manual
                        page.</para>
        </simplesect>
        <simplesect id="source_option_so_rcvbuf">
            <title>so_rcvbuf()</title>
                <indexterm type="parameter">
                    <primary>so_rcvbuf()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the size of the socket receive buffer in bytes. For details, see the
                            <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect id="source_option_so_sndbuf">
            <title>so_sndbuf()</title>
                <indexterm type="parameter">
                    <primary>so_sndbuf()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the size of the socket send buffer in bytes. For details, see the
                            <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect id="source_option_tcp_keepalive">
            <title>tcp-keep-alive()</title>
                <indexterm type="parameter">
                    <primary>tcp-keep-alive()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> This is an obsolete alias of the <parameter>so_keepalive()</parameter>
                        option.</para>
        </simplesect>
        <simplesect id="source_option_tls">
            <title>tls()</title>
                <indexterm type="parameter">
                    <primary>tls()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>tls options</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>n/a</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> This option sets various TLS specific options like key/certificate files
                        and trusted CA locations and can only be used with the
                        <parameter>tcp</parameter> transport protocols. For details, see <xref linkend="tlsoptions"/>.</para>
        </simplesect>
    </section>

    <section id="table_destination_tcp_options">
        <title>Options for tcp(), tcp6(), udp(), and udp6() destinations</title>
        <simplesect id="destination_option_ip_tos">
            <title>ip_tos()</title>
                <indexterm type="parameter">
                    <primary>ip_tos()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the Type-of-Service value of outgoing packets.</para>
        </simplesect>
        <simplesect id="destination_option_ip_ttl">
            <title>ip_ttl()</title>
                <indexterm type="parameter">
                    <primary>ip_ttl()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the Time-To-Live value of outgoing packets.</para>
        </simplesect>
        <simplesect id="destination_option_localip">
            <title>localip()</title>
                <indexterm type="parameter">
                    <primary>localip()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0.0.0.0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The IP address to bind to before connecting to target.</para>
        </simplesect>
        <simplesect id="destination_option_localport">
            <title>localport()</title>
                <indexterm type="parameter">
                    <primary>localport()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The port number to bind to. Messages are sent from this port.</para>
        </simplesect>
        <simplesect id="destination_option_port">
            <title>port() or destport()</title>
                <indexterm type="parameter">
                    <primary>port() or destport()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>514</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The port number to connect to. Note that the default port numbers used by
                        syslog-ng do not comply with the latest RFC which was published after the
                        release of syslog-ng 3.0.2, therefore the default port numbers will change
                        in the future releases.</para>
            <!-- syslog drivere most kulon van a referenceben -->
        </simplesect>
        <simplesect id="destination_option_spoof_source">
            <title>spoof_source()</title>
                <indexterm type="parameter">
                    <primary>spoof_source()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Enables source address spoofing. This means that the host running
                        syslog-ng generates UDP packets with the source IP address matching the
                        original sender of the message. It is useful when you want to perform some
                        kind of preprocessing via syslog-ng then forward messages to your central
                        log management solution with the source address of the original sender. This
                        option only works for UDP destinations though the original message can be
                        received by TCP as well. This option is only available if syslog-ng was
                        compiled using the <parameter>--enable-spoof-source</parameter>
                        configuration option.</para>
        </simplesect>
        <simplesect id="destination_option_so_broadcast">
            <title>so_broadcast()</title>
                <indexterm type="parameter">
                    <primary>so_broadcast()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> This option controls the <parameter>SO_BROADCAST</parameter> socket
                        option required to make syslog-ng send messages to a broadcast address. For details, see
                        the <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect id="destination_option_so_rcvbuf">
            <title>so_rcvbuf()</title>
                <indexterm type="parameter">
                    <primary>so_rcvbuf()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the size of the socket receive buffer in bytes. For details, see the
                            <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect id="destination_option_so_sndbuf">
            <title>so_sndbuf()</title>
                <indexterm type="parameter">
                    <primary>so_sndbuf()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel>Specifies the size of the socket send buffer in bytes. For details, see the
                            <command>socket(7)</command> manual page.</para>
        </simplesect>
        <simplesect id="destination_option_tls">
            <title>tls()</title>
                <indexterm type="parameter">
                    <primary>tls()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>tls options</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>n/a</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> This option sets various TLS specific options like key/certificate files
                        and trusted CA locations. TLS can be used only with the
                        <parameter>tcp</parameter> transport protocols. For details, see <xref linkend="tlsoptions"/>.</para>
        </simplesect>
    </section>
    <section id="destination-tcp-syslog-ssl-failover">
        <title>Failover options and examples</title>
        <simplesect id="destination-failover">
            <title>failover_servers()</title>
            <indexterm type="parameter">
                    <primary>failover_servers()</primary>
                </indexterm>
            <indexterm>
                <primary>secondary servers</primary>
            </indexterm>
            <indexterm>
                <primary>failover servers</primary>
            </indexterm>
            <indexterm>
                <primary>fail-over servers</primary>
            </indexterm>
            <indexterm>
                <primary>tcp failover</primary>
            </indexterm>
            <indexterm>
                <primary>fail-over</primary>
            </indexterm>
            <indexterm>
                <primary>client-side failover</primary>
            </indexterm>
            <indexterm>
                <primary>FailoverSyslogServer</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>list of IP addresses and fully-qualified domain names</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Available only in &product; 3.2 and later. Specifies a secondary destination server where log messages are sent if the primary server becomes unaccessible. To list several failover servers, separate the address of the servers with comma. The time &abbrev; waits for the a server before switching to the next failover server is set in the <parameter>time_reopen()</parameter> option. For details about how client-side failover works, see <xref linkend="concepts_failover"/>.</para>
            <warning>
                <para>The failover servers must be accessible on the same port as the primary server.</para>
            </warning>
            <note>
                <para>This option is not available for the connection-less UDP protocol, because in this case the client does not detect that the destination becomes unaccessible.</para>
            </note>
        </simplesect>
    </section>
    <section id="table_disk_buffering">
        <title>Disk-buffering options</title>
        <simplesect id="diskbuffer_option_log_disk_fifo_size">
            <title>log_disk_fifo_size()</title>
                <indexterm type="parameter">
                    <primary>log_disk_fifo_size()</primary>
                </indexterm>
            <indexterm>
                <primary>disk buffer</primary>
            </indexterm>
            <indexterm>
                <primary>disk-based buffering</primary>
            </indexterm>
            <indexterm>
                <primary>parameters</primary>
                <secondary>log_disk_fifo_size()</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0 (disabled)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Size of the hard disk space in bytes that is used as disk buffer.
                        Available only in syslog-ng Premium Edition when using the
                        <parameter>tcp()</parameter>, <parameter>tcp6()</parameter>,
                            <parameter>syslog()</parameter> (when using the
                        <parameter>tcp</parameter> or <parameter>tls</parameter> transport methods),
                        and <parameter>sql()</parameter> destinations. Can be also defined as a
                        global option. For details on
                        using the disk buffer, see <xref linkend="concepts_diskbuffer"/>.</para>
                        <para>If <parameter>log_disk_fifo_size()</parameter> is not zero, its minimal value is <parameter>86016</parameter> bytes (84 kilobytes).</para>
            <note>
                <para>The actual size of the disk buffer file is slightly larger than the value specified in the <parameter>log_disk_fifo_size()</parameter> option, because &abbrev; add a 4 kilobyte-long header, and under certain conditions, may add an extra log message to the disk buffer above the specified limit.</para>
            </note>
            <example>
                <title>Enabling the disk buffer</title>
                <para>The following example sets enables the disk buffer of a TCP destination. Size of the disk buffer is limited to 100KB (see also the previous note).</para>
                <synopsis>destination d_tcp {
                   tcp("10.30.0.35"
                   log_disk_fifo_size(102400)
                   );
                 }; </synopsis>
            </example>
        </simplesect>
    </section>
    <section id="destination-logstore-options-examples">
    <simplesect id="logstore_journal_shmem_threshold">
                <title>logstore_journal_shmem_threshold()</title>
                <indexterm type="parameter">
                    <primary>logstore_journal_shmem_threshold()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>536870912</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                 <para><guilabel>Description:</guilabel> If the size of memory (in bytes) required by journal files increases above this value, &abbrev; maps only a single block of every logstore journal into the memory. Default value: <parameter>536870912</parameter> (512 MB).</para>
                 <para id="logstore_journal_shmem_threshold_description">If the memory required for the journal files exceeds the <parameter>logstore_journal_shmem_threshold()</parameter> limit, &abbrev; will store only a single journal block of every journal file in the memory, and &mdash; if more blocks are needed for a journal &mdash; store the additional blocks on the hard disk. Opening new logstore files means allocating memory for one new journal block for every new file. In extreme situations involving large traffic, this can lead to &abbrev; consuming the entire memory of the system. Adjust the <parameter>journal_block_size()</parameter> and your file-naming conventions as needed to avoid such situations. For details on logstore journals, see <xref linkend="concepts_logstore_journal"/>.</para>
                 <example id="example-logstore-memory-threshold">
                    <title>Calculating memory usage of logstore journals</title>
                    <para>If you are using the default settings (4 journal blocks for every logstore journal, one block is 1MB, <parameter>logstore_journal_shmem_threshold()</parameter> is 512MB), this means that &abbrev; will allocate 4MB memory for every open logstore file, up to 512MB if you have 128 open logstore files. Opening a new logstore file would require 4 more megabytes of memory for journaling, bringing the total required memory to 516MB, which is above the <parameter>logstore_journal_shmem_threshold()</parameter>. In this case, &abbrev; switches to storing only a single journal block in the memory, lowering the memory requirements of journaling to 129MB. However, opening more and more logstore files wil require more and more memory, and this is not limited, except when &abbrev; reaches the maximum number of files that can be open (as set in the <parameter>--fd-limit</parameter> command-line option).</para>
                </example>
                 <example id="example-logstore-memory">
                     <title>Limiting the memory use of journal files</title>
                     <para>The following example causes &abbrev; to map only a single journal block into the host's memory if the total memory range used by logstore journals would be higher than 32 MB. </para>
                     <synopsis>options { 
    logstore_journal_shmem_threshold(33554432); 
};
destination d_messages { logstore("/var/log/messages_logstore.lgs"
                         journal_block_size(19660800)
                         journal_block_count(5)
                         ); 
};</synopsis>
                 </example>
            </simplesect>
      <example id="example-logstore-journal">
                     <title>Setting journal block number and size</title>
                     <para>The following example sets the size of a journal block to 512KB and increases the number of blocks to 5.</para>
                     <synopsis>destination d_logstore { 
                     logstore("/var/log/messages-logstore.lgs"
                     encrypt_certificate 
                      ("/opt/syslog-ng/etc/syslog-ng/keys/public-server-certificate.pem")
                     journal_block_size(524288) journal_block_count(5)); 
};</synopsis>
                 </example>
    </section>
    <section id="table_source_commonoptions">
        <?dbfo keep-together="auto" ?>
        <title>Common options for source drivers</title>
        <simplesect id="source_commonoption_default-facility">
            <title>default-facility()</title>
                <indexterm type="parameter">
                    <primary>default-facility()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>facility string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>kern</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> This parameter assigns a facility value to the messages received from the
                        file source, if the message does not specify one.</para>
        </simplesect>
        <simplesect id="source_commonoption_default-priority">
            <title>default-priority()</title>
                <indexterm type="parameter">
                    <primary>default-priority()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>priority string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> This parameter assigns an emergency level to the messages received from
                        the file source, if the message does not specify one.</para>
        </simplesect>
        <simplesect id="source_commonoption_flags">
            <title>flags()</title>
                <indexterm type="parameter">
                    <primary>flags()</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>dont-store-legacy-msghdr</secondary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>empty-lines</secondary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>kernel</secondary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>no-multi-line</secondary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>no-parse</secondary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>store-legacy-msghdr</secondary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>validate-utf8</secondary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>dont-store-legacy-msghdr, empty-lines, kernel, no-multi-line, no-parse, store-legacy-msghdr, store-legacy-msghdr,
                        syslog-protocol, validate-utf8</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty set</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the log parsing options of the source.</para>
            <itemizedlist>
                <listitem>
                    <para><emphasis>dont-store-legacy-msghdr</emphasis>: If the <parameter>dont-store-legacy-msghdr</parameter> flag is enabled, syslog-ng stores the parsed header of the syslog message in the <parameter>$MSGHDR</parameter> macro. By default, the original incoming header of the log message is stored in the <parameter>$MSGHDR</parameter> macro.</para> 
                    <warning>
                        <para>Note that the behavior of handling the message header has changed in syslog-ng PE 3.2: earlier versions stored the parsed header by default, and stored the original header only if the <parameter>store-legacy-msghdr</parameter> flag was enabled.</para>
                    </warning>
                </listitem>
                <listitem>
                    <para><emphasis>empty-lines</emphasis>: Use the <parameter>empty-lines</parameter> flag to keep the empty lines of the messages. By default, syslog-ng removes empty lines automatically.</para>
                </listitem>
                <listitem>
                    <para><emphasis>kernel</emphasis>: The <parameter>kernel</parameter> flag makes the source default to the <parameter>LOG_KERN | LOG_CRIT</parameter> priority if not specified otherwise. </para>
                </listitem>
                <listitem>
                    <para><emphasis>no-multi-line</emphasis>: The <parameter>no-multi-line</parameter> flag disables line-breaking in the messages; the entire message is converted to a single line.</para>
                </listitem>
                <listitem>
                    <para><emphasis>no-parse</emphasis>: By default, syslog-ng parses incoming messages as syslog messages. If a source does not send properly formatted messages, use the <parameter>no-parse</parameter> flag to disable message parsing for the source. As a result, syslog-ng will generate a new syslog header and put the entire incoming message into the MSG part of the syslog message.</para>
                    <para>The <parameter>no-parse</parameter> flag completely disables syslog message parsing and processes the complete line as the message part of a syslog message. Other information (timestamp, host, and so on) is added automatically. This flag is useful for parsing files not complying to the syslog format. </para>
                </listitem>
                <listitem>
                    <indexterm>
                        <primary>Snare-compatibility</primary>
                    </indexterm>
                    <indexterm>
                        <primary>compatibility with Snare</primary>
                    </indexterm>
                    <indexterm>
                        <primary>syslog-ng agent</primary>
                        <secondary>Snare-compatibility</secondary>
                    </indexterm>
                    <indexterm>
                        <primary>Snare</primary>
                        <secondary>receiving Snare-compatible messages</secondary>
                    </indexterm>
                    <para><emphasis>store-legacy-msghdr</emphasis>: Setting flag is obsolete in syslog-ng PE 3.2 and later, because it is enabled by default. See also the <parameter>dont-store-legacy-msghdr</parameter> flag.</para>
                    <para>If the <parameter>store-legacy-msghdr</parameter> flag is enabled,
                            syslog-ng stores the original incoming header of the log message in the <parameter>$MSGHDR</parameter> macro. This
                            is useful if the original format of a non-syslog-compliant message must
                            be retained (syslog-ng automatically corrects minor header errors, for example
                            adds a whitespace before <parameter>msg</parameter> in the following
                            message: <parameter>Jan 22 10:06:11 host program:msg</parameter>). Note
                            that <parameter>store-legacy-msghdr</parameter> should be enabled when
                            receiving messages from syslog-ng Agent for Windows clients that use the
                            Snare-compatible mode.</para>
                 </listitem>
                 <listitem>
                    <para><emphasis>syslog-protocol</emphasis>: The <parameter>syslog-protocol</parameter> flag specifies that
                            incoming messages are expected to be formatted according to the new IETF
                            syslog protocol standard. Note that this flag is not needed for the
                                <parameter>syslog</parameter> driver.</para>
                 </listitem>
                 <listitem>
                    <para><emphasis>validate-utf8</emphasis>: The <parameter>validate-utf8</parameter> flag enables
                            encoding-verification for messages formatted according to the new IETF
                            syslog standard (for
                            details, see <xref linkend="concepts_message_ietfsyslog"/>). If the BOM character is missing, but the message is otherwise
                            UTF-8 compliant, syslog-ng automatically adds the BOM character to the
                            message.</para>
                 </listitem>
            </itemizedlist>
        </simplesect>
        <simplesect id="source_commonoption_follow_freq">
            <title>follow_freq()</title>
                <indexterm type="parameter">
                    <primary>follow_freq()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>1</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Indicates that the source should be checked periodically instead of being
                        polled. This is useful for files which always indicate readability, even
                        though no new lines were appended. If this value is higher than zero,
                        syslog-ng will not attempt to use <parameter>poll()</parameter> on the file,
                        but checks whether the file changed every time the
                        <parameter>follow_freq()</parameter> interval (in seconds) has elapsed.
                Floating-point numbers (for example <parameter>1.5</parameter>) can be used as
                        well.</para>
        </simplesect>
        <simplesect id="source_commonoption_host_override">
            <title>host_override()</title>
                <indexterm type="parameter">
                    <primary>host_override()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Replaces the $HOST part of the message with the parameter string.</para>
        </simplesect>
        <simplesect id="source_commonoption_keep_hostname">
            <title>keep_hostname()</title>
                <indexterm type="parameter">
                    <primary>keep_hostname()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Enable or disable hostname rewriting. Enable this option to use
                        hostname-related macros. This option can be specified globally, and
                        per-source as well. The local setting of the source overrides the global
                        option if available. When relaying messages, enable this option on the
                        syslog-ng server and also on every relay, otherwise syslog-ng will treat
                        incoming messages as if they were sent by the last relay.</para>
        </simplesect>
        <simplesect id="source_commonoption_keep_timestamp">
            <title>keep_timestamp()</title>
                <indexterm type="parameter">
                    <primary>keep_timestamp()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies whether syslog-ng should accept the timestamp received from the
                        sending application or client. If disabled, the time of reception will be
                        used instead. This option can be specified globally, and per-source as well.
                        The local setting of the source overrides the global option if
                    available.</para>
        </simplesect>
        <simplesect id="source_commonoption_log_fetch_limit">
            <title>log_fetch_limit()</title>
                <indexterm type="parameter">
                    <primary>log_fetch_limit()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>The value specified by the global <link linkend="reference_options">
                            <parameter>log_fetch_limit()</parameter>
                            </link> option, which defaults to <parameter>10</parameter>.</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The maximum number of messages fetched from a source during a single poll
                        loop. The destination queues might fill up before flow-control could stop
                        reading if <parameter>log_fetch_limit()</parameter> is too high.</para>
        </simplesect>
        <simplesect id="source_commonoption_log_iw_size">
            <title>log_iw_size()</title>
                <indexterm type="parameter">
                    <primary>log_iw_size()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>100</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The size of the initial window, this value is used during flow
                    control.</para>
        </simplesect>
        <simplesect id="source_commonoption_log_msg_size">
            <title>log_msg_size()</title>
                <indexterm type="parameter">
                    <primary>log_msg_size()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use the global <parameter>log_msg_size()</parameter> option, which
                        defaults to <parameter>8192</parameter>.</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the maximum length of incoming log messages. Uses the value of
                        the <link linkend="reference_options">global option</link> if not specified.</para>
        </simplesect>
        <simplesect id="source_commonoption_log_prefix">
            <title>log_prefix() (DEPRECATED)</title>
                <indexterm type="parameter">
                    <primary>log_prefix() (DEPRECATED)</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> A string added to the beginning of every log message. It can be used to
                        add an arbitrary string to any log source, though it is most commonly used
                        for adding <parameter>kernel:</parameter> to the kernel messages on Linux.</para>
            <note><para>This option is deprecated. Use
                        <parameter>program_override()</parameter> instead.</para></note>
        </simplesect>
        <simplesect id="source_commonoption_multi_line_garbage">
            <title>multi-line-garbage()</title>
                <indexterm type="parameter">
                    <primary>multi-line-garbage()</primary>
                </indexterm>
                <indexterm>
                    <primary>processing multi-line messages</primary>
                </indexterm>
                <indexterm>
                    <primary>multi-line messages</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>regular expression</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty string</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Use the <parameter>multi-line-garbage()</parameter> option when processing multi-line messages that contain unneeded parts between the messages. Specify a string or regular expression that matches the beginning of the unneeded message parts. If the <parameter>multi-line-garbage()</parameter> option is set, &abbrev; ignores lines between the line matching the <parameter>multi-line-garbage()</parameter> and the next line matching <parameter>multi-line-prefix()</parameter>. See also the <parameter>multi-line-prefix()</parameter> option.</para>
            <para>When receiving multi-line messages from a source when the <parameter>multi-line-garbage()</parameter> option is set but no matching line is received between two lines that match <parameter>multi-line-prefix()</parameter>, &abbrev; will continue to process the incoming lines as a single message until a line matching <parameter>multi-line-garbage()</parameter> is received.</para>
            <warning>
                <para>If the <parameter>multi-line-garbage()</parameter> option is set, &abbrev; discards lines between the line matching the <parameter>multi-line-garbage()</parameter> and the next line matching <parameter>multi-line-prefix()</parameter>.</para>
            </warning>
            <note>
                <para>Starting with &abbrev; version 3.2.1, a message is considered complete if no new lines arrive to the message for 10 seconds, even if no line matching the <parameter>multi-line-garbage()</parameter> option is received.</para>
            </note>
            <!-- FIXME examples -->
        </simplesect>
        <simplesect id="source_commonoption_multi_line_prefix">
            <title>multi-line-prefix()</title>
                <indexterm type="parameter">
                    <primary>multi-line-prefix()</primary>
                </indexterm>
                <indexterm>
                    <primary>processing multi-line messages</primary>
                </indexterm>
                <indexterm>
                    <primary>multi-line messages</primary>
                </indexterm>
                <indexterm>
                    <primary>multiline messages</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>regular expression</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty string</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><guilabel>Description:</guilabel> Use the <parameter>multi-line-prefix()</parameter> option to process multi-line messages, that is, log messages that contain newline characters (for example, Tomcat logs). Specify a string or regular expression that matches the beginning of the log messages. If the <parameter>multi-line-prefix()</parameter> option is set, &abbrev; ignores newline characters from the source until a line matches the regular expression again, and treat the lines between the matching lines as a single message. See also the <parameter>multi-line-garbage()</parameter> option.</para>
            <note>
                <para>Starting with &abbrev; version 3.2.1, a message is considered complete if no new lines arrive to the message for 10 seconds, even if no line matching the <parameter>multi-line-garbage()</parameter> option is received.</para>
            </note>
            <note>
                <para>Use as simple regular expressions as possible, because complex regular expressions can severely reduce the rate of processing multi-line messages.</para>
            </note>
            <tip>
               <itemizedlist>
               <listitem>
               <indexterm type="parameter">
                    <primary>indent-multi-line</primary>
                </indexterm>
                <indexterm>
                    <primary>formatting multi-line messages</primary>
                </indexterm>
                <indexterm>
                    <primary>multi-line messages</primary>
                </indexterm>
                <indexterm>
                    <primary>multiline messages</primary>
                </indexterm>
                <indexterm>
                    <primary>indenting multi-line messages</primary>
                </indexterm>
                   <para>To make multi-line messages more readable when written to a file, use a template in the destination and instead of the <parameter>$MESSAGE</parameter> macro, use the following: <parameter>$(indent-multi-line $MESSAGE)</parameter>. This expression inserts a tab after every newline character (except when a tab is already present), indenting every line of the message after the first. For example:</para>
                   <synopsis>destination d_file {
                file ("/var/log/messages"
                        template("$ISODATE $HOST $(indent-multi-line $MESSAGE)\n") );
};</synopsis>
                   <para>For details on using templates, see <xref linkend="configuring_macros"/>.</para>
               </listitem>
               <listitem>
                   <para>To actually convert the lines of multi-line messages to single line (by replacing the newline characters with whitespaces), use the <parameter>flags(no-multi-line)</parameter> option in the source.</para>
               </listitem>
               </itemizedlist>
            </tip>
            <example>
                <title>Processing Tomcat logs</title>
                <indexterm>
                    <primary>multi-line messages</primary>
                </indexterm>
                <indexterm>
                    <primary>Tomcat logs</primary>
                </indexterm>
                <para>The log messages of the Apache Tomcat server are a typical example for multi-line log messages. The messages start with the date and time of the query in the <parameter>YYYY.MM.DD  HH:MM:SS</parameter> format, as you can see in the following example.</para>
                <synopsis>2010.06.09. 12:07:39 org.apache.catalina.startup.Catalina start
SEVERE: Catalina.start:
LifecycleException:  service.getName(): "Catalina";  Protocol handler start failed: java.net.BindException: Address already in use&lt;null&gt;:8080
       at org.apache.catalina.connector.Connector.start(Connector.java:1138)
       at org.apache.catalina.core.StandardService.start(StandardService.java:531)
       at org.apache.catalina.core.StandardServer.start(StandardServer.java:710)
       at org.apache.catalina.startup.Catalina.start(Catalina.java:583)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.apache.catalina.startup.Bootstrap.start(Bootstrap.java:288)
       at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
       at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
       at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
       at java.lang.reflect.Method.invoke(Method.java:597)
       at org.apache.commons.daemon.support.DaemonLoader.start(DaemonLoader.java:177)
2010.06.09. 12:07:39 org.apache.catalina.startup.Catalina start
INFO: Server startup in 1206 ms
2010.06.09. 12:45:08 org.apache.coyote.http11.Http11Protocol pause
INFO: Pausing Coyote HTTP/1.1 on http-8080
2010.06.09. 12:45:09 org.apache.catalina.core.StandardService stop
INFO: Stopping service Catalina</synopsis>
                 <para>To process these messages, specify a regular expression matching the timestamp of the messages in the <parameter>multi-line-prefix()</parameter> option. Such an expression is the following:</para>
                 <synopsis>source s_file{file("/var/log/tomcat6/catalina.2010-06-09.log" follow_freq(0) multi-line-prefix("[0-9]{4}\.[0-9]{2}\.[0-9]{2}\.") flags(no-parse));};
};</synopsis>
                 <para>Note that the <parameter>flags(no-parse)</parameter> is needed to avoid &abbrev; trying to interpret the date in the message.</para>
            </example>
        </simplesect>
        <simplesect id="source_commonoption_optional">
            <title>optional()</title>
                <indexterm type="parameter">
                    <primary>optional()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Instruct syslog-ng to ignore the error if a specific source cannot be
                        initialized. No other attempts to initialize the source will be made until
                        the configuration is reloaded. This option currently applies to the
                            <parameter>pipe()</parameter>, <parameter>unix-dgram</parameter>, and
                            <parameter>unix-stream</parameter> drivers.</para>
        </simplesect>
        <simplesect id="source_commonoption_pad_size">
            <title>pad_size()</title>
                <indexterm type="parameter">
                    <primary>pad_size()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies input padding. Some operating systems (such as HP-UX) pad all 0
                        messages to block boundary. This option can be used to specify the block
                        size. (HP-UX uses 2048 bytes). The &abbrev; application will pad reads from the associated
                        device to the number of bytes set in <parameter>pad_size()</parameter>.
                        Mostly used on HP-UX where <filename>/dev/log</filename> is a named pipe and
                        every write is padded to 2048 bytes.</para>
        </simplesect>
        <simplesect id="source_commonoption_program_override">
            <title>program_override</title>
                <indexterm type="parameter">
                    <primary>program_override</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Replaces the $PROGRAM part of the message with the parameter string. For
                        example, to mark every message coming from the kernel, include the
                            <parameter>program_override("kernel")</parameter> option in the source
                        containing <parameter>/proc/kmsg</parameter>.</para>
            <note><para>This option replaces the
                        deprecated <parameter>log_prefix()</parameter> option.</para></note>
        </simplesect>
        <simplesect id="source_commonoption_tags">
            <title>tags()</title>
                <indexterm type="parameter">
                    <primary>tags()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Label the messages received from the source with custom tags. Tags must
                        be unique, and enclosed between double quotes. When adding multiple tags,
                        separate them with comma, for example <parameter>tags("dmz",
                        "router")</parameter>. This option is available only in syslog-ng 3.1 and
                        later.</para>
        </simplesect>
        <simplesect id="source_commonoption_time_zone">
            <title>time_zone()</title>
                <indexterm type="parameter">
                    <primary>time_zone()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>timezone in +/-HH:MM format</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry/>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The default timezone for messages read from the source. Applies only if
                        no timezone is specified within the message itself.</para>
        </simplesect>
        <simplesect id="source_commonoption_use_dns">
            <title>use_dns()</title>
                <indexterm type="parameter">
                    <primary>use_dns()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes, no, persist_only</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Enable or disable DNS usage. The <parameter>persist_only</parameter> option
                attempts to resolve hostnames locally from file (for example from
                            <filename>/etc/hosts</filename>). syslog-ng blocks on DNS queries, so
                        enabling DNS may lead to a Denial of Service attack. To prevent DoS, protect
                        your syslog-ng network endpoint with firewall rules, and make sure that all
                        hosts which may get to syslog-ng are resolvable. This option can be
                        specified globally, and per-source as well. The local setting of the source
                        overrides the global option if available.</para>
        </simplesect>
        <simplesect id="source_commonoption_use_fqdn">
            <title>use_fqdn()</title>
                <indexterm type="parameter">
                    <primary>use_fqdn()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Add Fully Qualified Domain Name instead of short hostname. This option
                        can be specified globally, and per-source as well. The local setting of the
                        source overrides the global option if available.</para>
        </simplesect>
    </section>
    <section id="destination-file-logstore-common">
                <simplesect id="destination-file-logstore-common-dir-group">
                <title>dir_group()</title>
                <indexterm type="parameter">
                    <primary>dir_group()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Use the global settings</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The group of directories created by syslog-ng. To preserve the original properties of an existing directory, use the option without specifying an attribute: <parameter>dir_group()</parameter>.</para>
            </simplesect>
            <simplesect id="destination-file-logstore-common-dir-owner">
                <title>dir_owner()</title>
                <indexterm type="parameter">
                    <primary>dir_owner()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Use the global settings</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The owner of directories created by syslog-ng. To preserve the original properties of an existing directory, use the option without specifying an attribute: <parameter>dir_owner()</parameter>.</para>
            </simplesect>
            <simplesect id="destination-file-logstore-common-dir-perm">
                <title>dir_perm()</title>
                <indexterm type="parameter">
                    <primary>dir_perm()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Use the global settings</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The permission mask of directories created by syslog-ng. Log
                                directories are only created if a file after macro expansion refers
                                to a non-existing directory, and directory creation is enabled (see
                                the <parameter>create_dirs()</parameter> option below). For octal
                                numbers prefix the number with <parameter>0</parameter>, for example use
                                    <parameter>0755</parameter> for
                                <parameter>rwxr-xr-x</parameter>.</para>
                <para>To preserve the original properties of an existing directory, use the option without specifying an attribute: <parameter>dir_perm()</parameter>. Note that when creating a new directory without specifying attributes for <parameter>dir_perm()</parameter>, the default permission of the directories is masked with the umask of the parent process (typically <parameter>0022</parameter>).</para>
            </simplesect>
                <simplesect id="destination-file-logstore-common-group">
                <title>group()</title>
                <indexterm type="parameter">
                    <primary>group()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Use the global settings</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the group of the created file to the one specified. To preserve the original properties of an existing file, use the option without specifying an attribute: <parameter>group()</parameter>.</para>
            </simplesect>
                <simplesect id="destination-file-logstore-common-owner">
                <title>owner()</title>
                <indexterm type="parameter">
                    <primary>owner()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Use the global settings</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the owner of the created file to the one specified. To preserve the original properties of an existing file, use the option without specifying an attribute: <parameter>owner()</parameter>.</para>
            </simplesect>
            <simplesect id="destination-file-logstore-common-perm">
                <title>perm()</title>
                <indexterm type="parameter">
                    <primary>perm()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Use the global settings</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The permission mask of the file if it is created by syslog-ng. 
                                For octal numbers prefix the number with <parameter>0</parameter>,
                                for example use <parameter>0755</parameter> for
                                <parameter>rwxr-xr-x</parameter>.</para>
                <para>To preserve the original properties of an existing file, use the option without specifying an attribute: <parameter>perm()</parameter>.</para>
            </simplesect>
    </section>
    <section id="table_destination_commonoptions">
        <?dbfo keep-together="auto" ?>
        <title>Common options for destination drivers</title>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary>common options</secondary>
        </indexterm>
        <simplesect id="destination_commonoption_flags">
            <title>flags()</title>
                <indexterm type="parameter">
                    <primary>flags()</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>no_multi_line</secondary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>flags</primary>
                    <secondary>syslog-protocol</secondary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no_multi_line, syslog-protocol</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>empty set</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Flags influence the behavior of the driver.</para>
            <para>The <parameter>no-multi-line</parameter> flag disables line-breaking
                            in the messages; the entire message is converted to a single line.</para>
                        <para>The <parameter>syslog-protocol</parameter> flag instructs the driver
                            to format the messages according to the new IETF syslog protocol
                            standard. If this flag is enabled, macros used for the message have
                            effect only for the text of the message, the message header is formatted
                            to the new standard.</para>
            <note><para>This flag is not needed for the <parameter>syslog</parameter> driver.</para></note>
        </simplesect>
        <simplesect id="destination_commonoption_flush_lines">
            <title>flush_lines()</title>
                <indexterm type="parameter">
                    <primary>flush_lines()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use global setting.</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies how many lines are flushed to a destination at a time.
                        Syslog-ng waits for this number of lines to accumulate and sends them off in
                        a single batch. Setting this number high increases throughput as fully
                        filled frames are sent to the network, but also increases message latency.
                        The latency can be limited by the use of the
                        <parameter>flush_timeout</parameter> option.</para>
        </simplesect>
        <simplesect id="destination_commonoption_flush_timeout">
            <title>flush_timeout()</title>
                <indexterm type="parameter">
                    <primary>flush_timeout()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>time in milliseconds</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use global setting.</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the time syslog-ng waits for lines to accumulate in its output
                        buffer. For more information, see the <parameter>flush_lines</parameter> option.</para>
        </simplesect>
        <simplesect id="destination_commonoption_frac_digits">
            <title>frac_digits()</title>
                <indexterm type="parameter">
                    <primary>frac_digits()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The syslog-ng application can store fractions of a second in the
                        timestamps according to the ISO8601 format. The
                        <parameter>frac_digits()</parameter> parameter specifies the number of
                        digits stored. The digits storing the fractions are padded by zeros if the
                        original timestamp of the message specifies only seconds. Fractions can
                        always be stored for the time the message was received.</para>
            <note><para>Note that syslog-ng can add the fractions to non-ISO8601 timestamps as well.</para></note>
        </simplesect>
        <simplesect id="destination_commonoption_fsync">
            <title>fsync()</title>
                <indexterm type="parameter">
                    <primary>fsync()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Forces an <parameter>fsync()</parameter> call on the destination fd after
                        each write. Note: enabling this option may seriously degrade
                    performance.</para>
        </simplesect>
        <simplesect id="destination_commonoption_local_timezone">
            <title>local_time_zone()</title>
                <indexterm type="parameter">
                    <primary>local_time_zone()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>name of the timezone or the timezone offset</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>The local timezone.</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Sets the timezone used when expanding filename and tablename templates.
                        The timezone can be specified as using the name of the timezone (for example
                            <parameter>time_zone("Europe/Budapest")</parameter>), or as the timezone
                        offset (for example <parameter>+01:00</parameter>). The valid timezone names are
                        listed under the <filename>/usr/share/zoneinfo</filename> directory.</para>
        </simplesect>
        <simplesect id="destination_commonoption_log_fifo_size">
            <title>log_fifo_size()</title>
                <indexterm type="parameter">
                    <primary>log_fifo_size()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Use global setting.</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The number of entries in the output buffer (output fifo).</para>
        </simplesect>
        <simplesect id="destination_commonoption_keep_alive">
            <title>keep-alive()</title>
                <indexterm type="parameter">
                    <primary>keep-alive()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies whether connections to destinations should be closed when
                        syslog-ng is restarted (upon the receipt of a SIGHUP signal). Note that this
                        applies to the client (destination) side of the syslog-ng connections,
                        server-side (source) connections are always reopened after receiving a HUP
                        signal unless the <parameter>keep-alive</parameter> option is enabled for
                        the source. When the <parameter>keep-alive</parameter> option is enabled,
                        syslog-ng saves the contents of the output queue of the destination when
                        receiving a HUP signal, thus reducing the risk of losing messages</para>
        </simplesect>
        <simplesect id="destination_commonoption_pad_size">
            <title>pad_size()</title>
                <indexterm type="parameter">
                    <primary>pad_size()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> If set, &abbrev; will pad output messages to the specified size (in bytes). Some operating systems (such as HP-UX) pad all 0
                        messages to block boundary. This option can be used to specify the block
                        size. (HP-UX uses 2048 bytes).</para>
        </simplesect>
        <simplesect id="destination_commonoption_suppress">
            <title>suppress()</title>
                <indexterm type="parameter">
                    <primary>suppress()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>seconds</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0 (disabled)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> If several identical log messages would be sent to the destination
                        without any other messages between the identical messages (for example, an
                        application repeated an error message ten times), syslog-ng can suppress the
                        repeated messages and send the message only once, followed by the
                            <parameter>Last message repeated n times.</parameter> message. The
                        parameter of this option specifies the number of seconds syslog-ng waits for
                        identical messages.</para>
        </simplesect>
                <!--<row id="destination_commonoption_sync_freq">
                    <entry>sync_freq()</entry>
                    <entry>number</entry>
                    <entry>Use global setting. </entry>
                    <entry>This setting is an obsolete alias of the
                        <parameter>flush_lines()</parameter> option. </entry>
                        </row>-->
        <simplesect id="destination_commonoption_template">
            <title>template()</title>
                <indexterm type="parameter">
                    <primary>template()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>A format conforming to the default logfile format.</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies a template defining the logformat to be used in the
                        destination. Macros are described in <xref linkend="reference_macros"/>.
                        Please note that for network destinations it might not be appropriate to
                        change the template as it changes the on-wire format of the syslog protocol
                        which might not be tolerated by stock syslog receivers (like
                            <parameter>syslogd</parameter> or syslog-ng itself). For network
                        destinations make sure the receiver can cope with the custom format defined.</para>
        </simplesect>
        <simplesect id="destination_commonoption_template_escape">
            <title>template_escape()</title>
                <indexterm type="parameter">
                    <primary>template_escape()</primary>
                </indexterm>
            <!-- FIXME ez kell meg? -->
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>yes or no</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Turns on escaping <parameter>'</parameter> and <parameter>"</parameter>
                        in templated output files. This is useful for generating SQL statements and
                        quoting string contents so that parts of the log message are not interpreted
                        as commands to the SQL server.</para>
        </simplesect>
        <simplesect id="destination_commonoption_throttle">
            <title>throttle()</title>
                <indexterm type="parameter">
                    <primary>throttle()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Sets the maximum number of messages sent to the destination per second.
                        Use this output-rate-limiting functionality only when using disk-buffer as
                        well to avoid the risk of losing messages. Specifying
                        <parameter>0</parameter> or a lower value sets the output limit to
                        unlimited.</para>
        </simplesect>
        <simplesect id="destination_commonoption_timezone">
            <title>time_zone()</title>
                <indexterm type="parameter">
                    <primary>time_zone()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>timezone in +/-HH:MM format</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>unspecified</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Convert timestamps to the timezone specified by this option. If this
                        option is not set then the original timezone information in the message is
                        used.</para>
        </simplesect>
        <simplesect id="destination_commonoption_ts_format">
            <title>ts_format()</title>
                <indexterm type="parameter">
                    <primary>ts_format()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>rfc3164, bsd, rfc3339, iso</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>rfc3164</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Override the global timestamp format (set in the global
                            <parameter>ts_format()</parameter> parameter) for the specific
                        destination. See also <xref linkend="example_timezones"/>.</para>
        </simplesect>
    </section>
    
    <!-- Warning on fd limits -->
    <section>
        <title/>
        <warning id="warning-fd-ulimit">
        <indexterm>
            <primary>number of open files</primary>
        </indexterm>
        <indexterm>
            <primary>ulimit</primary>
        </indexterm>
        <indexterm>
            <primary>fd limit</primary>
        </indexterm>
        <indexterm>
            <primary>file descriptors</primary>
        </indexterm>
        <para>When creating several thousands separate log files, syslog-ng might not be able to
            open the required number of files. This might happen for example when using the
                <parameter>$HOST</parameter> macro in the filename while receiving messages from a
            large number of hosts. To overcome this problem, adjust the
            <parameter>--fd-limit</parameter> comman-line parameter of syslog-ng or the global
            ulimit parameter of your host. For setting the <parameter>--fd-limit</parameter>
            comman-line parameter of syslog-ng see the <xref linkend="syslog-ng.8"/> manual page.
            For setting the <parameter>ulimit</parameter> parameter of the host, see the
            documentation of your operating system.</para>
        </warning>
    </section>

    <!-- Relaying note about keep_hostname-->
    <section>
        <title/>
        <note id="note-relaying-hostname">
        <para>By default, the syslog-ng server will treat the relayed messages as if they were
            created by the relay host, not the host that originally sent them to the relay. In order
            to use the original hostname on the syslog-ng server, use the
                <parameter>keep_hostname(yes)</parameter> option both on the syslog-ng relay and the
            syslog-ng relay. This option can be set individually for every source if needed.</para>
        </note>
    </section>
</chapter>
