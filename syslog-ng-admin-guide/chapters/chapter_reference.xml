<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter SYSTEM "../../xml-stylesheet/pdf/dtd/docbookx.dtd"
 [  
<!ENTITY % entities SYSTEM "../syslog-ng-entities.ent">
 %entities;]> 
<chapter id="chapter_reference">
    <title>Reference</title>
    <para>This chapter documents the drivers and options that can be used in the configuration file.
        For details on how to use syslog-ng, see <xref linkend="chapter_configuration"/>.</para>
    <section id="reference_sourcedrivers">
        <title>Source drivers</title>
        <indexterm>
            <primary>source drivers</primary>
            <secondary>reference</secondary>
        </indexterm>
        <section id="reference_source_internal">
            <title>internal()</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>internal()</parameter> driver</secondary>
            </indexterm>
            <para>All messages generated internally by syslog-ng use this special source. To collect
                warnings, errors and notices from syslog-ng itself, include this source in one of
                your source statements. </para>
            <note>
                <para>Internal messages always use the local timezone of the host.</para>
            </note>
            <synopsis>internal()</synopsis>
            <para>This driver does not have any parameters.</para>
            <example id="example_source_internal">
                <title>Using the internal() driver</title>
                <synopsis>source s_local { internal(); };</synopsis>
            </example>
        </section>
        <section id="reference_source_file">
            <title>file()</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>file()</parameter> driver</secondary>
            </indexterm>
            <para>Collects log messages from plain-text files. The file driver has a single required
                parameter specifying the file to open.</para>
            <synopsis>Declaration:
    file(filename);</synopsis>
            <indexterm>
                <primary>wildcards</primary>
                <secondary>in file sources</secondary>
            </indexterm>
            <para id="reference_file_wildcard">In syslog-ng PE, the filename (but not the pathname)
                may include wildcard characters (for example <parameter>*</parameter>). Note that when
                using wildcards in filenames, always set how often syslog-ng should check the file
                for new messages using the <parameter>follow_freq()</parameter> parameter.</para>
            <para id="reference_file_wildcard_inotify">When using wildcards, syslog-ng PE monitors
                every matching file, and can receive new log messages from any of the files.
                However, monitoring (polling) many files (i.e., more than ten) has a significant
                overhead and may affect performance. On Linux this overhead is not so significant,
                because syslog-ng PE uses the inotify feature of the kernel.</para>
            <note>
                <para>If the message does not have a proper syslog header, syslog-ng treats messages
                    received from files as sent by the <parameter>kern</parameter> facility. Use the
                        <parameter>default-facility</parameter> and
                    <parameter>default-priority</parameter> options in the source definition to
                    assign a different facility if needed.</para>
            </note>
            <para>The <parameter>file()</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_default-facility']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_default-priority']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>          
            <simplesect>
                <title>file</title>
                <indexterm type="parameter">
                    <primary>file</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The file to read messages from. Note that only syslog-ng PE
                                supports wildcards in the filename (but not in the pathname). To
                                monitor the subdirectories as well, use the <parameter>
                                    <link linkend="source_file_recursive">recursive </link>
                                </parameter> option.</para>
            
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_encoding']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_follow_freq']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                 <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_timestamp']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>            
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_fetch_limit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_iw_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_msg_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_garbage']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                 <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_optional']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_program_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect id="source_file_recursive">
                <title>recursive</title>
                <indexterm type="parameter">
                    <primary>recursive</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes or no</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>no</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> When enabled, syslog-ng PE monitors every subdirectory of the
                                directory set in the path of the <parameter>file</parameter>
                                parameter, and reads log messages from files with the set filename.
                                The <parameter>recursive</parameter> option can be used together
                                with wildcards in the filename.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_tags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_time_zone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_source_file">
                    <title>Using the file() driver</title>
                    <synopsis>source s_file { file("/var/log/messages"); };</synopsis>
                </example>
                <example>
                    <title>Tailing files</title>
                    <para>The following source checks the <filename>access.log</filename> file every
                    second for new messages.</para>
                    <synopsis>source s_tail { file("/var/log/apache/access.log" 
                    follow_freq(1) flags(no-parse)); };</synopsis>
                </example>
                <example id="example_source_file_wildcard">
                    <title>Using wildcards in the filename</title>
                    <para>The following example monitors every file with the <filename>.log</filename>
                    extension in the <filename>/var/application</filename> directory for log
                    messages. Note that only syslog-ng PE supports wildcards in the file and
                    pathnames.</para>
                    <synopsis>source s_file { file("/var/application/*.log" follow_freq(1));};</synopsis>
                </example>
                <example id="example_source_file_recursive">
                    <title>Monitoring multiple directories</title>
                    <para>The following example reads files having the <parameter>.log</parameter>
                    extension from the <parameter>/var/application/</parameter> directory and its
                    subdirectories. Note that only syslog-ng PE supports recursive directory
                    handling and wildcards in the file and pathnames.</para>
                    <synopsis>source s_file_subdirectories { file("/var/application/*.log"
                    recursive(yes) 
                    follow_freq(1) 
                    log_fetch_limit(100)
                    );};</synopsis>
                </example>
            </simplesect>
        </section>

        <section id="reference_source_pipe">
            <title>pipe()</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>pipe()</parameter> driver</secondary>
            </indexterm>
            <para>The pipe driver opens a named pipe with the specified name and listens for
                messages. It is used as the native message delivery protocol on HP-UX.</para>
            <para>The pipe driver has a single required parameter, specifying the filename of the
                pipe to open.</para>
            <synopsis>Declaration:
    pipe(filename);</synopsis>
            <note>
                <para>As of syslog-ng Premium Edition 3.0.3, pipes are created automatically. In
                    earlier versions, you had to create the pipe using the
                    <command>mkfifo(1)</command> command. </para>
            </note>
            <para>The <parameter>pipe</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_follow_freq']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_timestamp']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_fetch_limit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect> 
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_iw_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>    
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_msg_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_garbage']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_optional']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect> 
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>pipe</title>
                <indexterm type="parameter">
                    <primary>pipe</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The filename of the pipe to read messages from.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_program_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>      
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_tags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_time_zone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_source_pipe">
                    <title>Using the pipe() driver</title>
                    <synopsis>source s_pipe { pipe("/dev/pipe" pad_size(2048)); };</synopsis>
                </example>
            </simplesect>          
        </section>
        <section id="reference_source_program">
            <title>program()</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>program()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>reading messages form external applications</primary>
            </indexterm>
            <para>The program driver starts an external application and reads messages from the
                standard output (stdout) of the application. It is mainly useful to receive log
                messages from daemons that accept incoming messages and convert them to log
                messages.</para>
            <para>The program driver has a single required parameter, specifying the name of the
                application to start.</para>
            <synopsis>Declaration:
    program(filename);</synopsis>
            <note>
                <para>The program is restarted automatically if it exits.</para>
            </note>
            <para>The <parameter>program</parameter> driver has the following options:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_follow_freq']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_timestamp']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_fetch_limit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>         
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_iw_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_msg_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_garbage']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_optional']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>       
            <simplesect>
                <title>program</title>
                <indexterm type="parameter">
                    <primary>program</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>filename with path</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The name of the application to start and read messages from.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_program_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>                
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_tags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_time_zone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_source_program">
                    <title>Using the program() driver</title>
                    <synopsis>source s_program { program("/etc/init.d/mydaemon"); };</synopsis>
                </example>
            </simplesect>        
        </section>
        <section id="reference_source_sunstreams">
            <title>sun-streams() driver</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>sun-streams()</parameter> driver</secondary>
            </indexterm>
            <para>Solaris uses its <parameter>STREAMS</parameter> framework to send messages to the
                    <parameter>syslogd</parameter> process.</para>
            <para>Newer versions of Solaris (2.5.1 and above), use a new IPC in addition to
                    <parameter>STREAMS</parameter>, called door to confirm the delivery of a
                message. The syslog-ng application supports this new IPC mechanism via the
                    <parameter>door()</parameter> option (see below).</para>
            <note>
                <para>The <parameter>sun-streams()</parameter> driver must be enabled when the
                    syslog-ng application is compiled (see <command>./configure
                --help</command>).</para>
            </note>
            <para>The <parameter>sun-streams()</parameter> driver has a single required argument
                specifying the <parameter>STREAMS</parameter> device to open, and the
                    <parameter>door()</parameter> option.</para>
            <synopsis>Declaration:
    sun-streams(name_of_the_streams_device door(filename_of_the_door));</synopsis>
            <!-- FIXME a required argumentnek van neve, hogy a tablazatba belerakhassuk? -->
            <simplesect>
                <title>door()</title>
                <indexterm type="parameter">
                    <primary>door()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>none</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Specifies the filename of a door to open, needed on Solaris above
                                2.5.1.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>               
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_follow_freq']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_timestamp']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>         
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_fetch_limit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>   
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_iw_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_msg_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect> 
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_optional']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>   
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>          
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_program_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>           
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_tags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>     
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_time_zone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_source_sunstreams">
                    <title>Using the sun-streams() driver</title>
                    <synopsis>source s_stream { sun-streams("/dev/log" door("/etc/.syslog_door")); };</synopsis>
                </example>
            </simplesect>
        </section>
        <section id="reference_source_syslog">
            <title>syslog()</title>
            <!-- FIXME update ha lesz syslog6 -->
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>syslog()</parameter> driver</secondary>
            </indexterm>
            <para>This driver enables to receive messages from the network using the new standard
                syslog protocol and message format (see <xref linkend="concepts_message_ietfsyslog"/> for details about the protocol). UDP, TCP, and TLS-encrypted TCP can all be used
                to transport the messages.</para>
            <indexterm>
                <primary>TLS</primary>
            </indexterm>
            <synopsis>Declaration:
    syslog(ip() port() transport() options());</synopsis>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_follow_freq']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect> 
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_host_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_ip']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_ip_tos']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>      
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_ip_ttl']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>            
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_keep_alive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_hostname']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_timestamp']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_fetch_limit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_iw_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>    
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_msg_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>         
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_max_connections']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_garbage']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_optional']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect id="source_option_port">
            <title>port() or localport()</title>
                <indexterm type="parameter">
                    <primary>port() or localport()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>514 for UDP, 601 for TCP, and 6514 for TLS transport</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The port number to bind to.</para>
        </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_program_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_broadcast']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_keepalive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_rcvbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_sndbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_tags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_tcp_keepalive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect> 
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_time_zone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <title>transport</title>
                <indexterm type="parameter">
                    <primary>transport</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>udp, tcp, or tls</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>tcp</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Specifies the protocol used to receive messages from the source.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_tls']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_use_dns']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_use_fqdn']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_source_syslog">
                    <title>Using the syslog() driver</title>
                    <para>TCP source listening on the localhost on port 1999.</para>
                    <synopsis>source s_syslog { syslog(ip(127.0.0.1) port(1999) transport("tcp")); };</synopsis>
                    <para>UDP source with defaults.</para>
                    <synopsis>source s_udp { syslog( transport("udp")); };</synopsis>
                    <para>Encrypted source where the client is also authenticated. See <xref linkend="tlsoptions"/> for details on the encryption settings.</para>
                    <synopsis>source s_syslog_tls{ syslog(
                    ip(10.100.20.40)
                    transport("tls")
                    tls(
                    peer-verify(required-trusted)
                    ca_dir('/opt/syslog-ng/etc/syslog-ng/keys/ca.d/')
                    key_file('/opt/syslog-ng/etc/syslog-ng/keys/server_privatekey.pem')
                    cert_file('/opt/syslog-ng/etc/syslog-ng/keys/server_certificate.pem')
                    )
                    );};</synopsis>
                </example>
            </simplesect>  
        </section>
        <section id="reference_source_tcpudp">
            <title>tcp(), tcp6(), udp() and udp6()</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>tcp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>tcp6()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>udp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>udp6()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>tcp()</parameter>, <parameter>tcp6()</parameter>,
                <parameter>udp()</parameter>, <parameter>udp6()</parameter> drivers can receive
                messages from the network using the TCP and UDP networking protocols. The
                    <parameter>tcp6()</parameter> and <parameter>udp6()</parameter> drivers use the
                IPv6 network protocol, while <parameter>tcp()</parameter> and
                <parameter>udp()</parameter> use IPv4.</para>
            <para>The <parameter>tcp()</parameter> and <parameter>udp()</parameter> drivers do not
                have any required parameters. By default they bind to
                <parameter>0.0.0.0:514</parameter>, which means that syslog-ng will listen on all
                available interfaces, port 514. To limit accepted connections to only one interface,
                use the <parameter>localip()</parameter> parameter as described below. </para>
            <note>
                <para>The tcp port 514 is reserved for use with <command>rshell</command>, so select
                    a different port if syslog-ng and <command>rshell</command> is used at the same
                    time. </para>
            </note>
            <para>If you specify a multicast bind address to <parameter>udp()</parameter> and
                    <parameter>udp6()</parameter>, syslog-ng will automatically join the necessary
                multicast group. TCP does not support multicasting. </para>
            <para>The syslog-ng Premium Edition application supports TLS (Transport Layer Security,
                also known as SSL) for the tcp() and tcp6() drivers. See the TLS-specific options
                below and <xref linkend="tls_serverauth"/> for details.</para>
            <indexterm>
                <primary>TLS</primary>
            </indexterm>
            <synopsis>Declaration:
  tcp([options]);
  udp([options]);</synopsis>
            <para>The following options are valid for <parameter>tcp()</parameter>,
                    <parameter>tcp6()</parameter>, <parameter>udp()</parameter>, and
                    <parameter>udp6()</parameter> drivers: </para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_encoding']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_follow_freq']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_host_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_ip']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_ip_tos']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_ip_ttl']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                 <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_keep_alive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_hostname']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_timestamp']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_fetch_limit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_iw_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_msg_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_max_connections']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_garbage']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_port']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_program_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_broadcast']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_keepalive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_rcvbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_sndbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_tcp_keepalive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_tags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>      
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_time_zone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_tls']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_use_dns']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>   
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_use_fqdn']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_source_tcpudp">
                    <title>Using the udp() and tcp() drivers</title>
                    <para>A simple udp() source with default settings.</para>
                    <synopsis>source s_udp { udp(); };# An UDP source with default settings.</synopsis>
                    <para>A TCP source listening on the localhost interface, with a limited number of
                    connections allowed.</para>
                    <synopsis>source s_tcp { tcp(ip(127.0.0.1) port(1999) max-connections(10)); };</synopsis>
                    <para>A TCP source listening on a TLS-encrypted channel.</para>
                    <synopsis>source s_tcp { tcp(ip(127.0.0.1) port(1999) 
                   tls(peer-verify('required-trusted') 
                       key_file('/opt/syslog-ng/etc/syslog-ng/syslog-ng.key') 
                   cert_file('/opt/syslog-ng/etc/syslog-ng/syslog-ng.crt'))); 
};</synopsis>
                    <para>A TCP source listening for messages using the IETF-syslog message format. Note
                    that for transferring IETF-syslog messages, generally you are recommended to use
                    the <parameter>syslog()</parameter> driver on both the client and the server, as
                    it uses both the IETF-syslog message format and the protocol. See <xref
                        linkend="configuring_sources_syslog"/> for details.</para>
                    <synopsis>source s_tcp_syslog { tcp(ip(127.0.0.1) port(1999) flags(syslog-protocol) ); };</synopsis>
                </example>
            </simplesect>
        </section>
        <section id="reference_source_unixstream">
            <title>unix-stream() and unix-dgram()</title>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>unix-stream()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>source drivers</primary>
                <secondary><parameter>unix-dgram()</parameter> driver</secondary>
            </indexterm>
            <para>These two drivers behave similarly: they open an <parameter>AF_UNIX</parameter>
                socket and start listening on it for messages.</para>
            <para>Both unix-stream and unix-dgram have a single required argument, specifying the
                filename of the socket to create. </para>
            <synopsis>Declaration: 
    unix-stream(filename [options]);
    unix-dgram(filename [options]);</synopsis>
            <para>The following options can be specified for these divers:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_encoding']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_follow_freq']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>        
            <simplesect>
                <title>group()</title>
                <indexterm type="parameter">
                    <primary>group()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>root</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the gid of the socket.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_host_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>keep-alive()</title>
                <indexterm type="parameter">
                    <primary>keep-alive()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes or no</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Selects whether to keep connections open when syslog-ng is
                                restarted; cannot be used with <parameter>unix-dgram()</parameter>.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_timestamp']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>          
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_fetch_limit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_iw_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>      
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_msg_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>         
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_log_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>max-connections()</title>
                <indexterm type="parameter">
                    <primary>max-connections()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>256</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Limits the number of simultaneously open connections. Cannot be
                                used with <parameter>unix-dgram()</parameter>.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_garbage']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_multi_line_prefix']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_optional']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>owner()</title>
                <indexterm type="parameter">
                    <primary>owner()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>root</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the uid of the socket.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>perm()</title>
                <indexterm type="parameter">
                    <primary>perm()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>0666</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the permission mask. For octal numbers prefix the number with
                                '0', for example: use 0755 for rwxr-xr-x.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_program_override']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_broadcast']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_keepalive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>             
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_rcvbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_sndbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_tags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_time_zone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_source_unixstream">
                    <title>Using the unix-stream() and unix-dgram() drivers</title>
                    <synopsis>source s_stream { unix-stream("/dev/log" max-connections(10)); };</synopsis>
                    <synopsis>source s_dgram { unix-dgram("/var/run/log"); };</synopsis>
                </example>
            </simplesect>
        </section>
    </section>

    <section id="reference_destinationdrivers">
        <title>Destination drivers</title>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary>reference</secondary>
        </indexterm>
        <para>Destination drivers output log messages to somewhere outside syslog-ng for example to a file
            or a network socket. </para>

        <section id="reference_destination_file">
            <title>file()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>file()</parameter> driver</secondary>
            </indexterm>
            <para>The file driver outputs messages to the specified text file, or to a set of files. </para>
            <para>The destination filename may include macros which get expanded when the message is
                written, thus a simple <parameter>file()</parameter> driver may create several
                files. For more information on available macros see <xref linkend="reference_macros"/>. </para>
            <warning>
                <xi:include href="reference_common.xml" xpointer="xpointer(//warning[@id = 'warning-fd-ulimit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </warning>
            <para>The <parameter>file()</parameter> destination has the following options:</para>
            <!-- FIXME required parameters?? -->
            <simplesect>
                <title>create_dirs()</title>
                <indexterm type="parameter">
                    <primary>create_dirs()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes or no</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>no</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Enable creating non-existing directories.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-dir-group']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-dir-owner']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-dir-perm']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_lines']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_timeout']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>     
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_frac_digits']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_fsync']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-group']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_local_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>      
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_log_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>overwrite_if_older()</title>
                <indexterm type="parameter">
                    <primary>overwrite_if_older()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>0</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> If set to a value higher than 0, syslog-ng checks when the file
                                was last modified before starting to write into the file. If the
                                file is older than the specified amount of time (in seconds), then
                                syslog-ng removes the existing file and opens a new file with the
                                same name. In combination with for example the
                                <parameter>$WEEKDAY</parameter> macro, this can be used for simple
                                log rotation, in case not all history has to be kept. (Note that in
                                this weekly log rotation example if its Monday 00:01, then the file
                                from last Monday is not seven days old, because it was probably last
                                modified shortly before 23:59 last Monday, so it is actually not
                                even six days old. So in this case, set the
                                    <parameter>overwrite_if_older()</parameter> parameter to
                                a-bit-less-than-six-days, for example, to
                                <parameter>518000</parameter> seconds.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-owner']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-perm']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_suppress']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>   
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template_escape']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_throttle']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_ts_format']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_destination_file">
                    <title>Using the file() driver</title>
                    <synopsis>destination d_file { file("/var/log/messages" ); };</synopsis>
                </example>
                <example id="example_destination_file_macro">
                    <title>Using the file() driver with macros in the file name and a template for the
                    message</title>
                    <synopsis>destination d_file {
        file("/var/log/$YEAR.$MONTH.$DAY/messages"
             template("$HOUR:$MIN:$SEC $TZ $HOST [$LEVEL] $MSG $MSG\n")
             template_escape(no));
};</synopsis>
                </example>
            </simplesect>
        </section>
        <section id="reference_destination_logstore">
            <title>logstore()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>logstore()</parameter> driver</secondary>
            </indexterm>
            <para>The logstore driver stores log messages in binary files that can be encrypted,
                compressed, checked for integrity, and timestamped by an external Timestamping
                Authority (TSA). Otherwise, it is very similar to the <parameter>
                    <link linkend="reference_destination_file">file()</link>
                </parameter> destination.</para>
            <para>To display the contents of a logstore file, use the <command>logcat</command>
                command supplied with syslog-ng, for example <command>logcat
                /var/log/messages.lgs</command>.</para>
            <para>The destination filename may include macros which get expanded when the message is
                written, thus a simple <parameter>logstore()</parameter> driver may create several
                files. For more information on available macros see <xref linkend="reference_macros"/>. </para>
            <warning>
                <xi:include href="reference_common.xml" xpointer="xpointer(//warning[@id = 'warning-fd-ulimit']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </warning>
            <para>The <parameter>logstore()</parameter> has a single required parameter that
                specifies the filename that stores the log messages.</para>
            <synopsis>Declaration:
    logstore(filename options());</synopsis>
            <para>The <parameter>logstore()</parameter> destination has the following options:</para>
            <!-- FIXME logstore-ra se lesz teljesen igaz, lasd http://bugzilla.balabit/bugzilla-3.0/show_bug.cgi?id=13640  -->
      
                <!-- FIXME a file driverrel kozos opciokat xincludolni 
                    Global options for destinations files should be cleaned up
                -->
            <simplesect id="destination-logstore-options-cipher">
                <title>cipher()</title>
                <indexterm type="parameter">
                    <primary>cipher()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry><parameter>aes-128-cbc</parameter></entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the cipher method used to encrypt the logstore. The
                                    following cipher methods are available:
                                    <parameter>aes-128-cbc</parameter>,
                                    <parameter>aes-128-cfb</parameter>,
                                    <parameter>aes-128-cfb1</parameter>,
                                    <parameter>aes-128-cfb8</parameter>,
                                    <parameter>aes-128-ecb</parameter>, <parameter>aes-128-ofb
                                    </parameter>, <parameter>aes-192-cbc</parameter>,
                                        <parameter>aes-192-cfb</parameter>,
                                    <parameter>aes-192-cfb1</parameter>,
                                    <parameter>aes-192-cfb8</parameter>,
                                    <parameter>aes-192-ecb</parameter>, <parameter>aes-192-ofb
                                    </parameter>, <parameter>aes-256-cbc</parameter>,
                                        <parameter>aes-256-cfb</parameter>,
                                    <parameter>aes-256-cfb1</parameter>,
                                    <parameter>aes-256-cfb8</parameter>,
                                    <parameter>aes-256-ecb</parameter>, <parameter>aes-256-ofb
                                    </parameter>, <parameter>aes128 </parameter>, <parameter>aes192
                                    </parameter>, <parameter>aes256</parameter>, <parameter>bf
                                    </parameter>, <parameter>bf-cbc </parameter>,
                                    <parameter>bf-cfb</parameter>, <parameter>bf-ecb </parameter>,
                                        <parameter>bf-ofb </parameter>,
                                    <parameter>blowfish</parameter>, <parameter>cast </parameter>,
                                        <parameter>cast-cbc </parameter>, <parameter>cast5-cbc
                                    </parameter>, <parameter>cast5-cfb</parameter>,
                                        <parameter>cast5-ecb</parameter>, <parameter>cast5-ofb
                                    </parameter>, <parameter>des</parameter>,
                                    <parameter>des-cbc</parameter>, <parameter>des-cfb </parameter>,
                                        <parameter>des-cfb1 </parameter>, <parameter>des-cfb8
                                    </parameter>, <parameter>des-ecb </parameter>,
                                        <parameter>des-ede</parameter>,
                                    <parameter>des-ede-cbc</parameter>, <parameter>des-ede-cfb
                                    </parameter>, <parameter>des-ede-ofb</parameter>,
                                        <parameter>des-ede3 </parameter>,
                                    <parameter>des-ede3-cbc</parameter>,
                                    <parameter>des-ede3-cfb</parameter>,
                                    <parameter>des-ede3-ofb</parameter>, <parameter>des-ofb
                                    </parameter>, <parameter>des3 </parameter>, <parameter>desx
                                    </parameter>, <parameter>desx-cbc</parameter>,
                                    <parameter>rc2</parameter>, <parameter>rc2-40-cbc </parameter>,
                                        <parameter>rc2-64-cbc</parameter>,
                                    <parameter>rc2-cbc</parameter>, <parameter>rc2-cfb</parameter>,
                                        <parameter>rc2-ecb </parameter>,
                                    <parameter>rc2-ofb</parameter>, <parameter>rc4</parameter>, and
                                        <parameter>rc4-40</parameter>. By default, syslog-ng PE uses
                                    the <parameter>aes-128-cbc</parameter> method.</para>
                <para>Note that the size of the digest hash must be equal to or
                                    larger than the key size of the cipher method. For example, to
                                    use the <parameter>aes-256-cbc</parameter> cipher method, the
                                    digest method must be at least <parameter>SHA-256</parameter>.
                                    This option is available in syslog-ng PE 3.1 and later.</para>
            </simplesect>
            <simplesect>
                <title>chunk_size()</title>
                <indexterm type="parameter">
                    <primary>chunk_size()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>128</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> This option is obsolete. Use the <parameter>journal_block_size</parameter> option instead.</para>
                <para>Size of a logstore chunk in kilobytes. Note that this size refers
                                to the compressed size of the chunk. Also, the gzip library used for
                                compressing the messages has a 32k long buffer; messages may not
                                appear in the actual logfile until this buffer is not filled.
                                Logstore chunks are closed when they reach the specified size, or
                                when the time limit set in <parameter>chunk_time</parameter>
                                expires.</para>
            </simplesect>
            <simplesect>
                <title>chunk_time()</title>
                <indexterm type="parameter">
                    <primary>chunk_time()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>5</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> This option is obsolete.</para>
                <para>Time limit in seconds: syslog-ng PE closes the chunk if no new
                                messages arrive until the time limit expires. Logstore chunks are
                                closed when the time limit expires, or when they reach the size
                                specified in the <parameter>chunk_size</parameter> parameter. If the
                                time limit set in the <parameter>time_reap</parameter> parameter
                                expires, the entire file is closed.</para>
            </simplesect>
            <simplesect>
                <title>compress()</title>
                <indexterm type="parameter">
                    <primary>compress()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number between 0-9</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>3</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Compression level. <parameter>0</parameter> means uncompressed
                                files, while 1-9 is the compression level used by gzip
                                (<parameter>9</parameter> means the highest but slowest compression,
                                    <parameter>3</parameter> is usually a good compromise).</para>
            </simplesect>
            <simplesect>
                <title>create_dirs()</title>
                <indexterm type="parameter">
                    <primary>create_dirs()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>yes or no</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>no</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Enable creating non-existing directories.</para>
            </simplesect>
            <simplesect id="destination-logstore-options-digest">
                <title>digest()</title>
                <indexterm type="parameter">
                    <primary>digest()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>SHA-1</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the digest method to use. The following digest methods are
                                    available: <parameter>MD2</parameter>,
                                    <parameter>MD4</parameter>, <parameter>MD5</parameter>,
                                        <parameter>SHA-0 (SHA)</parameter>,
                                    <parameter>SHA-1</parameter>, <parameter>RIPEMD-160</parameter>,
                                        <parameter>SHA-224</parameter>,
                                    <parameter>SHA-256</parameter>, <parameter>SHA-384</parameter>,
                                    and <parameter>SHA-512</parameter>. By default, syslog-ng PE
                                    uses the <parameter>SHA-1</parameter> method.</para>
                <para>Note that the size of the digest hash must be equal to or
                                    larger than the key size of the cipher method. For example, to
                                    use the <parameter>aes-256-cbc</parameter> cipher method, the
                                    digest method must be at least <parameter>SHA-256</parameter>.
                                    This option is available in syslog-ng PE 3.1 and later.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-dir-group']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-dir-owner']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-dir-perm']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>encrypt_certificate()</title>
                <indexterm type="parameter">
                    <primary>encrypt_certificate()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>filename</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>none</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel>Name of a file, that contains an X.509 certificate (and the
                                public key) in PEM format. The syslog-ng application uses this
                                certificate to encrypt the logstore files which can be decrypted
                                using the private key of the certificate.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_frac_digits']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-group']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>journal_block_count()</title>
                <indexterm type="parameter">
                    <primary>journal_block_count()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number (1-255)</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>4</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                 <para><guilabel>Description:</guilabel> The number of blocks in the journal file. If set to <parameter>0</parameter>, syslog-ng will set it to the default value (<parameter>4</parameter>). The maximal value is <parameter>255</parameter>; if <parameter>journal_block_count()</parameter> is set higher than 255 syslog-ng will use the maximum value.</para>
                 <note>
                     <para>By default, journal files are mapped into the memory of the host. To influence the amount of memory addresses used by journal files, see the <link linkend="logstore_option_journal_memory_limit"><parameter>logstore_journal_shmem_threshold()</parameter></link> global option.</para>
                 </note>
                 <example>
                     <xi:include href="reference_common.xml" xpointer="xpointer(//example[@id = 'example-logstore-journal']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                 </example>
            </simplesect>
            <simplesect>
                <title>journal_block_size()</title>
                <indexterm type="parameter">
                    <primary>journal_block_size()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>1048576</entry>
                            </row>
                        </tbody>
                    </tgroup>
                </informaltable>
                 <para><guilabel>Description:</guilabel> The size of blocks (in bytes) in the journal file. The size of the block must be a multiple of the page size: if not, &abbrev; automatically increases it to the next multiple of the page size. The maximum size of a journal block is 32MB, the minimum size is 256KB. If the value specified as <parameter>journal_block_size()</parameter> is lower than minimum size or higher than the maximum size, &abbrev; will use the minimum or maximum size, respectively.</para>
                 <note>
                     <itemizedlist>
                         <listitem>
                             <para>At least one journal block for every logstore file open is mapped into the memory. For details on logstore journals, see <xref linkend="concepts_logstore_journal"/>.</para>
                         </listitem>
                         <listitem>
                             <para>The size of the journal block is not equal with the size of logstore chunks, because the records in the logstore file can be encrypted or compressed.</para>
                         </listitem>
                     </itemizedlist>
                 </note>
                 <example>
                     <xi:include href="reference_common.xml" xpointer="xpointer(//example[@id = 'example-logstore-journal']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                 </example>
            </simplesect>
            
                        <!-- Currently not implemented for logstore destinations.
                        <xi:include href="reference_common.xml"
                            xmlns:xi="http://www.w3.org/2001/XInclude"
                            xpointer="xpointer(//simplesect[@id = 'destination_commonoption_log_fifo_size)"/>
                         -->
                        
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-owner']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-file-logstore-common-perm']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
<!-- FIXME uncomment when the B02983 backlog item is released
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_suppress']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>       -->
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>time_reap()</title>
                <indexterm type="parameter">
                    <primary>time_reap()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>60</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The time to wait in seconds before an idle destination file is
                                closed.</para>
            </simplesect>
            <simplesect>
                <title>timestamp-freq()</title>
                <indexterm type="parameter">
                    <primary>timestamp-freq()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number in seconds</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Use global setting.</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The minimum time that should expire between two timestamping
                                requests. When syslog-ng closes a chunk, it checks how much time has
                                expired since the last timestamping request: if it is higher than
                                the value set in the <parameter>timestamp-freq</parameter>
                                parameter, it requests a new timestamp from the authority set in the
                                    <parameter>timestamp-url</parameter> parameter.</para>
            </simplesect>
            <simplesect>
                <title>timestamp-policy()</title>
                <indexterm type="parameter">
                    <primary>timestamp-policy()</primary>
                </indexterm>
                <indexterm>
                    <primary>timestamping</primary>
                    <secondary>OID</secondary>
                </indexterm>
                <indexterm>
                    <primary>timestamping</primary>
                    <secondary>policies</secondary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> If the Timestamping Server has timestamping policies configured,
                                specify the OID of the policy to use with this parameter.
                                &abbrev; will include this ID in the timestamping requests sent
                                to the TSA. This option is available in syslog-ng PE 3.1 and
                            later.</para>
            </simplesect>
            <simplesect>
                <title>timestamp-url()</title>
                <indexterm type="parameter">
                    <primary>timestamp-url()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>Use global setting.</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The URL of the Timestamping Authority used to request timestamps
                                to sign logstore chunks. Note that &abbrev; currently supports
                                only Timestamping Authorities that conform to <emphasis>RFC3161
                                    Internet X.509 Public Key Infrastructure Time-Stamp
                                Protocol</emphasis>, other protocols like <emphasis>Microsoft
                                Authenticode Timestamping</emphasis> are not supported.</para>
                <indexterm>
                    <primary>timestamping</primary>
                    <secondary>Microsoft Authenticode Timestamping</secondary>
                </indexterm>
                <indexterm>
                    <primary>timestamping</primary>
                    <secondary>RFC3161</secondary>
                </indexterm>
            </simplesect>       
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_ts_format']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_destination_logstore">
                    <title>Using the logstore() driver</title>
                    <para>A simple example saving and compressing log messages.</para>
                    <synopsis>destination d_logstore { logstore("/var/log/messages.lgs" compress(5) ); };</synopsis>
                    <para>A more detailed example that encrypts messages, modifies the parameters for
                    closing chunks, and sets file privileges.</para>
                    <synopsis>destination d_logstore { logstore("/var/log/messages-logstore.lgs"
    encrypt_certificate("/opt/syslog-ng/etc/syslog-ng/keys/10-100-20-40/public-certificate-of-the-server.pem")			
    owner("balabit")
    group("balabit")
    perm(0777)
); };</synopsis>
                <para>The URL to the Timestamping Authority and if needed, the OID of the timestamping policy can be set as global options, or also per logstore destination. The following example specifies the URL and the OID as global options:</para>
                <synopsis>options {
        timestamp_url("http://10.50.50.50:8080/");
        timestamp_policy("0.4.0.2023.1.1");
};</synopsis>
                </example>
            </simplesect>  
        </section>
        <section id="reference_destination_pipe">
            <title>pipe()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>pipe()</parameter> driver</secondary>
            </indexterm>
            <para>This driver sends messages to a named pipe like
                <filename>/dev/xconsole</filename>. </para>
            <para>The pipe driver has a single required parameter, specifying the filename of the
                pipe to open. The filename can include macros.</para>
            <synopsis>Declaration:
    pipe(filename);</synopsis>
            <warning>
                <para>As of syslog-ng Premium Edition 3.0.3, pipes are created automatically. In
                    earlier versions, you had to create the pipe using the
                    <command>mkfifo(1)</command> command. </para>
            </warning>
            <para>The <parameter>pipe()</parameter> destination has the following options:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_lines']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_timeout']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_frac_digits']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <title>group()</title>
                <indexterm type="parameter">
                    <primary>group()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>root</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the group of the pipe to the one specified.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_log_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>owner()</title>
                <indexterm type="parameter">
                    <primary>owner()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>root</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Set the owner of the pipe to the one specified.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_pad_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>perm()</title>
                <indexterm type="parameter">
                    <primary>perm()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>0600</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel>The permission mask of the pipe. For octal numbers prefix the
                                number with '0', for example: use 0755 for rwxr-xr-x.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_suppress']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template_escape']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_throttle']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_ts_format']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_destination_pipe">
                    <title>Using the pipe() driver</title>
                    <synopsis>destination d_pipe { pipe("/dev/xconsole"); };</synopsis>
                </example>
            </simplesect>
        </section>
        <section id="reference_destination_program">
            <title>program()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>program()</parameter> driver</secondary>
            </indexterm>
            <para>This driver starts an external application or script and sends the log messages to
                its standard input (<parameter>stdin</parameter>). </para>
            <para>The <parameter>program()</parameter> driver has a single required parameter,
                specifying a program name to start.</para>
            <synopsis>Declaration: 
    program(command_to_run);</synopsis>
            <para>The <parameter>program()</parameter> destination has the following options:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_lines']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_timeout']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_frac_digits']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_log_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_suppress']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template_escape']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_throttle']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_ts_format']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_destination_program">
                    <title>Using the program() destination driver</title>
                    <synopsis>destination d_prog { program("/bin/script" template("&lt;$PRI&gt;$DATE $HOST $MSG\n"); ); };</synopsis>
                </example>
            </simplesect>
        </section>
        <section id="reference_destination_sql">
            <title>sql()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>sql()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary>database driver</secondary>
            </indexterm>
            <para>This driver sends messages into an SQL database. The <parameter>sql()</parameter>
                driver has the following required parameters: <parameter>type</parameter>,
                <parameter>database</parameter>, <parameter>table</parameter>,
                <parameter>columns</parameter>, <parameter>values</parameter>.</para>
            <!-- FIXME melyek a kotelezo parameterek? -->
            <synopsis>Declaration: 
    sql(database_type host_parameters database_parameters [options]);</synopsis>
            <para>The <parameter>sql()</parameter> destination has the following options:</para>
            <simplesect id="sql_option_columns">
                <title>columns</title>
                <indexterm type="parameter">
                    <primary>columns</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string list</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>"date", "facility", "level", "host", "program", "pid", "message"</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Name of the columns storing the data in <parameter>fieldname
                                [dbtype]</parameter> format. The <parameter>[dbtype]</parameter>
                                parameter is optional, and specifies the type of the field. By
                                default, syslog-ng creates <parameter>text</parameter> columns. Note
                                that not every database engine can index text fields.</para>
            </simplesect>
            <simplesect id="sql_option_database">
                <title>database</title>
                <indexterm type="parameter">
                    <primary>database</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>n/a</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Name of the database that stores the logs.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_frac_digits']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>host</title>
                <indexterm type="parameter">
                    <primary>host</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>hostname or IP address</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>n/a</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Hostname of the database server. Note that Oracle destinations do
                                not use this parameter, but retrieve the hostname from the
                                <filename>/etc/tnsnames.ora</filename> file.</para>
            </simplesect>
            <simplesect id="sql_option_indexes">
                <title>indexes</title>
                <indexterm type="parameter">
                    <primary>indexes</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string list</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>"date", "facility", "host", "program"</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The list of columns that are indexed by the database to speed up
                                searching. To disable indexing for the destination, include the
                                empty <parameter>indexes()</parameter> parameter in the destination,
                                simply omitting the <parameter>indexes</parameter> parameter will
                                cause syslog-ng to request indexing on the default columns.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_local_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'diskbuffer_option_log_disk_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_log_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect id="sql_option_null">
                <title>null</title>
                <indexterm type="parameter">
                    <primary>null</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry/>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> If the content of a column matches the string specified in the
                                <parameter>null()</parameter> parameter, the contents of the
                                column will be replaced with an SQL NULL value. If unset (by
                                default), the option does not match on any string. See the <xref
                                    linkend="example_destination_sql_null"/> for details.</para>
            </simplesect>
            <simplesect>
                <title>password</title>
                <indexterm type="parameter">
                    <primary>password</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>n/a</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Password of the database user.</para>
            </simplesect>
            <simplesect id="sql_option_table">
                <title>table</title>
                <indexterm type="parameter">
                    <primary>table</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>n/a</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Name of the database table to use (can include macros). When
                                using macros, note that some databases limit the length of table
                                names.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect id="sql_option_type">
                <title>type</title>
                <indexterm type="parameter">
                    <primary>type</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>mssql, mysql, oracle, pgsql, or sqlite3</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>n/a</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Specifies the type of the database, i.e., the DBI database driver
                                to use. Use the <parameter>mssql</parameter> option to send logs to
                                an MSSQL database. See the examples of the databases on the
                                following sections for details.</para>
            </simplesect>
            <simplesect>
                <title>username</title>
                <indexterm type="parameter">
                    <primary>username</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>n/a</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Name of the database user.</para>
            </simplesect>
            <simplesect id="sql_option_values">
                <title>values</title>
                <indexterm type="parameter">
                    <primary>values</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>string list</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>"${R_YEAR}-${R_MONTH}-${R_DAY} ${R_HOUR}:${R_MIN}:${R_SEC}",
                                "$FACILITY", "$LEVEL", "$HOST", "$PROGRAM", "$PID", "$MSGONLY"</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel>The parts of the message to store in the fields specified in the
                                <parameter>columns</parameter> parameter.</para>
            </simplesect>
            <note>
                <para>If you specify <parameter>host="localhost"</parameter>, syslog-ng will use a
                    socket to connect to the local database server. Use
                    <parameter>host="127.0.0.1"</parameter> to force TCP communication between
                    syslog-ng and the local database server.</para>
                <para>To specify the socket to use, set and export the
                    <parameter>MYSQL_UNIX_PORT</parameter> environment variable, for example
                    <command>MYSQL_UNIX_PORT=/var/lib/mysql/mysql.sock; export
                        MYSQL_UNIX_PORT</command>.</para>
            </note>
            <example id="example_destination_sql">
                <title>Using the sql() driver</title>
                <indexterm>
                    <primary>destinations</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <indexterm>
                    <primary>PostgreSQL</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <para>The following example sends the log messages into a PostgreSQL database
                    running on the <parameter>logserver</parameter> host. The messages are inserted
                    into the <parameter>logs</parameter> database, the name of the table includes
                    the exact date and the name of the host sending the messages. The syslog-ng
                    application automatically creates the required tables and columns, if the user
                    account used to connect to the database has the required privileges.</para>
                <synopsis>destination d_sql { 
  sql(type(pgsql)
  host("logserver") username("syslog-ng") password("password")
  database("logs")
  table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
  columns("datetime", "host", "program", "pid", "message")
  values("$R_DATE", "$HOST", "$PROGRAM", "$PID", "$MSGONLY")
  indexes("datetime", "host", "program", "pid", "message"));
  };</synopsis>
                <para>The following example specifies the type of the database columns as well:</para>
                <synopsis>destination d_sql { 
  sql(type(pgsql)
  host("logserver") username("syslog-ng") password("password")
  database("logs")
  table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
  columns("datetime varchar(16)", "host varchar(32)", "program  varchar(20)", "pid varchar(8)", "message  varchar(200)")
  values("$R_DATE", "$HOST", "$PROGRAM", "$PID", "$MSGONLY")
  indexes("datetime", "host", "program", "pid", "message"));
};</synopsis>
            </example>
            <example id="example_destination_sql_oracle">
                <title>Using the sql() driver with an Oracle database</title>
                <indexterm>
                    <primary>destinations</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <indexterm>
                    <primary>Oracle</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <para>The following example sends the log messages into an Oracle database running
                    on the <parameter>logserver</parameter> host, which must be set in the
                    <filename>/etc/tnsnames.ora</filename> file. The messages are inserted into
                    the <parameter>LOGS</parameter> database, the name of the table includes the
                    exact date when the messages were sent. The syslog-ng application automatically
                    creates the required tables and columns, if the user account used to connect to
                    the database has the required privileges.</para>
                <synopsis>destination d_sql { 
  sql(type(oracle)
  username("syslog-ng") password("password")
  database("LOGS")
  table("msgs_${R_YEAR}${R_MONTH}${R_DAY}")
  columns("datetime varchar(16)", "host varchar(32)", "program varchar(32)", "pid varchar(8)", "message varchar2")                        
  values("$R_DATE", "$HOST", "$PROGRAM", "$PID", "$MSGONLY")
  indexes("datetime", "host", "program", "pid", "message"));
  };</synopsis>
                <para>The Oracle Instant Client retrieves the address of the database server from
                    the <filename>/etc/tnsnames.ora</filename> file. Edit or create this file as
                    needed for your configuration. A sample is provided below.</para>
                <synopsis>LOGS =
(DESCRIPTION =
(ADDRESS_LIST =
(ADDRESS = (PROTOCOL = TCP)
(HOST = logserver)
(PORT = 1521))
)
(CONNECT_DATA =
(SERVICE_NAME = EXAMPLE.SERVICE)
)
)</synopsis>
            </example>
            <example id="example_destination_sql_mssql">
                <title>Using the sql() driver with an MSSQL database</title>
                <indexterm>
                    <primary>destinations</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <indexterm>
                    <primary>MSSQL</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <para>The following example sends the log messages into an MSSQL database running on
                    the <parameter>logserver</parameter> host. The messages are inserted into the
                    <parameter>syslogng</parameter> database, the name of the table includes the
                    exact date when the messages were sent. The syslog-ng application automatically
                    creates the required tables and columns, if the user account used to connect to
                    the database has the required privileges.</para>
                <synopsis>destination d_mssql { 
sql(type(mssql) host("logserver") port("1433") 
  username("syslogng") password("syslogng") database("syslogng") 
  table("msgs_${R_YEAR}${R_MONTH}${R_DAY}")columns("datetime varchar(16)", "host varchar(32)",
  "program varchar(32)", "pid varchar(8)", "message varchar(4096)")
  values("$R_DATE", "$HOST", "$PROGRAM", "$PID", "$MSGONLY")
  indexes("datetime", "host", "program", "pid", "message"));
  };</synopsis>
                <para>The date format used by the MSSQL database must be explicitly set in the
                    <filename>/etc/locales.conf</filename> file of the syslog-ng server. Edit or
                    create this file as needed for your configuration. A sample is provided below.</para>
                <synopsis>[default]
date = "%Y-%m-%d %H:%M:%S"</synopsis>
            </example>
            <example id="example_destination_sql_null">
                <title>Using SQL NULL values</title>
                <indexterm>
                    <primary>destinations</primary>
                    <secondary>sql() configuration</secondary>
                </indexterm>
                <indexterm>
                    <primary>SQL NULL values</primary>
                </indexterm>
                <para>The <parameter>null()</parameter> parameter of the SQL driver can be used to
                    replace the contents of a column with a special SQL NULL value. To replace every
                    column that contains an empty string with NULL, use the
                    <parameter>null("")</parameter> option, for example</para>
                <synopsis>destination d_sql { 
                    sql(type(pgsql)
                    host("logserver") username("syslog-ng") password("password")
                    database("logs")
                    table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
                    columns("datetime", "host", "program", "pid", "message")
                    values("$R_DATE", "$HOST", "$PROGRAM", "$PID", "$MSGONLY")
                    indexes("datetime", "host", "program", "pid", "message")
                    null(""));                    
                    };</synopsis>
                <para>To replace only a specific column (for example <parameter>pid</parameter>) if it is
                    empty, assign a default value to the column, and use this default value in the
                    <parameter>null()</parameter> parameter:</para>
                <synopsis>destination d_sql { 
                    sql(type(pgsql)
                    host("logserver") username("syslog-ng") password("password")
                    database("logs")
                    table("messages_${HOST}_${R_YEAR}${R_MONTH}${R_DAY}")
                    columns("datetime", "host", "program", "pid", "message")
                    values("$R_DATE", "$HOST", "$PROGRAM", "${PID:-@@NULL@@}", "$MSGONLY")
                    indexes("datetime", "host", "program", "pid", "message")
                    null("@@NULL@@"));                    
                    };</synopsis>
                <para>Ensure that the default value you use does not appear in the actual log
                    messages, because other occurrences of this string will be replaced with NULL as
                    well.</para>
            </example>
        </section>

        <section id="reference_destination_syslog">
            <title>syslog()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>syslog()</parameter> driver</secondary>
            </indexterm>
            <para>The <parameter>syslog()</parameter> driver sends messages to a remote host (for example
                a syslog-ng server or relay) on the local intranet or internet using the new
                standard syslog protocol developed by IETF (see <xref
                    linkend="concepts_message_ietfsyslog"/> for details about the protocol). The
                protocol supports sending messages using the UDP, TCP, or the encrypted TLS
                networking protocols.</para>
            <para>The required arguments of the driver are the address of the destination host
                (where messages should be sent) and the transport method (networking protocol). </para>
            <para>The <parameter>udp</parameter> transport method
                <!-- FIXME ez erre a driverre is igaz? --> automatically sends multicast packets if
                a multicast destination address is specified. The <parameter>tcp</parameter> and
                <parameter>tls</parameter> methods do not support multicasting.</para>
            <synopsis>Declaration:
    syslog(host transport [options]);</synopsis>
            <para id="table_destination_syslog_options">These destinations have the following options:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-failover']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example-failover-server-syslog">
                <title>Specifying failover servers for syslog() destinations</title>
                <para>The following example specifies two failover servers for a simple syslog() destination.</para>
                <synopsis>destination d_syslog_tcp{
                syslog("10.100.20.40"
                transport("tcp")
                port(6514)
                failover_servers("10.2.3.4", "myfailoverserver")
                );};</synopsis>
                <para>The following example specifies a failover server for a TLS destination.</para>
                <synopsis>destination d_syslog_tls{
                syslog("10.100.20.40"
                transport("tls")
                port(6514)
                failover_servers("10.2.3.4", "myfailoverserver")
                tls(peer-verify(required-trusted)
                ca_dir('/opt/syslog-ng/etc/syslog-ng/keys/ca.d/')
                key_file('/opt/syslog-ng/etc/syslog-ng/keys/client_key.pem')
                cert_file('/opt/syslog-ng/etc/syslog-ng/keys/client_certificate.pem'))
                );};</synopsis>
            </example>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_lines']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_timeout']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_frac_digits']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_ip_tos']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_ip_ttl']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_keep_alive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_localip']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>  
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_localport']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'diskbuffer_option_log_disk_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_log_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect id="destination_option_port">
                <title>port() or destport()</title>
                <indexterm type="parameter">
                    <primary>port() or destport()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>number</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>514 for UDP, 601 for TCP, and 6514 for TLS transport</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The port number to connect to.</para>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_broadcast']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_keepalive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_rcvbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_sndbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_spoof_source']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_suppress']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template_escape']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_throttle']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_tls']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <title>transport</title>
                <indexterm type="parameter">
                    <primary>transport</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                        <tbody>
                            <row>
                                <entry>Type:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>udp, tcp, or tls</entry>
                            </row>
                            <row>
                                <entry>Default:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>tcp</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Specifies the protocol used to receive messages from the source.</para>
                </simplesect>
                <simplesect>
                    <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_ts_format']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                    <example id="example_destination_syslog">
                        <title>Using the syslog() driver</title>
                        <synopsis>destination d_tcp { syslog(ip"10.1.2.3" transport("tcp") port(1999) localport(999)); };</synopsis>
                        <para>If name resolution is configured, the hostname of the target server can be
                        used as well.</para>
                        <synopsis>destination d_tcp { syslog(ip"target_host" transport("tcp") port(1999) localport(999)); };</synopsis>
                        <para>Send the log messages using TLS encryption and use mutual authentication. See
                            <xref linkend="tlsoptions"/> for details on the encryption and
                        authentication options.</para>
                        <synopsis>destination d_syslog_tls{ 
                syslog("10.100.20.40"
                transport("tls")
                port(6514)
                tls(peer-verify(required-trusted)
                ca_dir('/opt/syslog-ng/etc/syslog-ng/keys/ca.d/')
                key_file('/opt/syslog-ng/etc/syslog-ng/keys/client_key.pem')
                cert_file('/opt/syslog-ng/etc/syslog-ng/keys/client_certificate.pem'))
                );};</synopsis>
                    </example>
                    </simplesect>
        </section>

        <section id="reference_destination_tcpudp">
            <title>tcp(), tcp6(), udp(), and udp6()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>tcp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>tcp6()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>udp()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>udp6()</parameter> driver</secondary>
            </indexterm>
            <para>This driver sends messages to another host on the local intranet or internet using
                the UDP or TCP protocol. The <parameter>tcp6()</parameter> and
                <parameter>udp6()</parameter> drivers use the IPv6 network protocol.</para>
            <para>Both drivers have a single required argument specifying the destination host
                address, where messages should be sent, and several optional parameters. Note that
                this differs from source drivers, where local bind address is implied, and none of
                the parameters are required. </para>
            <para>The <parameter>udp()</parameter> and <parameter>udp6()</parameter> drivers
                automatically send multicast packets if a multicast destination address is
                specified. The <parameter>tcp()</parameter> and <parameter>tcp6()</parameter>
                drivers do not support multicasting.</para>
            <synopsis>Declaration:
    tcp(host [options]);
    udp(host [options]);
    tcp6(host [options]);
    udp6(host [options]);</synopsis>
                <example id="example_destination_tcpudp">
                    <title>Using the tcp() driver</title>
                    <synopsis>destination d_tcp { tcp("10.1.2.3" port(1999) localport(999)); };</synopsis>
                    <para>If name resolution is configured, the hostname of the target server can be
                    used as well.</para>
                    <synopsis>destination d_tcp { tcp("target_host" port(1999) localport(999)); };</synopsis>
                    <para>To send messages using the IETF-syslog message format without using the IETF-syslog protocol, enable the <parameter>syslog-protocol</parameter> flag:</para>
                    <synopsis>destination d_tcp { tcp("10.1.2.3" port(1999) flags(syslog-protocol) ); };</synopsis>
                    <para>(To use the IETF-syslog protocol, see <xref linkend="reference_destination_syslog"/>.)</para>
                </example>
            <para id="table_destination_tcp_options">These destinations have the following options:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination-failover']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example-failover-server-tcp">
                <title>Specifying failover servers for tcp() destinations</title>
                <para>The following example specifies two failover servers for a simple TCP destination.</para>
                <synopsis>destination d_tcp { tcp("10.1.2.3" port(1999) failover_servers("10.2.3.4", "third-logserver.example.com"); };</synopsis>
                <para>The following example specifies a failover server for a TLS destination.</para>
                <synopsis>destination d_tcp {
         tcp("10.100.20.40" port(8989)
                 failover_servers("10.2.3.4")
                 tls(peer-verify(required-trusted)
                 ca_dir('/opt/syslog-ng/etc/keys/cas/')
                 key_file('/opt/syslog-ng/etc/keys/client-key.pem')
                 cert_file('/opt/syslog-ng/etc/keys/client-pubcert.pem')));
};</synopsis>
            </example>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_lines']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_timeout']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_frac_digits']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_ip_tos']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_ip_ttl']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_keep_alive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_localip']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_localport']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'diskbuffer_option_log_disk_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_diskbuffer">
                    <title>Enabling disk-based buffering</title>
                    <para>The following example turns on disk-based buffering for the destination. The
                    size of the disk buffer is 4 194 304 bytes (4 megabytes). In a worst-case
                    situation, using the default value of the <parameter>log_msg_size()</parameter>
                    parameter (8192 bytes), this disk buffer can store at least 512 messages.
                    Typical log messages are about 300-500 bytes long, so a disk buffer of 4
                    megabytes can store over 8000 messages. Set the size of the disk buffer based on
                    the average size and number of messages, and the longest estimated downtime of
                    the server. </para>
                    <synopsis>destination d_tcp { 
                    tcp("10.1.2.3" port(1999) log_disk_fifo_size(4194304)); };</synopsis>
                </example>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_log_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_port']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect> 
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_broadcast']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_keepalive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_rcvbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_sndbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_spoof_source']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_suppress']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template_escape']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_throttle']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_tls']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect> 
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_ts_format']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
        </section>

        <section id="reference_destination_unixstream">
            <title>unix-stream() &amp; unix-dgram()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>unix-stream()</parameter> driver</secondary>
            </indexterm>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>unix-dgram()</parameter> driver</secondary>
            </indexterm>
            <para>These drivers send messages to a unix socket in either
                <parameter>SOCK_STREAM</parameter> or <parameter>SOCK_DGRAM</parameter> mode. </para>
            <para>Both drivers have a single required argument specifying the name of the socket to
                connect to. </para>
            <synopsis>Declaration: 
    unix-stream(filename [options]);
    unix-dgram(filename [options]);</synopsis>
            <para>The <parameter>unix-stream()</parameter> and <parameter>unix-dgram()</parameter>
            destinations have the following options:</para>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flags']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_lines']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_flush_timeout']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_frac_digits']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_log_fifo_size']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_keep_alive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_broadcast']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_option_so_keepalive']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_rcvbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_option_so_sndbuf']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_suppress']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_template_escape']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect> 
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_throttle']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
            </simplesect>
            <simplesect>
                <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_ts_format']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
                <example id="example_destination_unixstream">
                    <title>Using the unix-stream() driver</title>
                    <synopsis>destination d_unix_stream { unix-stream("/var/run/logs"); };</synopsis>
                </example>
            </simplesect>
        </section>
        <section id="reference_destination_usertty">
            <title>usertty()</title>
            <indexterm>
                <primary>destination drivers</primary>
                <secondary><parameter>usertty()</parameter> driver</secondary>
            </indexterm>
            <para>This driver writes messages to the terminal of a logged-in user. </para>
            <para>The <parameter>usertty()</parameter> driver has a single required argument,
                specifying a username who should receive a copy of matching messages. </para>
            <synopsis>Declaration: 
    usertty(username);</synopsis>
            <para>The <parameter>usertty()</parameter> does not have any further options nor does it
                support templates.</para>
            <example>
                <title>Using the usertty() driver</title>
                <synopsis>destination d_usertty { usertty("root"); };</synopsis>
            </example>
        </section>
    </section>
  
    <section id="reference_logflags">
        <title>Log path flags</title>
        <para>Flags influence the behavior of syslog-ng, and the way it processes messages. The
            following flags may be used in the log paths, as described in <xref linkend="logpath"/>.</para>
        <table id="logflags">
            <title>Log statement flags</title>
            <indexterm>
                <primary>log paths</primary>
                <secondary>flags</secondary>
            </indexterm>
            <indexterm>
                <primary>flags</primary>
            </indexterm>
            <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                <thead>
                    <row>
                        <entry>Flag</entry>
                        <entry>Description</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>catchall</entry>
                        <entry>This flag means that the source of the message is ignored, only the
                            filters are taken into account when matching messages. A log statement
                            using the <parameter>catchall</parameter> flag processes every message
                            that arrives to any of the defined sources.</entry>
                    </row>
                    <row>
                        <entry>fallback</entry>
                        <entry>This flag makes a log statement 'fallback'. Fallback log statements
                            process messages that were not processed by other, 'non-fallback' log
                            statements. </entry>
                    </row>
                    <row>
                        <entry>final</entry>
                        <entry>This flag means that the processing of log messages processed by the
                            log statement ends here, other log statements appearing later in the
                            configuration file will not process the messages processed by the log
                            statement labeled as 'final'. Note that this does not necessarily mean
                            that matching messages will be stored only once, as there can be
                            matching log statements processed prior the current one. </entry>
                    </row>
                    <row>
                        <entry>flow-control</entry>
                        <entry>Enables flow-control to the log path, meaning that syslog-ng will
                            stop reading messages from the sources of this log statement if the
                            destinations are not able to process the messages at the required speed.
                            If disabled, syslog-ng will drop messages if the destination queues are
                            full. If enabled, syslog-ng will only drop messages if the destination
                            queues/window sizes are improperly sized. </entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        <warning id="warning_embedded_log_flags">
            <para>The <parameter>final</parameter>, <parameter>fallback</parameter>, and
                <parameter>catchall</parameter> flags apply only for the top-level log paths,
                they have no effect on embedded log paths.</para>
        </warning>
        <example id="example_logpath_flags">
            <title>Using log path flags</title>
            <!--<para>The following log path processes every message received to the
                <parameter>s_localhost</parameter> source that was not processed by earlier log
                paths. As syslog-ng processes log paths in the order they appear in the
                configuration file, place such log paths at the end of the file. A typical situation
                is to use filters to select the most important messages and send them to specific
                destinations, and process the remaining messages with a fallback log path.</para>
                <synopsis>.
                .
                .
                log { source(s_localhost); destination(d_tcp); flags(fallback); };</synopsis>-->
            <para>Let's suppose that you have two hosts (<parameter>myhost_A</parameter> and
                <parameter>myhost_B</parameter>) that run two applications each
                (<parameter>application_A</parameter> and <parameter>application_B</parameter>),
                and you collect the log messages to a central syslog-ng server. On the server, you
                create two log paths:</para>
            <itemizedlist>
                <listitem>
                    <para>one that processes only the messages sent by
                        <parameter>myhost_A</parameter>; and</para>
                </listitem>
                <listitem>
                    <para>one that processes only the messages sent by
                        <parameter>application_A</parameter>.</para>
                </listitem>
            </itemizedlist>
            <para>This means that messages sent by <parameter>application_A</parameter> running on
                <parameter>myhost_A</parameter> will be processed by both log paths, and the
                messages of <parameter>application_B</parameter> running on
                <parameter>myhost_B</parameter> will not be processed at all.</para>
            <itemizedlist>
                <listitem>
                    <para>If you add the <parameter>final</parameter> flag to the first log path,
                        then only this log path will process the messages of
                        <parameter>myhost_A</parameter>, so the second log path will receive only
                        the messages of <parameter>application_A</parameter> running on
                        <parameter>myhost_B</parameter>. </para>
                </listitem>
                <listitem>
                    <para>If you create a third log path that includes the
                        <parameter>fallback</parameter> flag, it will process the messages not
                        processed by the first two log paths, in this case, the messages of
                        <parameter>application_B</parameter> running on
                        <parameter>myhost_B</parameter>.</para>
                </listitem>
                <listitem>
                    <para>Adding a fourth log path with the <parameter>catchall</parameter> flag
                        would process every message received by the syslog-ng server.</para>
                    <synopsis>log { source(s_localhost); destination(d_file); flags(catchall); };</synopsis>
                </listitem>
            </itemizedlist>
        </example>
    </section>
    
    <section id="reference_filters">
        <title>Filter functions</title>
        <indexterm>
            <primary>filters</primary>
            <secondary>reference</secondary>
        </indexterm>
        <para>The following functions may be used in the filter statement, as described in <xref linkend="filters"/>.</para>
        <simplesect id="filterfunc">
            <title>facility()</title>
                <indexterm type="parameter">
                    <primary>facility()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>facility(facility[,facility])</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Match messages having one of the listed facility code. An alternate
                            syntax permits the use an arbitrary facility codes.</para>
            <indexterm>
            <primary>filters</primary>
            <secondary>facilities, </secondary>
        </indexterm>
        <para>The <parameter>facility()</parameter> filter accepts both the name and the numerical
            code of the facility or the importance level. The syslog-ng application recognizes the
            following facilities: (Note that some of these facilities are available only on specific
            platforms.)</para>
        <!-- FIXME authpriv -->
        <table>
            <title>syslog Message Facilities recognized by the facility() filter</title>
            <?dbfo keep-together="auto" ?>
            <indexterm>
                <primary>facilities</primary>
            </indexterm>
            <indexterm>
                <primary>message facilities</primary>
            </indexterm>
            <tgroup cols="3">
                <thead>
                    <row>
                        <entry>Numerical Code</entry>
                        <entry>Facility name</entry>
                        <entry>Facility</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry>0</entry>
                        <entry>kern</entry>
                        <entry>kernel messages</entry>
                    </row>
                    <row>
                        <entry>1</entry>
                        <entry>user</entry>
                        <entry>user-level messages</entry>
                    </row>
                    <row>
                        <entry>2</entry>
                        <entry>mail</entry>
                        <entry>mail system</entry>
                    </row>
                    <row>
                        <entry>3</entry>
                        <entry>daemon</entry>
                        <entry>system daemons</entry>
                    </row>
                    <row>
                        <entry>4</entry>
                        <entry>auth</entry>
                        <entry>security/authorization messages</entry>
                    </row>
                    <row>
                        <entry>5</entry>
                        <entry>syslog</entry>
                        <entry>messages generated internally by syslogd</entry>
                    </row>
                    <row>
                        <entry>6</entry>
                        <entry>lpr</entry>
                        <entry>line printer subsystem</entry>
                    </row>
                    <row>
                        <entry>7</entry>
                        <entry>news</entry>
                        <entry>network news subsystem</entry>
                    </row>
                    <row>
                        <entry>8</entry>
                        <entry>uucp</entry>
                        <entry>UUCP subsystem</entry>
                    </row>
                    <row>
                        <entry>9</entry>
                        <entry>cron</entry>
                        <entry>clock daemon</entry>
                    </row>
                    <row>
                        <entry>10</entry>
                        <entry>auth</entry>
                        <entry>security/authorization messages</entry>
                    </row>
                    <row>
                        <entry>11</entry>
                        <entry>ftp</entry>
                        <entry>FTP daemon</entry>
                    </row>
                    <row>
                        <entry>12</entry>
                        <entry><!-- FIXME --></entry>
                        <entry>NTP subsystem</entry>
                    </row>
                    <row>
                        <entry>13</entry>
                        <entry><!-- FIXME --></entry>
                        <entry>log audit</entry>
                    </row>
                    <row>
                        <entry>14</entry>
                        <entry><!-- FIXME --></entry>
                        <entry>log alert</entry>
                    </row>
                    <row>
                        <entry>15</entry>
                        <entry>cron</entry>
                        <entry>clock daemon</entry>
                    </row>
                    <row>
                        <entry>16-23</entry>
                        <entry>local0..local7</entry>
                        <entry>locally used facilities (local0-local7)</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
        </simplesect>
        <simplesect>
            <title>facility()</title>
                <indexterm type="parameter">
                    <primary>facility()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>facility(&lt;numeric facility code&gt;)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> An alternate syntax for <parameter>facility</parameter> permitting
                            the use of an arbitrary facility code. Facility codes 0-23 are
                            predefined and can be referenced by their usual name. Facility codes
                            above 24 are not defined but can be used by this alternate syntax.</para>
        </simplesect>
        <simplesect>
            <title>filter()</title>
                <indexterm type="parameter">
                    <primary>filter()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>filter(filtername)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Call another filter rule and evaluate its value.</para>
        </simplesect>
        <simplesect>
            <title>host()</title>
                <indexterm type="parameter">
                    <primary>host()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>host(regexp)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Match messages by using a regular expression against the hostname
                            field of log messages.</para>
        </simplesect>
        <simplesect>
            <title>level() or priority()</title>
                <indexterm type="parameter">
                    <primary>level() or priority()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>level(pri[,pri1..pri2[,pri3]])</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Match messages based on priority.</para>
                    <indexterm>
            <primary>filters</primary>
            <secondary>priorities</secondary>
        </indexterm>
        <para>The <parameter>level()</parameter> filter accepts the following levels:
                <parameter>emerg</parameter>, <parameter>alert</parameter>,
            <parameter>crit</parameter>, <parameter>err</parameter>, <parameter>warning</parameter>,
                <parameter>notice</parameter>, <parameter>info</parameter>,
            <parameter>debug</parameter>. </para>
        </simplesect>
        <simplesect>
            <title>match()</title>
                <indexterm type="parameter">
                    <primary>match()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>match(regexp)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Match a regular expression to the headers and the message itself
                            (i.e., the values returned by the <parameter>MSGHDR</parameter> and
                                <parameter>MSG</parameter> macros). Note that in syslog-ng version
                            2.1 and earlier, the <parameter>match()</parameter> filter was applied
                            only to the text of the message, excluding the headers. This
                            functionality has been moved to the <parameter>message()</parameter>
                            filter. To limit the scope of the match to a specific part of the
                            message (identified with a macro), use the <parameter>match(regexp
                                value("MACRO"))</parameter> syntax. Do not include the $ sign in the
                            parameter of the <parameter>value()</parameter> option.</para>
        </simplesect>
        <simplesect>
            <title>message()</title>
                <indexterm type="parameter">
                    <primary>message()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>message(regexp)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Match a regular expression to the text of the log message, excluding
                            the headers (i.e., the value returned by the <parameter>MSG</parameter>
                            macros). Note that in syslog-ng version 2.1 and earlier, this
                            functionality was performed by the <parameter>match()</parameter>
                            filter.</para>
        </simplesect>
        <simplesect>
            <title>netmask()</title>
                <indexterm type="parameter">
                    <primary>netmask()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>netmask(ip/mask)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Select only messages sent by a host whose IP address belongs to the
                            specified IP subnet. Note that this filter checks the IP address of the
                            last-hop relay (the host that actually sent the message to syslog-ng),
                            not the contents of the <parameter>HOST</parameter> field of the
                            message.</para>
        </simplesect>
        <simplesect>
            <title>program()</title>
                <indexterm type="parameter">
                    <primary>program()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>program(regexp)</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Match messages by using a regular expression against the program name
                            field of log messages.</para>
        </simplesect>
        <simplesect>
            <title>source()</title>
                <indexterm type="parameter">
                    <primary>source()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>source id</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Select messages of a source statement. This filter can be used in
                            embedded log statements if the parent statement contains multiple source
                            groups &mdash; only messages originating from the selected source
                            group are sent to the destination of the embedded log statement.</para>
        </simplesect>
        <simplesect>
            <title>tags()</title>
                <indexterm type="parameter">
                    <primary>tags()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                    <tbody>
                        <row>
                            <entry>Synopsis:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>tag</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Select messages labeled with the specified tag. Every message
                            automatically has the tag of its source in
                                <parameter>.source.&lt;id_of_the_source_statement&gt;</parameter>
                                format. This option is available only in syslog-ng 3.1 and later.</para>
            <example id="example_tags_filtering">
                <title>Adding tags and filtering messages with tags</title>
                <synopsis>source s_tcp {
tcp(ip(192.168.1.1) port(1514) tags("tcp", "router"));
};</synopsis>
                <para>Use the <parameter>tags()</parameter> option of the filters to select only
                    specific messages:</para>
                <synopsis>filter f_tcp {
   tags(".source.s_tcp");
};

filter f_router {
   tags("router");
};</synopsis>
            </example>
        </simplesect>
        
    <section>
        <title>Using regular expressions in filters</title>
        <para>
            <indexterm>
            <primary>regular expressions</primary>
            <secondary>posix</secondary>
            </indexterm>
            The <parameter>host()</parameter>, <parameter>match()</parameter>, and
                <parameter>program()</parameter> filter functions accept regular expressions as
            parameters. The exact type of the regular expression to use can be specified with the
                <parameter>type()</parameter> option. The following expression types are available:</para>
        <simplesect id="reference_filter_types">
            <title>posix</title>
                <indexterm type="parameter">
                    <primary>posix</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Use POSIX regular expressions. If the <parameter>type()</parameter>
                            parameter is not specified, syslog-ng uses POSIX regular expressions by
                            default. For additional details on the use and flags of regular
                            expressions, see <xref linkend="reference_regular_expressions"
                        />.</para>
        </simplesect>
        <simplesect>
            <title>pcre</title>
                <indexterm type="parameter">
                    <primary>pcre</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Use PCRE regular expressions. Execute
                            the <command>syslog-ng -V</command> command to check if your binary 
                            supports PCRE regular expressions. Starting with &abbrev; version 3.1, PCRE expressions are supported on every platform. For additional details on the use and flags of
                            regular expressions, see <xref linkend="reference_regular_expressions"
                            />.</para>
        </simplesect>
        <simplesect>
            <title>string</title>
                <indexterm type="parameter">
                    <primary>string</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Match the strings literally, without regular expression support. By
                            default, only identical strings are matched. For partial matches, use
                            the <parameter>flags("prefix")</parameter> or the
                                <parameter>flags("substring")</parameter> flags.</para>
        </simplesect>
        </section>
    </section>
    
    <section id="reference_macros">
        <title>Macros</title>
        <indexterm>
            <primary>macros</primary>
            <secondary>reference</secondary>
        </indexterm>
        <para>Certain parts of syslog-ng (for example destination filenames and message content templates)
            can refer to one or more macros, which get expanded as a message is processed. The table
            below summarizes the macros available in syslog-ng.</para>
        <note>
            <para>See <emphasis>The &agent; &version; Administrator Guide</emphasis> for the macros available in the syslog-ng Agent for Windows application.</para>
        </note>
        <para>Macros can be included by prefixing the macro name with a <parameter>$</parameter>
            sign, just like in Bourne compatible shells. Regarding braces around macro names, the
            following two formats are equivalent <parameter>"$MSG"</parameter> and
            <parameter>"${MSG}"</parameter>. </para>
        <para>Default values for macros can also be specified by appending the
            <parameter>:-</parameter> characters and the default value to the macro, for example</para>
        <synopsis>${HOST:-default_hostname}</synopsis>
        <para>Macros can be used to format messages, and also in the name of destination files. However, they cannot be used in sources as wildcards, for example, to read messages from files or directories that include a date in their name.</para>
        <simplesect id="macro_ampm">
            <title>AMPM</title>
                <indexterm type="parameter">
                    <primary>AMPM</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$AMPM</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Typically used together with the <link linkend="macro_hour12"><parameter>$HOUR12</parameter></link> macro, <parameter>$AMPM</parameter> returns the period of the day: AM for hours before mid day and PM for hours after mid day. In reference to a 24-hour clock format, AM is between 00:00-12:00 and PM is between 12:00-24:00. 12AM is midnight. Available in &abbrev; 3.2 and later.</para>
        </simplesect>
        <simplesect>
            <title>BSDTAG</title>
                <indexterm type="parameter">
                    <primary>BSDTAG</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$BSDTAG</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Facility/priority information in the format used by the FreeBSD
                syslogd: a priority number followed by a letter that indicates the
                facility. The priority number can range from <parameter>0</parameter> to
                <parameter>7</parameter>. The facility letter can range from
                <parameter>A</parameter> to <parameter>Y</parameter>, where
                <parameter>A</parameter> corresponds to facility number zero
                (LOG_KERN), <parameter>B</parameter> corresponds to facility 1
                (LOG_USER), etc.</para>
        </simplesect>
        <simplesect id="macro_date">
            <title>DATE, R_DATE, S_DATE</title>
                <indexterm type="parameter">
                    <primary>DATE, R_DATE, S_DATE</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$DATE, $R_DATE, $S_DATE</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Date of the message using the BSD-syslog style timestamp format
                (month/day/hour/minute/second, each expressed in two digits). This is
                the original syslog time stamp without year information, for example:
                <parameter>Jun 13 15:58:00</parameter>.</para>
        </simplesect>
        <simplesect id="macro_day">
            <title>DAY, R_DAY, S_DAY</title>
                <indexterm type="parameter">
                    <primary>DAY, R_DAY, S_DAY</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$DAY, $R_DAY, $S_DAY</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The day the message was sent.</para>
        </simplesect>
        <simplesect id="macro_facility">
            <title>FACILITY</title>
                <indexterm type="parameter">
                    <primary>FACILITY</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$FACILITY</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The name of the facility (for example, <parameter>kern</parameter>) that sent the message.</para>
        </simplesect>
        <simplesect id="macro_facility_num">
            <title>FACILITY_NUM</title>
                <indexterm type="parameter">
                    <primary>FACILITY_NUM</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$FACILITY_NUM</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The numerical code of the facility (for example, <parameter>0</parameter>) that sent the message.</para>
        </simplesect>
        <simplesect id="macro_fulldate">
            <title>FULLDATE, R_FULLDATE, S_FULLDATE</title>
                <indexterm type="parameter">
                    <primary>FULLDATE, R_FULLDATE, S_FULLDATE</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$FULLDATE, $R_FULLDATE, $S_FULLDATE</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> A nonstandard format for the date of the message using the same
                format as <parameter>DATE</parameter>, but including the year as well,
                for example: <parameter>2006 Jun 13 15:58:00</parameter>.</para>
        </simplesect>
        <simplesect>
            <title>FULLHOST</title>
                <indexterm type="parameter">
                    <primary>FULLHOST</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$FULLHOST</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The full FQDN of the host name chain (without trimming chained
                hosts), including the domain name. To use this macro, make sure that the
                <parameter>keep_hostname()</parameter> option is enabled.</para>
        </simplesect>
        <simplesect>
            <title>FULLHOST_FROM</title>
                <indexterm type="parameter">
                    <primary>FULLHOST_FROM</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$FULLHOST_FROM</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> FQDN of the host that sent the message to syslog-ng as resolved by
                syslog-ng using DNS. If the message traverses several hosts, this is the
                last host in the chain. To use this macro, make sure that the <parameter>keep_hostname()</parameter>
                option is enabled.</para>
        </simplesect>
        <simplesect id="macro_hour">
            <title>HOUR, R_HOUR, S_HOUR</title>
                <indexterm type="parameter">
                    <primary>HOUR, R_HOUR, S_HOUR</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$HOUR, $R_HOUR, $S_HOUR</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The hour of day the message was sent.</para>
        </simplesect>
        <simplesect id="macro_hour12">
            <title>HOUR12, R_HOUR12, S_HOUR12</title>
                <indexterm type="parameter">
                    <primary>HOUR12, R_HOUR12, S_HOUR12</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$HOUR12, $R_HOUR12, $S_HOUR12</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The hour of day the message was sent in 12-hour clock format. See also the <link linkend="macro_ampm"><parameter>$AMPM</parameter></link> macro. 12AM is midnight. Available in &abbrev; 3.2 and later.</para>
        </simplesect>
        <simplesect id="macro_host">
            <title>HOST</title>
                <indexterm type="parameter">
                    <primary>HOST</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$HOST</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The name of the source host where the message originates from. If the
                message traverses several hosts and the <link linkend="option_chain_hostnames">
                    <parameter>chain_hostnames()</parameter>
                </link> option is on, the first host in the chain is used. To use this
                macro, make sure that the <parameter>keep_hostname()</parameter>
                option is enabled.</para>
        </simplesect>
        <simplesect>
            <title>HOST_FROM</title>
                <indexterm type="parameter">
                    <primary>HOST_FROM</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$HOST_FROM</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Name of the host that sent the message to syslog-ng, as resolved by
                syslog-ng using DNS. If the message traverses several hosts, this is the
                last host in the chain. To use this macro, make sure that the <parameter>keep_hostname()</parameter>
                option is enabled.</para>
        </simplesect>
        <simplesect id="macro_isodate">
            <title>ISODATE, R_ISODATE, S_ISODATE</title>
                <indexterm type="parameter">
                    <primary>ISODATE, R_ISODATE, S_ISODATE</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$ISODATE, $R_ISODATE, $S_ISODATE</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Date of the message in the ISO 8601 compatible standard timestamp
                format (yyyy-mm-ddThh:mm:ss+-ZONE), for example:
                <parameter>2006-06-13T15:58:00.123+01:00</parameter>. If possible,
                it is recommended to use <parameter>ISODATE</parameter> for
                timestamping. Note that syslog-ng can produce fractions of a second
                (for example milliseconds) in the timestamp by using the
                <parameter>frac_digits()</parameter> global or per-destination
                option.</para>
        </simplesect>
        <simplesect>
            <title>LEVEL_NUM</title>
                <indexterm type="parameter">
                    <primary>LEVEL_NUM</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$LEVEL_NUM</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The priority (also called severity) of the message, represented as a numeric value, for example, <parameter>3</parameter>.</para>
        </simplesect>
        <simplesect id="macro_min">
            <title>MIN, R_MIN, S_MIN</title>
                <indexterm type="parameter">
                    <primary>MIN, R_MIN, S_MIN</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$MIN, $R_MIN, $S_MIN</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The minute the message was sent.</para>
        </simplesect>
        <simplesect id="macro_month">
            <title>MONTH, R_MONTH, S_MONTH</title>
                <indexterm type="parameter">
                    <primary>MONTH, R_MONTH, S_MONTH</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$MONTH, $R_MONTH, $S_MONTH</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The month the message was sent as a decimal value, prefixed with a
                zero if smaller than 10.</para>
        </simplesect>
        <simplesect id="macro_month_abbrev">
            <title>MONTH_ABBREV, R_MONTH_ABBREV, S_MONTH_ABBREV</title>
                <indexterm type="parameter">
                    <primary>MONTH_ABBREV, R_MONTH_ABBREV, S_MONTH_ABBREV</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$MONTH_ABBREV, $R_MONTH_ABBREV, $S_MONTH_ABBREV</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The English abbreviation of the month name (3 letters).</para>
        </simplesect>
        <simplesect id="macro_month_name">
            <title>MONTH_NAME, R_MONTH_NAME, S_MONTH_NAME</title>
                <indexterm type="parameter">
                    <primary>MONTH_NAME, R_MONTH_NAME, S_MONTH_NAME</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$MONTH_NAME, $R_MONTH_NAME, $S_MONTH_NAME</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The English name of the month name.</para>
        </simplesect>
        <simplesect id="macro_month_week">
            <title>MONTH_WEEK, R_MONTH_WEEK, S_MONTH_WEEK</title>
                <indexterm type="parameter">
                    <primary>MONTH_WEEK, R_MONTH_WEEK, S_MONTH_WEEK</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$MONTH_WEEK, $R_MONTH_WEEK, $S_MONTH_WEEK</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The number of the week in the given month (0-5). 
                The week with numerical value 1 is the first week 
                containing a Monday. The days of month before the first 
                Monday are considered week 0. For example, if a 31-day 
                month begins on a Sunday, then the 1st of the month is 
                week 0, and the end of the month (the 30th and 31st) is 
                week 5.</para>
        </simplesect>
        <simplesect id="macro_msg">
            <title>MSG or MESSAGE</title>
                <indexterm type="parameter">
                    <primary>MSG or MESSAGE</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$MSG or $MESSAGE</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Text contents of the log message without the program name and pid.
                Note that this has changed in syslog-ng version 3.0; in earlier versions
                this macro included the program name and the pid. In syslog-ng 3.0, the
                <parameter>MSG</parameter> macro became equivalent with the
                <parameter>MSGONLY</parameter> macro. The program name and the pid
                together are available in the <parameter>MSGHDR</parameter>
                macro.</para>
        </simplesect>
        <simplesect>
            <title>MSGHDR</title>
                <indexterm type="parameter">
                    <primary>MSGHDR</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$MSGHDR</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The name and the pid of the program that sent the log message in
                <parameter>PROGRAM: PID </parameter> format. Includes a trailing
                whitespace. Note that the macro returns an empty value if both the
                program and pid fields of the message are empty.</para>
        </simplesect>
        <simplesect>
            <title>MSGONLY</title>
                <indexterm type="parameter">
                    <primary>MSGONLY</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$MSGONLY</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Message contents without the program name or pid.</para>
        </simplesect>
        <simplesect>
            <title>PID</title>
                <indexterm type="parameter">
                    <primary>PID</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$PID</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The PID of the program sending the message.</para>
        </simplesect>
        <simplesect id="macro_pri">
            <title>PRI</title>
                <indexterm type="parameter">
                    <primary>PRI</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$PRI</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The priority and facility encoded as a 2 or 3 digit decimal number as
                it is present in syslog messages.</para>
        </simplesect>
        <simplesect id="macro_priority">
            <title>PRIORITY or LEVEL</title>
                <indexterm type="parameter">
                    <primary>PRIORITY</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>LEVEL</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$PRIORITY</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$LEVEL</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The priority (also called severity) of the message, for example, <parameter>error</parameter>.</para>
        </simplesect>
        <simplesect>
            <title>PROGRAM</title>
                <indexterm type="parameter">
                    <primary>PROGRAM</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$PROGRAM</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The name of the program sending the message. Note that the content of
                the $PROGRAM variable may not be completely trusted as it is provided by
                the client program that constructed the message.</para>
        </simplesect>
        <simplesect id="macro_sdata">
            <title>SDATA, .SDATA.SDID.SDNAME</title>
                <indexterm type="parameter">
                    <primary>.SDATA.SDID.SDNAME</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>SDATA</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$.SDATA.SDID.SDNAME</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$SDATA</primary>
                </indexterm>
                <indexterm>
                    <primary>STRUCTURED-DATA</primary>
                </indexterm>
                <indexterm>
                    <primary>macros</primary>
                    <secondary>SDATA</secondary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The syslog-ng application automatically parses the STRUCTURED-DATA
                part of IETF-syslog messages, which can be referenced in macros. The <parameter>$SDATA</parameter> macro references the entire STRUCTURED-DATA part of the message, while structured data elements can be referenced using the <parameter>$.SDATA.SDID.SDNAME</parameter> macro.</para>
                <note>
                    <para>When using STRUCTURED-DATA macros, consider the following:</para>
                    <itemizedlist>
                        <listitem>
                            <para>When referencing an element of the structured data, the macro must begin with the dot (.) character. For example, <parameter>$.SDATA.timeQuality.isSynced</parameter>.</para>
                        </listitem>
                        <listitem>
                            <para>The SDID and SDNAME parts of the macro names are case sensitive: <parameter>$.SDATA.timeQuality.isSynced</parameter> is not the same as <parameter>$.SDATA.TIMEQUALITY.ISSYNCED</parameter>.</para>
                        </listitem>
                    </itemizedlist>
                </note>
                <example>
                    <title>Using SDATA macros</title>
                    <para>For example, if a log message contains the following structured data:
                <parameter>[exampleSDID@0 iut="3" eventSource="Application"
                    eventID="1011"][examplePriority@0 class="high"]</parameter> you can
                use macros like: <parameter>${.SDATA.exampleSDID.eventSource}</parameter> &mdash; this would return the <parameter>Application</parameter> string in this case.</para>
                </example>
        </simplesect>
        <simplesect id="macro_sec">
            <title>SEC, R_SEC, S_SEC</title>
                <indexterm type="parameter">
                    <primary>SEC, R_SEC, S_SEC</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$SEC, $R_SEC, $S_SEC</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The second the message was sent.</para>
        </simplesect>
        <simplesect id="macro_seqnum">
            <title>SEQNUM</title>
                <indexterm type="parameter">
                    <primary>SEQNUM</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$SEQNUM</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The sequence number of the message is a unique identifier of the
                message between the end-points. The syslog-ng client calculates this
                number when processing a new message from a local source; it is not
                calculated for relayed messages. The sequence number increases for every
                message, and is not lost even if syslog-ng is reloaded or restarted. The
                sequence number is a part of every message that uses the new IETF-syslog
                protocol (<parameter>.SDATA.meta.sequenceId</parameter>), and can be
                added to BSD-syslog messages using this macro.</para>
                <indexterm>
                    <primary>sequence ID</primary>
                </indexterm>
                <para>If &abbrev; receives a message via the IETF-syslog protocol that includes a sequence ID, this ID is automatically available in the <parameter>$SEQNUM</parameter> macro.</para>
                <indexterm>
                    <primary>Cisco timestamp</primary>
                </indexterm>
                <indexterm>
                    <primary>Cisco sequence number</primary>
                </indexterm>
                <indexterm>
                    <primary>sequence number</primary>
                </indexterm>
                <indexterm>
                    <primary>sequence number</primary>
                    <secondary>Cisco</secondary>
                </indexterm>
                <indexterm>
                    <primary>message ID</primary>
                </indexterm>
                <indexterm>
                    <primary>extended timestamp format</primary>
                </indexterm>
                <para>3.2 and later versions of &abbrev; store the sequence number from Cisco IOS log messages using the extended timestamp format in this macro. If this message is then forwarded using the IETF-syslog protocol, &abbrev; includes the sequence number received from the Cisco device in the <parameter>.SDATA.meta.sequenceId</parameter> part of the message.</para>
                <note>
                    <para>To enable sequence numbering of log messages on Cisco devices, use the following command on the device (available in IOS 10.0 and later): <command>service sequence-numbers</command>. For details, see <ulink url="http://www.cisco.com/en/US/docs/ios/12_3/configfun/command/reference/cfr_1g07.html#wp1029551">Cisco IOS Configuration Fundamentals and Network Management Command Reference</ulink>.</para>
                </note>
        </simplesect>
        <simplesect>
            <title>SOURCEIP</title>
                <indexterm type="parameter">
                    <primary>SOURCEIP</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$SOURCEIP</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> IP address of the host that sent the message to syslog-ng. (I.e. the
                IP address of the host in the <parameter>FULLHOST_FROM</parameter>
                macro.) Please note that when a message traverses several relays, this
                macro contains the IP of the last relay.</para>
        </simplesect>
        <simplesect id="macro_stamp">
            <title>STAMP, R_STAMP, S_STAMP</title>
                <indexterm type="parameter">
                    <primary>STAMP, R_STAMP, S_STAMP</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$STAMP, $R_STAMP, $S_STAMP</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> A timestamp formatted according to the <link linkend="reference_options">
                <parameter>ts_format()</parameter>
            </link> global or per-destination option.</para>
        </simplesect>
        <simplesect id="macro_tag">
            <title>TAG</title>
                <indexterm type="parameter">
                    <primary>TAG</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$TAG</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The priority and facility encoded as a 2 digit hexadecimal number.</para>
        </simplesect>
        <simplesect id="macro_tags">
            <title>TAGS</title>
                <indexterm type="parameter">
                    <primary>TAGS</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$TAGS</primary>
                </indexterm>
                <indexterm>
                    <primary>macros</primary>
                    <secondary>patterndb tags</secondary>
                </indexterm>
                <indexterm>
                    <primary>tags</primary>
                    <secondary>as macro</secondary>
                </indexterm>
            <para><guilabel>Description:</guilabel> A comma-separated list of the tags assigned to the message. Available only in &product; 3.2 and later.</para>
            <note>
                <para>Note that the tags are not part of the log message and are not automatically transferred from a client to the server. For example, if a client uses a pattern database to tag the messages, the tags are not transferred to the server. A way of transferring the tags is to explicitly add them to the log messages using a template and the <parameter>$TAGS</parameter> macro, or to add them to the structured metadata part of messages when using the IETF-syslog message format.</para>
                <para>When sent as structured metadata, it is possible to reference to the list of tags on the central server, and for example, to add them to a database column.</para>
            </note>
        </simplesect>
        <simplesect id="macro_tz">
            <title>TZ, R_TZ, S_TZ</title>
                <indexterm type="parameter">
                    <primary>TZ, R_TZ, S_TZ</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$TZ, $R_TZ, $S_TZ</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Equivalent to TZOFFSET, used to mean the time zone name abbreviation
                in syslog-ng 1.6.x.</para>
        </simplesect>
        <simplesect id="macro_tzoffset">
            <title>TZOFFSET, R_TZOFFSET, S_TZOFFSET</title>
                <indexterm type="parameter">
                    <primary>TZOFFSET, R_TZOFFSET, S_TZOFFSET</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$TZOFFSET, $R_TZOFFSET, $S_TZOFFSET</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The time-zone as hour offset from GMT; for example:
                <parameter>-07:00</parameter>. In syslog-ng 1.6.x this used to be
                <parameter>-0700</parameter> but as <parameter>ISODATE</parameter>
                requires the colon it was added to <parameter>TZOFFSET</parameter> as
                well.</para>
        </simplesect>
        <simplesect id="macro_unixtime">
            <title>UNIXTIME, R_UNIXTIME, S_UNIXTIME</title>
                <indexterm type="parameter">
                    <primary>UNIXTIME, R_UNIXTIME, S_UNIXTIME</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$UNIXTIME, $R_UNIXTIME, $S_UNIXTIME</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Standard unix timestamp, represented as the number of seconds since
                <parameter>1970-01-01T00:00:00</parameter>.</para>
        </simplesect>
        <simplesect id="macro_year">
            <title>YEAR, R_YEAR, S_YEAR</title>
                <indexterm type="parameter">
                    <primary>YEAR, R_YEAR, S_YEAR</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$YEAR, $R_YEAR, $S_YEAR</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The year the message was sent.</para>
        </simplesect>
        <simplesect id="macro_week">
            <title>WEEK, R_WEEK, S_WEEK</title>
                <indexterm type="parameter">
                    <primary>WEEK, R_WEEK, S_WEEK</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$WEEK, $R_WEEK, $S_WEEK</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The week number of the year, prefixed with a zero for the first nine
                week of the year. (The first Monday in the year marks the first
                week.)</para>
        </simplesect>
        <simplesect id="macro_week_abbrev">
            <title>WEEK_ABBREV, R_WEEK_ABBREV, S_WEEK_ABBREV</title>
                <indexterm type="parameter">
                    <primary>WEEK_ABBREV, R_WEEK_ABBREV, S_WEEK_ABBREV</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$WEEK_ABBREV, $R_WEEK_ABBREV, $S_WEEK_ABBREV</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The 3-letter English abbreviation of the name of the day the message was sent, for example <parameter>Thu</parameter>.</para>
        </simplesect>
        <simplesect id="macro_week_day">
            <title>WEEK_DAY, R_WEEK_DAY, S_WEEK_DAY</title>
                <indexterm type="parameter">
                    <primary>WEEK_DAY, R_WEEK_DAY, S_WEEK_DAY</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$WEEK_DAY, $R_WEEK_DAY, $S_WEEK_DAY</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The day of the week as a numerical value (1-7).</para>
        </simplesect>
        <simplesect id="macro_weekday">
            <title>WEEKDAY, R_WEEKDAY, S_WEEKDAY</title>
                <indexterm type="parameter">
                    <primary>WEEKDAY, R_WEEKDAY, S_WEEKDAY</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$WEEKDAY, $R_WEEKDAY, $S_WEEKDAY</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> These macros are deprecated, use <link linkend="macro_week_abbrev">WEEK_ABBREV, R_WEEK_ABBREV, S_WEEK_ABBREV</link> instead. The 3-letter name of the day of week the message was sent, for example
                <parameter>Thu</parameter>.</para>
        </simplesect>
        <simplesect id="macro_week_day_name">
            <title>WEEK_DAY_NAME, R_WEEK_DAY_NAME, S_WEEK_DAY_NAME</title>
                <indexterm type="parameter">
                    <primary>WEEK_DAY_NAME, R_WEEK_DAY_NAME, S_WEEK_DAY_NAME</primary>
                </indexterm>
                <indexterm type="parameter">
                    <primary>$WEEK_DAY_NAME, $R_WEEK_DAY_NAME, $S_WEEK_DAY_NAME</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> The English name of the day.</para>
        </simplesect>
    </section>
    
    <section id="reference_parsers">
        <title>Message parsers</title>
        <indexterm>
            <primary>parsers</primary>
            <secondary>reference</secondary>
        </indexterm>
        <indexterm>
            <primary>message parsing</primary>
        </indexterm>
        <indexterm>
            <primary>parsing messages</primary>
        </indexterm>
        <para>The following sections provide reference for the parsers available in syslog-ng.</para>
        <itemizedlist>
            <listitem>
                <para>To segment structured messages like comma-separated values, see <xref
                        linkend="reference_parsers_csv"/>.</para>
            </listitem>
            <listitem>
                <para>To classify messages using a pattern database, see <xref
                        linkend="reference_parsers_pattern_databases"/>.</para>
            </listitem>
        </itemizedlist>
        <section id="reference_parsers_csv">
            <title>CSV parsers</title>
            <indexterm>
                <primary>segmenting messages</primary>
            </indexterm>
            <indexterm>
                <primary>CSV parsers</primary>
            </indexterm>
            <indexterm>
                <primary>splitting messages</primary>
            </indexterm>
            <para>The syslog-ng application can separate parts of log messages (i.e., the contents
                of the $MSG macro) to named fields (columns). These fields act as user-defined
                macros that can be referenced in message templates, file- and tablenames, etc. </para>
            <para>To create a parser, define the columns of the message, the delimiter or separator
                characters, and optionally the characters that are used to escape the delimiter
                characters (quote-pairs).</para>
            <synopsis>Declaration:
    parser parser_name {
        csv-parser(column1, column2, ...)
        delimiters()
        quote-pairs()
    };</synopsis>
            <para>Column names work like macros. Always use a prefix to identify the columns of the
                parsers, for example <parameter>MYPARSER1.COLUMN1, MYPARSER2.COLUMN2</parameter>, etc.
                Column names starting with a dot (for example <parameter>.HOST</parameter>) are reserved
                for use by syslog-ng. </para>
            <simplesect id="parser_options">
                <title>csv-parser</title>
                <indexterm type="parameter">
                    <primary>csv-parser</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                        <tbody>
                            <row>
                                <entry>Synopsis:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>csv-parser(columns("PARSER.COLUMN1", "PARSER.COLUMN2", ...))</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> Specifies the type of parser to use, and the name of the columns
                                to separate messages to. Currently only the
                                <parameter>csv-parser</parameter> is implemented, which can separate
                                columns based on delimiter characters and strings.</para>
            </simplesect>
            <simplesect>
                <title>delimiters</title>
                <indexterm type="parameter">
                    <primary>delimiters</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                        <tbody>
                            <row>
                                <entry>Synopsis:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>delimiters("&lt;delimiter_characters&gt;")</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The character that separates the columns in the message.</para>
            </simplesect>
            <simplesect>
                <title>flags()</title>
                <indexterm type="parameter">
                    <primary>flags()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                        <tbody>
                            <row>
                                <entry>Synopsis:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>drop-invalid, escape-none, escape-backslash, escape-double-char,
                                greedy, strip-whitespace</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> When the <parameter>drop-invalid</parameter> option is set,
                                    the parser does not process messages that have less columns than
                                    defined in the parser. Using this option practically turns the
                                    parser into a special filter, that matches messages that have
                                    the predifined number of columns (using the specified
                                    delimiters).</para>
                <para>The <parameter>escape-none, escape-backslash,
                                        escape-double-char</parameter> flags set the escaping rules
                                    used by the parser. </para>
                <para>The <parameter>greedy</parameter> option assigns the remainder
                                    of the message to the last column, regardless of the delimiter
                                    characters set. You can use this option to process messages
                                    where the number of columns varies.</para>
                <para>The <parameter>strip-whitespace</parameter> flag removes
                                    trailing whitespaces from the beginning and the end of the
                                    columns.</para>
            </simplesect>
            <simplesect>
                <title>quote-pairs()</title>
                <indexterm type="parameter">
                    <primary>quote-pairs()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                        <tbody>
                            <row>
                                <entry>Synopsis:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>quote-pairs('&lt;quote_pairs&gt;')</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> List quote-pairs between single quotes. Delimiter characters
                                enclosed between quote characters are ignored. Note that the
                                beginning and ending quote character does not have to be identical,
                                for example <parameter>[}</parameter> can also be a quote-pair.</para>
            </simplesect>
            <simplesect>
                <title>template()</title>
                <indexterm type="parameter">
                    <primary>template()</primary>
                </indexterm>
                <informaltable frame="topbot" colsep="0" rowsep="0">
                    <tgroup cols="2">
                    <colspec colnum="1" colwidth="50pt"/>
                        <tbody>
                            <row>
                                <entry>Synopsis:
                                    <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                                <entry>template("${&lt;macroname&gt;}")</entry>
                            </row>
                        </tbody>
                    </tgroup>  
                </informaltable>
                <para><guilabel>Description:</guilabel> The macro that contains the part of the message that the parser
                                will process. It can also be a macro created by a previous parser of
                                the log path. By default, this is empty and the parser processes the
                                entire message.</para>
            
            <example id="example_parser">
                <title>Segmenting hostnames separated with a dash</title>
                <para>The following example separates hostnames like
                    <parameter>example-1</parameter> and <parameter>example-2</parameter> into two
                    parts.</para>
                <synopsis>parser p_hostname_segmentation {
    csv-parser(columns("HOSTNAME.NAME", "HOSTNAME.ID")
    delimiters("-")
    flags(escape-none)
    template("${HOST}"));
};
destination d_file { file("/var/log/messages-${HOSTNAME.NAME:-examplehost}"); };
log { source(s_local); parser(p_hostname_segmentation); destination(d_file);};</synopsis>
            </example>
            <example id="example_parser_apache">
                <title>Parsing Apache log files</title>
                <para>The following parser processes the log of Apache web servers and separates
                    them into different fields. Apache log messages can be formatted like:</para>
                <synopsis>"%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %T %v"</synopsis>
                <para>Here is a sample message: </para>
                <synopsis>192.168.1.1 - - [31/Dec/2007:00:17:10 +0100] "GET /cgi-bin/example.cgi HTTP/1.1" 200 2708 "-" "curl/7.15.5 (i4 86-pc-linux-gnu) libcurl/7.15.5 OpenSSL/0.9.8c zlib/1.2.3 libidn/0.6.5" 2 example.balabit</synopsis>
                <para>To parse such logs, the delimiter character is set to a single whitespace
                        (<parameter>delimiters(" ")</parameter>). Whitespaces between quotes and
                    brackets are ignored (<parameter>quote-pairs('""[]')</parameter>).</para>
                <synopsis>parser p_apache {
    csv-parser(columns("APACHE.CLIENT_IP", "APACHE.IDENT_NAME", "APACHE.USER_NAME",
        "APACHE.TIMESTAMP", "APACHE.REQUEST_URL", "APACHE.REQUEST_STATUS",
        "APACHE.CONTENT_LENGTH", "APACHE.REFERER", "APACHE.USER_AGENT",
        "APACHE.PROCESS_TIME", "APACHE.SERVER_NAME")
         flags(escape-double-char,strip-whitespace)
         delimiters(" ")
         quote-pairs('""[]')
         );
};</synopsis>
                <para>The results can be used for example to separate log messages into different
                    files based on the APACHE.USER_NAME field. If the field is empty, the
                        <parameter>nouser</parameter> name is assigned.</para>
                <synopsis>log { source(s_local);
    parser(p_apache); destination(d_file);};
};
destination d_file { file("/var/log/messages-${APACHE.USER_NAME:-nouser}"); };</synopsis>
            </example>
            <example id="example_parser_multiple">
                <title>Segmenting a part of a message</title>
                <para>The following example splits the timestamp of a parsed Apache log message into
                    separate fields.</para>
                <synopsis>parser p_apache_timestamp {
    csv-parser(columns("APACHE.TIMESTAMP.DAY", "APACHE.TIMESTAMP.MONTH", "APACHE.TIMESTAMP.YEAR", "APACHE.TIMESTAMP.HOUR", "APACHE.TIMESTAMP.MIN", "APACHE.TIMESTAMP.MIN", "APACHE.TIMESTAMP.ZONE")
    delimiters("/: ")
    flags(escape-none)
    template("${APACHE.TIMESTAMP}"));
    };
log { source(s_local);
    log { parser(p_apache); parser(p_apache_timestamp); destination(d_file);};
};
</synopsis>
            </example>
            <example id="example_parser_greedy">
                <title>Adding the end of the message to the last column</title>
                <para>If the <parameter>greedy</parameter> option is enabled, the syslog-ng
                    application adds the not-yet-parsed part of the message to the last column,
                    ignoring any delimiter characters that may appear in this part of the message.</para>
                <para>For example, you receive the following comma-separated message:
                        <parameter>example 1, example2, example3</parameter>, and you segment it
                    with the following parser:</para>
                <synopsis>csv_parser(columns("COLUMN1", "COLUMN2", "COLUMN3") delimiters(","));</synopsis>
                <para>The <parameter>COLUMN1</parameter>, <parameter>COLUMN2</parameter>, and
                        <parameter>COLUMN3</parameter> variables will contain the strings
                        <parameter>example1</parameter>, <parameter>example2</parameter>, and
                        <parameter>example3</parameter>, respectively. If the message looks like
                        <parameter>example 1, example2, example3, some more information</parameter>,
                    then any text appearing after the third comma (i.e., <parameter>some more
                        information</parameter>) is not parsed, and possibly lost if you use only
                    the variables to reconstruct the message (for example, to send it to different
                    columns of an SQL table). </para>
                <para>Using the <parameter>greedy</parameter> flag will assign the remainder of the
                    message to the last column, so that the <parameter>COLUMN1</parameter>,
                        <parameter>COLUMN2</parameter>, and <parameter>COLUMN3</parameter> variables
                    will contain the strings <parameter>example1</parameter>,
                    <parameter>example2</parameter>, and <parameter>example3, some more
                    information</parameter>.</para>
                <synopsis>csv_parser(columns("COLUMN1", "COLUMN2", "COLUMN3") delimiters(",") flags(greedy));</synopsis>
            </example>
            </simplesect>
        </section>
       
        <section id="reference_parsers_pattern_databases">
            <title>Pattern databases</title>
            <xi:include href="../../common/chapters/patterndb_common.xml"
                xmlns:xi="http://www.w3.org/2001/XInclude"
                xpointer="element(patterndb-using-parsers)"/>
            <section id="patterndb-filtering">
                <title>Filtering messages based on classification</title>
                <indexterm>
                    <primary>parsers</primary>
                </indexterm>
                <indexterm>
                    <primary>message parsing</primary>
                </indexterm>
                <indexterm>
                    <primary>parsing messages</primary>
                </indexterm>
                <indexterm>
                    <primary>pattern database</primary>
                </indexterm>
                <indexterm>
                    <primary>classifying messages</primary>
                    <secondary>filtering</secondary>
                </indexterm>
                <indexterm>
                    <primary>message classification</primary>
                </indexterm>
                <para>The results of message classification and parsing can be used in custom
                    filters and file and database templates as well. There are two built-in macros
                    in &abbrev; that allow you to use the results of the classification: the
                        <parameter>.classifier.class</parameter> macro contains the class assigned
                    to the message (for example violation, security, or unknown), while the
                        <parameter>.classifier.rule_id</parameter> macro contains the identifier of
                    the message pattern that matched the message.</para>
                <example>
                    <title>Using classification results for filtering messages</title>
                    <para>To filter on a specific message class, create a filter that checks the
                            <guimenu>.classifier_class</guimenu> macro, and use this filter in a log
                        statement.</para>
                    <synopsis>filter fi_class_violation {
                        match("violation"
                        value(".classifier.class")
                        type("string")
                        );
                        };</synopsis>
                    <synopsis>log { 
                        source(s_all);
                        parser(pattern_db);
                        filter(fi_class_violation);
                        destination(di_class_violation);
                        };</synopsis>
                    <para>Filtering on the <parameter>unknown</parameter> class selects messages
                        that did not match any rule of the pattern database. Routing these messages
                        into a separate file allows you to periodically review new or unknown
                        messages.</para>
                    <para>To filter on messages matching a specific classification rule, create a
                        filter that checks the <guimenu>.classifier_rule_id</guimenu> macro. The
                        unique identifier of the rule (for example
                            <parameter>e1e9c0d8-13bb-11de-8293-000c2922ed0a</parameter>) is the
                            <parameter>id</parameter> attribute of the rule in the XML database.</para>
                    <synopsis>filter fi_class_rule {
                        match("e1e9c0d8-13bb-11de-8293-000c2922ed0a"
                        value(".classifier_rule_id")
                        type("string")
                        );
                        };</synopsis>
                </example>

                <para>The message-segments parsed by the pattern parsers can also be used as macros
                    as well. To accomplish this, you have to add a name to the parser, and then you
                    can use this name as a macro that refers to the parsed value of the message.</para>
                <example>
                    <title>Using pattern parsers as macros</title>
                    <para>For example, you want to parse messages of an application that look like
                            <parameter>"Transaction: &lt;type&gt;."</parameter>, where
                        &lt;type&gt; is a string that has different values (for example refused,
                        accepted, incomplete, etc.). To parse these messages, you can use the
                        following pattern:</para>
                    <synopsis>'Transaction: @ESTRING::.@'</synopsis>
                    <para>Here the @ESTRING@ parser parses the message until the next full stop
                        character. To use the results in a filter or a filename template, include a
                        name in the parser of the pattern, for example:</para>
                    <synopsis>'Transaction: @ESTRING:TRANSACTIONTYPE:.@'</synopsis>
                    <para>After that, add a custom template to the logpath that uses this template.
                        For example, to select every <parameter>accepted</parameter> transaction,
                        use the following custom filter in the log path:</para>
                    <synopsis>match("accepted" value("TRANSACTIONTYPE"));</synopsis>
                </example>
                <note>
                    <para>The above macros can be used in database columns and filename templates as
                        well, if you create custom templates for the destination or logspace.</para>
                    <para>Use a consistent naming scheme for your macros, for example,
                            <parameter>APPLICATIONNAME_MACRONAME</parameter>.</para>
                </note>
            </section>
            <section id="reference_patterndb_schemes">
                <title>Creating pattern databases</title>
                <indexterm>
                    <primary>pattern database</primary>
                </indexterm>
                <indexterm>
                    <primary>classifying messages</primary>
                    <secondary>creating databases</secondary>
                </indexterm>
                <indexterm>
                    <primary>message classification</primary>
                </indexterm>
                <para>Pattern databases are XML files that contain rules describing the message
                    patterns. For sample pattern databases, see <xref linkend="patterndb-download"
                    />.</para>
                <section id="patterndb-version-comparison">
                    <title>What's new in the syslog-ng pattern database format V3</title>
                    <para>The V3 database format has the following differences compared to the
                        original V1 format:</para>
                    <itemizedlist>
                        <listitem>
                            <para>The rules that are applied to the messages of a program can be
                                separated into multiple rulesets.</para>
                        </listitem>
                        <listitem>
                            <para>The program pattern of the rulesets can be empty; such rulesets
                                act as fallback rulesets that are applied to the log messages if no
                                program pattern is matching or when a message does not have a
                                program part.</para>
                        </listitem>
                        <listitem>
                            <para>Rules can contain multiple patterns to cover messages that have
                                multiple formats (for example multilingual messages).</para>
                        </listitem>
                        <listitem>
                            <para>Tags can be defined in the rules; these tags are automatically
                                assigned to messages matching the patterns of the rule.</para>
                        </listitem>
                        <listitem>
                            <para>Static named values can be defined in the rules; these are
                                automatically assigned to messages matching the patterns of the
                                rule. The assigned values can be used in filters and macros.</para>
                        </listitem>
                        <listitem>
                            <para>It is also possible to include sample messages in the rules, and
                                also the expected values of the parsers. These can be used to test
                                the behavior of the patterns.</para>
                        </listitem>
                    </itemizedlist>
                </section>
                <section>
                    <title>The syslog-ng pattern database format</title>
                    <para>The following scheme describes the V3 format of the pattern database. This
                        format is used by syslog-ng 3.1 and later, and the syslog-ng Store Box (SSB)
                        appliance version 1.1 and later (see the <ulink
                            url="http://www.balabit.com/network-security/syslog-ng/log-server-appliance/"
                            >syslog-ng Store Box web page</ulink>
                        for details on SSB).</para>
                    <para>For a sample database containing only a single pattern, see <xref
                            linkend="example_pattern_database_v3_su"/>.</para>
                    <para>For earlier versions of the syslog-ng pattern database formats, see <xref
                            linkend="app-patterndb"/>.</para>
                    <para>For a summary of differences between the different syslog-ng pattern
                        database formats, see <xref linkend="patterndb-version-comparison"/>.</para>
                    <tip>
                        <para>Use the <command>pdbtool</command> utility that is bundled with
                            syslog-ng to test message patterns and convert existing databases to the
                            latest format. See <xref linkend="pdbtool.1"/> for details.</para>
                    </tip>
                    <itemizedlist id="reference_patterndb_scheme_v3">
                        <listitem>
                            <para><guimenu>&lt;patterndb&gt;</guimenu>: The container
                                element of the pattern database. For example:
                                <synopsis>&lt;patterndb version='3' pub_date='2009-10-25'&gt;</synopsis></para>
                        </listitem>
                        <listitem>
                            <para><emphasis>version</emphasis>: The schema version of the pattern
                                database. The current version is <parameter>3</parameter>.</para>
                        </listitem>
                        <listitem>
                            <para><emphasis>pubdate</emphasis>: The publication date of the XML
                                file.</para>
                        </listitem>
                        <listitem>
                            <para><guimenu>&lt;ruleset&gt;</guimenu>: A container element to
                                group log patterns for an application or program. For example:
                                <synopsis>&lt;ruleset name='su' id='480de478-d4a6-4a7f-bea4-0c0245d361e1'&gt;</synopsis></para>
                            <para> A <parameter>&lt;patterndb&gt;</parameter> element may
                                contain any number of <guimenu>&lt;ruleset&gt;</guimenu>
                                elements.</para>
                            <itemizedlist>
                                <listitem>
                                    <para><emphasis>name</emphasis>: The name of the application.
                                        Note that the function of this attribute is to make the
                                        database more readable, syslog-ng uses the
                                            <parameter>&lt;pattern&gt;</parameter> element
                                        to identify the applications sending log messages.</para>
                                </listitem>
                                <listitem>
                                    <para><emphasis>id</emphasis>: A unique ID of the application,
                                        for example, the md5 sum of the <parameter>name</parameter>
                                        attribute.</para>
                                </listitem>
                                <listitem>
                                    <para><guimenu>description</guimenu>: OPTIONAL &mdash; A
                                        description of the ruleset or the application.</para>
                                </listitem>
                                <listitem>
                                    <para><guimenu>url</guimenu>: OPTIONAL &mdash; An URL
                                        referring to further information about the ruleset or the
                                        application.</para>
                                </listitem>
                                <listitem>
                                    <para><guimenu>pattern</guimenu>: The name of the application
                                        &mdash; syslog-ng matches this value to the $PROGRAM
                                        header of the syslog message to find the rulesets applicable
                                        to the syslog message. This element is also called
                                            <parameter>program pattern</parameter>. For example <synopsis>&lt;pattern&gt;su&lt;/pattern&gt;</synopsis>
                                        <note>
                                            <para>If the
                                                <parameter>&lt;pattern&gt;</parameter>
                                                element of a ruleset is not specified, -ng will use
                                                this ruleset as a fallback ruleset: it will apply
                                                the ruleset to messages that have an empty PROGRAM
                                                header, or if none of the program patterns matched
                                                the PROGRAM header of the incoming message. </para>
                                        </note>
                                    </para>
                                </listitem>
                                <listitem>
                                    <para><guimenu>&lt;rules&gt;</guimenu>: A container
                                        element for the rules of the ruleset.</para>
                                    <itemizedlist>
                                        <listitem>
                                            <para><guimenu>&lt;rule&gt;</guimenu>: An
                                                element containing message patterns and how a
                                                message that matches these patterns is classified.
                                                For example:
                                                <synopsis>&lt;rule provider='balabit'
                                                id='f57196aa-75fd-11dd-9bba-001e6806451b'
                                                class='violation'&gt;</synopsis></para>
                                            <note>
                                                <para>If the following characters appear in the
                                                  message, they must be escaped in the rule as
                                                  follows:</para>
                                                <itemizedlist>
                                                  <listitem>
                                                  <para><parameter>@</parameter>: Use @@,
                                                  for example
                                                  <parameter>user@@example.com</parameter></para>
                                                  </listitem>
                                                  <listitem>
                                                  <para><emphasis>&lt;</emphasis>: Use
                                                  <parameter>&amp;lt;</parameter></para>
                                                  </listitem>
                                                  <listitem>
                                                  <para><emphasis>&gt;</emphasis>: Use
                                                  <parameter>&amp;gt;</parameter></para>
                                                  </listitem>
                                                  <listitem>
                                                  <para>&amp;: Use
                                                  <parameter>&amp;amp;</parameter></para>
                                                  </listitem>
                                                </itemizedlist>
                                            </note>
                                            <para>The <guimenu>&lt;rules&gt;</guimenu>
                                                element may contain any number of
                                                  <guimenu>&lt;rule&gt;</guimenu>
                                                elements.</para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>provider</emphasis>: The provider of the
                                                rule. This is used to distinguish between who
                                                supplied the rule; i.e., if it has been created by
                                                BalaBit, or added to the xml by a local user.</para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>id</emphasis>: The globally unique ID of
                                                the rule.</para>
                                        </listitem>
                                        <listitem>
                                            <para><emphasis>class</emphasis>: The class of the rule
                                                &mdash; syslog-ng assigns this class to the
                                                messages matching a pattern of this rule.</para>
                                        </listitem>

                                        <listitem>
                                            <para><guimenu>&lt;patterns&gt;</guimenu>: An
                                                element containing the patterns of the rule. If a
                                                  <guimenu>&lt;patterns&gt;</guimenu>
                                                element contains multiple
                                                  <guimenu>&lt;pattern&gt;</guimenu>
                                                elements, the class of the
                                                  <guimenu>&lt;rule&gt;</guimenu> is
                                                assigned to every syslog message matching any of the
                                                patterns. </para>
                                            <itemizedlist>
                                                <listitem>
                                                  <para><guimenu>&lt;pattern&gt;</guimenu>:
                                                  A pattern describing a log message. This
                                                  element is also called <parameter>message
                                                  pattern</parameter>. For example:
                                                  <synopsis>&lt;pattern&gt;+ ??? root-&lt;/pattern&gt;</synopsis></para>
                                                </listitem>
                                                <listitem>
                                                  <para><guimenu>description</guimenu>: OPTIONAL
                                                  &mdash; A description of the pattern or
                                                  the log message matching the pattern.
                                                  </para>
                                                </listitem>
                                                <listitem>
                                                  <para><guimenu>urls</guimenu>: OPTIONAL
                                                  &mdash; An element containing one or
                                                  more URLs referring to further information
                                                  about the patterns or the matching log
                                                  messages.</para>
                                                  <itemizedlist>
                                                  <listitem>
                                                  <para><guimenu>url</guimenu>: OPTIONAL
                                                  &mdash; An URL referring to
                                                  further information about the
                                                  patterns or the matching log
                                                  messages.</para>
                                                  </listitem>
                                                  </itemizedlist>
                                                </listitem>
                                                <listitem>
                                                  <para><guimenu>values</guimenu>: OPTIONAL
                                                  &mdash; Name-value pairs that are
                                                  assigned to messages matching the patterns,
                                                  for example, the representation of the event
                                                  described in the message in Common Event
                                                  Format (CEF). The names can be used as
                                                  macros to reference the assigned values.</para>
                                                  <itemizedlist>
                                                  <listitem>
                                                  <para><guimenu>value</guimenu>: OPTIONAL
                                                  &mdash; Contains the value of
                                                  the name-value pair that is assigned
                                                  to the message. For example:
                                                  <synopsis>&lt;value name=".classifier.outcome"&gt;/Success&lt;/value&gt;</synopsis>
                                                  </para>
                                                  </listitem>
                                                  <listitem>
                                                  <para><emphasis>name</emphasis>: The
                                                  name of the name-value pair. It can
                                                  also be used as a macro to reference
                                                  the assigned value.</para>
                                                  </listitem>
                                                  </itemizedlist>
                                                </listitem>
                                                <listitem>
                                                  <para><guimenu>examples</guimenu>: OPTIONAL
                                                  &mdash; A container element for sample
                                                  log messages that should be recognized by
                                                  the pattern. These messages can be used also
                                                  to test the patterns and the parsers.</para>
                                                  <itemizedlist>
                                                  <listitem>
                                                  <para><guimenu>example</guimenu>:
                                                  OPTIONAL &mdash; A container
                                                  element for a sample log message. </para>
                                                  <itemizedlist>
                                                  <listitem>
                                                  <para><guimenu>test_message</guimenu>:
                                                  OPTIONAL &mdash; A
                                                  sample log message that
                                                  should match this pattern.
                                                  For example:
                                                  <synopsis>&lt;test_message&gt;Content filter has been enabled&lt;/test_message&gt;</synopsis></para>
                                                  </listitem>
                                                  <listitem>
                                                  <para><guimenu>test_values</guimenu>:
                                                  OPTIONAL &mdash; A
                                                  container element to test
                                                  the results of the parsers
                                                  used in the pattern.</para>
                                                  <itemizedlist>
                                                  <listitem>
                                                  <para><guimenu>test_value</guimenu>:
                                                  OPTIONAL &mdash;
                                                  The expected value
                                                  of the parser when
                                                  matching the pattern
                                                  to the test message.
                                                  For example:
                                                  <synopsis>&lt;test_value name=".dict.ContentFilter"&gt;enabled&lt;/test_value&gt;</synopsis></para>
                                                  </listitem>
                                                  <listitem>
                                                  <para><emphasis>name</emphasis>:
                                                  The name of the
                                                  parser to
                                                  test.</para>
                                                  </listitem>
                                                  </itemizedlist>
                                                  </listitem>
                                                  </itemizedlist>
                                                  </listitem>
                                                  </itemizedlist>
                                                </listitem>
                                                <listitem>
                                                  <indexterm>
                                                  <primary>tagging messages</primary>
                                                  </indexterm>
                                                  <indexterm>
                                                  <primary>tags</primary>
                                                  </indexterm>
                                                  <para><guimenu>tags</guimenu>: OPTIONAL
                                                  &mdash; An element containing custom
                                                  keywords (tags) about the messages matching
                                                  the patterns. The tags can be used to label
                                                  specific events (for example user logons). It is
                                                  also possible to filter on these tags later
                                                  (see <xref linkend="tagging_messages"/> for
                                                  details). Starting with &product; 3.2, the list of tags assigned to a message can be referenced with the <parameter>$TAGS</parameter> macro.</para>
                                                  <itemizedlist>
                                                  <listitem>
                                                  <para><guimenu>tag</guimenu>: OPTIONAL
                                                  &mdash; A keyword or tags
                                                  applied to messages matching the
                                                  rule. For example:
                                                  <synopsis>&lt;tags&gt;&lt;tag&gt;UserLogin&lt;/tag&gt;&lt;/tags&gt;</synopsis></para>
                                                  </listitem>
                                                  </itemizedlist>
                                                </listitem>
                                            </itemizedlist>
                                        </listitem>
                                    </itemizedlist>
                                </listitem>
                            </itemizedlist>
                        </listitem>
                    </itemizedlist>
                    <example id="example_pattern_database_v3_su">
                        <title>A V3 pattern database containing a single rule</title>
                        <indexterm>
                            <primary>pattern database</primary>
                        </indexterm>
                        <para>The following pattern database contains a single rule that matches a
                            log message of the <parameter>ssh</parameter> application. A sample log
                            message looks like:</para>
                        <synopsis>Accepted password for sampleuser from 10.50.0.247 port 42156 ssh2</synopsis>
                        <para>The following is a simple pattern database containing a matching rule.</para>
                        <synopsis>&lt;patterndb version='3' pub_date='2009-04-17'&gt;
    &lt;ruleset name='ssh' id='123456678'&gt;
        &lt;pattern&gt;ssh&lt;/pattern&gt;
            &lt;rules&gt;
                &lt;rule provider='me' id='182437592347598' class='system'&gt;
                    &lt;patterns&gt;
                        &lt;pattern&gt;Accepted @QSTRING:SSH.AUTH_METHOD: @ for@QSTRING:SSH_USERNAME: @from\ @QSTRING:SSH_CLIENT_ADDRESS: @port @NUMBER:SSH_PORT_NUMBER:@ ssh2&lt;/pattern&gt;
                    &lt;/patterns&gt;
                &lt;/rule&gt;
            &lt;/rules&gt;
    &lt;/ruleset&gt;
&lt;/patterndb&gt;</synopsis>
                        <para>Note that the rule uses macros that refer to parts of the message, for
                            example, you can use the <parameter>$SSH_USERNAME</parameter> macro
                            refer to the username used in the connection.</para>
                        <para>The following is the same example, but with a test message and test
                            values for the parsers.</para>
                        <synopsis>&lt;patterndb version='3' pub_date='2009-04-17'&gt;
    &lt;ruleset name='ssh' id='123456678'&gt;
        &lt;pattern&gt;ssh&lt;/pattern&gt;
            &lt;rules&gt;
                &lt;rule provider='me' id='182437592347598' class='system'&gt;
                    &lt;patterns&gt;
                        &lt;pattern&gt;Accepted @QSTRING:SSH.AUTH_METHOD: @ for@QSTRING:SSH_USERNAME: @from\ @QSTRING:SSH_CLIENT_ADDRESS: @port @NUMBER:SSH_PORT_NUMBER:@ ssh2&lt;/pattern&gt;
                    &lt;/patterns&gt;
                    &lt;examples&gt;
                        &lt;example&gt;
                            &lt;test_message&gt;Accepted password for sampleuser from 10.50.0.247 port 42156 ssh2&lt;/test_message&gt;
                            &lt;test_values&gt;
                                &lt;test_value name="SSH.AUTH_METHOD"&gt;password&lt;/test_value&gt;
                                &lt;test_value name="SSH_USERNAME"&gt;sampleuser&lt;/test_value&gt;
                                &lt;test_value name="SSH_CLIENT_ADDRESS"&gt;10.50.0.247&lt;/test_value&gt;
                                &lt;test_value name="SSH_PORT_NUMBER"&gt;42156&lt;/test_value&gt;
                            &lt;/test_values&gt;
                       &lt;/example&gt;
                    &lt;/examples&gt;
                &lt;/rule&gt;
            &lt;/rules&gt;
    &lt;/ruleset&gt;
&lt;/patterndb&gt;</synopsis>
                    </example>
                </section>
            </section>
        </section>
    </section>
   
    <section id="reference_rewrite">
        <title>Rewriting messages</title>
        <indexterm>
            <primary>rewrite</primary>
            <secondary>reference</secondary>
        </indexterm>
        <indexterm>
            <primary>rewriting messages</primary>
        </indexterm>
        <indexterm>
            <primary>sedding messages</primary>
        </indexterm>
        <indexterm>
            <primary>replacing message text</primary>
        </indexterm>
        <para>The syslog-ng application can rewrite parts of log
            messages<!--( i.e., the contents of
                the $MSG macro)-->: it can search and
            replace text, and also set a specific field to a specified value. Rewriting messages is
            often used in conjunction with message parsing <xref linkend="reference_parsers"/>.</para>
        <para>To create replace a part of the log message, define the string or regular expression
            to replace, the string to replace the original text (macros can be used as well), and
            the field of the message that the rewrite rule should process. Substitution rules can
            operate on any value available via macros, for example HOST, MESSAGE, PROGRAM, or any
            user-defined macros created using parsers (see <xref linkend="reference_parsers"/> for
            details). The only exceptions are the FACILITY, SEVERITY, TAGS, and the date-related fields, which cannot be rewritten.</para>
        <para>As of syslog-ng 3.1, it is also possible to rewrite the structured-data fields of
            messages complying to the RFC5424 (IETF-syslog) message format. Substitution rules use
            the following syntax:</para>
        <synopsis>Declaration:
    rewrite &lt;name_of_the_rule&gt;
    {subst("&lt;string or regular expression to find&gt;", "&lt;replacement string&gt;", value(&lt;field name&gt;) type() flags());};</synopsis>
        <para>The <parameter>type()</parameter> and <parameter>flags()</parameter> options are
            optional. The <parameter>type()</parameter> specifies the type of regular expression to
            use; while the <parameter>flags()</parameter> are the flags of the regular expressions.
            For details on regular expressions, see <xref linkend="reference_regular_expressions"/>.</para>
        <example id="example_rewrite_subst">
            <title>Using substitution rules</title>
            <para>The following example replaces the first occurrence of the string
                <parameter>IP</parameter> in the text of the message with the string
                <parameter>IP-Address</parameter>.</para>
            <synopsis>rewrite r_rewrite_subst{subst("IP", "IP-Address", value("MESSAGE"));};</synopsis>
            <para>To replace every occurrence, use:</para>
            <synopsis>rewrite r_rewrite_subst{subst("IP", "IP-Address", value("MESSAGE"), flags("global"));};</synopsis>
            <para>Multiple substitution rules are applied sequentially; the following rules replace
                the first occurrence of the string <parameter>IP</parameter> with the string
                <parameter>IP-Addresses</parameter>. </para>
            <synopsis>rewrite r_rewrite_subst{subst("IP", "IP-Address", value("MESSAGE")); subst("Address", "Addresses", value("MESSAGE"));};</synopsis>
        </example>    
        <indexterm>
            <primary>setting message fields</primary>
        </indexterm>
        <para>To set a field of the message to a specific value, define the string to include in the
            message, and the field where it should be included. Setting a field can operate on any
            value available via macros, for example HOST, MESSAGE, PROGRAM, or any user-defined macros
            created using parsers (see <xref linkend="reference_parsers"/> for details). The only exceptions are the FACILITY, SEVERITY, TAGS, and the date-related fields, which cannot be rewritten. Note that
            this operation completely replaces any previous value of that field. Use the following
            syntax:</para>
        <synopsis>Declaration:
    rewrite &lt;name_of_the_rule&gt;
    {set("&lt;string to include&gt;", value(&lt;field name&gt;)  flags());};</synopsis>
        <example id="example_rewrite_set">
            <title>Setting message fields to a particular value</title>
            <para>The following example sets the HOST field of the message to
                <parameter>myhost</parameter>. </para>
            <synopsis>rewrite r_rewrite_set{set("myhost", value("HOST"));};</synopsis>
            <para>The following example sets the sequence ID field of the RFC5424-formatted
                (IETF-syslog) messages to a fixed value.</para>
            <synopsis>rewrite r_sd { set("55555" value(".SDATA.meta.sequenceId")); };</synopsis>
            <para>It is also possible to use set the value of a field that does not exist yet, and create a new name-value pair that is associated with the message. The following example created the <parameter>MODIFIED</parameter> field and sets its value to <parameter>yes</parameter>. If you use the <parameter>$MODIFIED</parameter> macro in a template or SQL table, its value will be <parameter>yes</parameter> for every message that was processed with this rewrite rule, and empty for every other message.</para>
            <synopsis>rewrite r_rewrite_set{set("yes", value("MODIFIED"));};</synopsis>
        </example>
    </section>
    
    <section id="reference_regular_expressions">
        <title>Regular expressions</title>
        <indexterm significance="preferred">
            <primary>regular expressions</primary>
        </indexterm>
        <indexterm type="parameter">
            <primary>type()</primary>
        </indexterm>
        <para>Filters and substitution rewrite rules can use regular expressions. The regular expressions can use up to 255 regexp matches (<parameter>${1} ... ${255}</parameter>), but only from the last filter and only if the <parameter>flags("store-matches")</parameter> flag was set for the filter. For case-insensitive searches, use the <parameter>flags("ignore-case")</parameter> option.</para>
        
        <para>By default, syslog-ng uses POSIX-style regular expressions. To use other expression types, add the
            <parameter>type()</parameter> option after the regular expression.</para>
        <para>The &abbrev; application supports the following expression types:</para>
        <itemizedlist>
            <listitem>
                <para><link linkend="reference_regexp_posix">POSIX regular expressions</link></para>
            </listitem>
            <listitem>
                <para><link linkend="reference_regexp_pcre">Perl Compatible Regular Expressions (PCRE)</link></para>
            </listitem>
            <listitem>
                <para><link linkend="reference_regexp_string">Literal string searches</link></para>
            </listitem>
            <listitem>
                <para><link linkend="reference_regexp_glob">Glob patterns without regular expression support</link></para>
            </listitem>
        </itemizedlist>
        <simplesect id="reference_regexp_posix">
            <title>posix</title>
                <indexterm type="parameter">
                    <primary>posix</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Use POSIX regular expressions. If the <parameter>type()</parameter>
                parameter is not specified, syslog-ng uses POSIX regular expressions by
                default.</para>
                <para>Posix regular expressions have the following flag options:</para>
        <formalpara>
            <title>global:</title>
                <indexterm type="parameter">
                    <primary>global</primary>
                </indexterm>
            <para>Usable only in rewrite rules; match for every occurrence of the
                expression, not only the first one.</para>
        </formalpara>
        <formalpara>
            <title>ignore-case:</title>
                <indexterm type="parameter">
                    <primary>ignore-case</primary>
                </indexterm>
            <para>Disable case-sensitivity.</para>
        </formalpara>
        <!--<row>
            <entry>newline</entry>
            <entry></entry>
            </row>-->
        <formalpara>
            <title>store-matches:</title>
                <indexterm type="parameter">
                    <primary>store-matches</primary>
                </indexterm>
            <para>Store the matches of the regular expression into the <parameter>$1,
                ... $255</parameter> variables. Matches from the last filter
                expression can be referenced in regular expressions.</para>
        </formalpara>
        <formalpara>
            <title>utf8:</title>
                <indexterm type="parameter">
                    <primary>utf8</primary>
                </indexterm>
            <para>Use UTF-8 matching.</para>
        </formalpara>
        <example id="example_regexp_posix">
            <title>Using Posix regular expressions</title>
            <synopsis>filter f_message { message("keyword" flags("utf8" "ignore-case") );</synopsis>
        </example>
        </simplesect>
        <simplesect id="reference_regexp_pcre">
            <title>pcre</title>
                <indexterm type="parameter">
                    <primary>pcre</primary>
                </indexterm>
                <indexterm>
                    <primary>regular expressions</primary>
                    <secondary>pcre</secondary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Use Perl Compatible Regular Expressions (PCRE). PCRE expressions can be used if &abbrev; was compiled with the <parameter>--enable-pcre</parameter> option enabled. Execute
                the <command>syslog-ng -V</command> command to check if your binary 
                supports PCRE regular expressions. Starting with &abbrev; version 3.1, PCRE expressions are supported on every platform.</para>
            <para>PCRE regular expressions have the following flag options:</para>
        <formalpara>
            <title>global:</title>
                <indexterm type="parameter">
                    <primary>global</primary>
                </indexterm>
            <para>Usable only in rewrite rules; match for every occurrence of the
                expression, not only the first one.</para>
        </formalpara>
        <formalpara>
            <title>ignore-case:</title>
                <indexterm type="parameter">
                    <primary>ignore-case</primary>
                </indexterm>
            <para>Disable case-sensitivity.</para>
        </formalpara>
        <!--<row>
            <entry>newline</entry>
            <entry>Process the string until the end of the string, ignoring newline
            characters.</entry>
            </row>-->
        <formalpara>
            <title>nobackref:</title>
                <indexterm type="parameter">
                    <primary>nobackref</primary>
                </indexterm>
            <para>Do not store back references for the matches &mdash; improves
                performance.</para>
        </formalpara>
        <formalpara>
            <title>store-matches:</title>
                <indexterm type="parameter">
                    <primary>store-matches</primary>
                </indexterm>
            <para>Store the matches of the regular expression into the <parameter>$1,
                ... $255</parameter> variables. Named matches (also called named
                subpatterns), for example <parameter>(?&lt;name&gt;...)</parameter>,
                are stored as well. Matches from the last filter expression can be
                referenced in regular expressions.</para>
        </formalpara>
        <formalpara>
            <title>unicode:</title>
                <indexterm type="parameter">
                    <primary>unicode</primary>
                </indexterm>
            <para>Use Unicode support for UTF-8 matches: UTF-8 character sequences are
                handled as single characters.</para>
        </formalpara>
        <formalpara>
            <title>utf8:</title>
                <indexterm type="parameter">
                    <primary>utf8</primary>
                </indexterm>
            <para>An alias for the <parameter>unicode</parameter> flag.</para>
        </formalpara>
        <example id="example_regexp_pcre">
            <title>Using PCRE regular expressions</title>
            <synopsis>rewrite r_rewrite_subst 
        {subst("a*", "?", field("message") type("pcre") flags("utf8" "global"));  };</synopsis>
        </example>
        </simplesect>
        <simplesect id="reference_regexp_string">
            <title>string</title>
                <indexterm type="parameter">
                    <primary>string</primary>
                </indexterm>
            <para><guilabel>Description:</guilabel> Match the strings literally, without regular expression support. By
                default, only identical strings are matched. For partial matches, use
                the <parameter>flags("prefix")</parameter> or the
                <parameter>flags("substring")</parameter> flags.</para>
        </simplesect>
        <simplesect id="reference_regexp_glob">
            <title>glob</title>
            <indexterm type="parameter">
                    <primary>glob</primary>
            </indexterm>
            <indexterm>
                <primary>glob patterns</primary>
            </indexterm>
            <para><guilabel>Description:</guilabel> Use glob patterns (that is, wildcards and character ranges) without regular expression support. The advantage of glob patterns to regular expressions is that globs can be processed much faster. For details on glob patterns, see the <emphasis>glob manual page</emphasis> (<command>man glob</command>).</para>
        </simplesect>
    </section>

    <section id="reference_options">
        <title>Global options</title>
        <indexterm>
            <primary>options</primary>
            <secondary>reference</secondary>
        </indexterm>
        <indexterm>
            <primary>global options</primary>
            <secondary>reference</secondary>
        </indexterm>
        <para>The following options can be specified in the options statement, as described in <xref
                linkend="options"/>.</para>
        <simplesect>
            <title>bad_hostname()</title>
                <indexterm type="parameter">
                    <primary>bad_hostname()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>regular expression</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>no</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> A regexp containing hostnames which should not be handled as
                            hostnames.</para>
        </simplesect>
        <simplesect id="option_chain_hostnames">
            <title>chain_hostnames()</title>
                <indexterm type="parameter">
                    <primary>chain_hostnames()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>yes</parameter> | <parameter>no</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>no</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Enable or disable the chained hostname format.</para>
        </simplesect>
        <simplesect>
            <title>check_hostname()</title>
                <indexterm type="parameter">
                    <primary>check_hostname()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>yes</parameter> | <parameter>no</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>no</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Enable or disable checking whether the hostname contains valid
                            characters.</para>
        </simplesect>
        <simplesect>
            <title>create_dirs()</title>
                <indexterm type="parameter">
                    <primary>create_dirs()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>yes</parameter> | <parameter>no</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>no</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Enable or disable directory creation for destination files.</para>
        </simplesect>
        <simplesect>
            <title>dir_group()</title>
                <indexterm type="parameter">
                    <primary>dir_group()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>groupid</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>root</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The default group for newly created directories.</para>
        </simplesect>
        <simplesect>
            <title>dir_owner()</title>
                <indexterm type="parameter">
                    <primary>dir_owner()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>userid</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>root</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The default owner of newly created directories.</para>
        </simplesect>
        <simplesect>
            <title>dir_perm()</title>
                <indexterm type="parameter">
                    <primary>dir_perm()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>permission value</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0700</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The default permission for newly created directories.</para>
        </simplesect>
        <simplesect>
            <title>dns_cache()</title>
                <indexterm type="parameter">
                    <primary>dns_cache()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>yes</parameter> | <parameter>no</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>yes</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Enable or disable DNS cache usage.</para>
        </simplesect>
        <simplesect>
            <title>dns_cache_expire()</title>
                <indexterm type="parameter">
                    <primary>dns_cache_expire()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>3600</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Number of seconds while a successful lookup is cached.</para>
        </simplesect>
        <simplesect>
            <title>dns_cache_expire_failed()</title>
                <indexterm type="parameter">
                    <primary>dns_cache_expire_failed()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>60</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Number of seconds while a failed lookup is cached.</para>
        </simplesect>
        <simplesect>
            <title>dns_cache_hosts()</title>
                <indexterm type="parameter">
                    <primary>dns_cache_hosts()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>filename</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>unset</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Name of a file in <filename>/etc/hosts</filename> format that
                            contains static IP-&gt;hostname mappings. Use this option to resolve
                            hostnames locally without using a DNS. Note that any change to this file
                            triggers a reload in syslog-ng and is instantaneous.</para>
        </simplesect>
        <simplesect>
            <title>dns_cache_size()</title>
                <indexterm type="parameter">
                    <primary>dns_cache_size()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>1007</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Number of hostnames in the DNS cache.</para>
        </simplesect>
        <simplesect>
            <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'destination_commonoption_timezone']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <title>flush_lines()</title>
                <indexterm type="parameter">
                    <primary>flush_lines()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies how many lines are flushed to a destination at a time.
                            Syslog-ng waits for this number of lines to accumulate and sends them
                            off in a single batch. Setting this number high increases throughput as
                            fully filled frames are sent to the network, but also increases message
                            latency. The latency can be limited by the use of the
                                <parameter>flush_timeout</parameter> option.</para>
        </simplesect>
        <simplesect>
            <title>flush_timeout()</title>
                <indexterm type="parameter">
                    <primary>flush_timeout()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>time in milliseconds</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>10000</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the time syslog-ng waits for lines to accumulate in its
                            output buffer. See the <parameter>flush_lines()</parameter> option for
                            more information.</para>
        </simplesect>
                        
                    <!--<row>
                        <entry>gc_busy_threshold() (DEPRECATED)</entry>
                        <entry>number</entry>
                        <entry>n/a</entry>
                        <entry>Has no meaning in syslog-ng 1.9.x and later. </entry>
                    </row>
                    <row>
                        <entry>gc_idle_threshold() (DEPRECATED)</entry>
                        <entry>number</entry>
                        <entry>n/a</entry>
                        <entry>Has no meaning in syslog-ng 1.9.x and later. </entry>
                    </row>-->
        
        <simplesect>
            <title>group()</title>
                <indexterm type="parameter">
                    <primary>group()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>groupid</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>root</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The default group of output files. By default, syslog-ng changes the
                            privileges of accessed files (for example <parameter>/dev/null</parameter>) to
                                <parameter>root.root 0600</parameter>. To disable modifying
                            privileges, use this option with the <parameter>-1</parameter>
                        value.</para>
        </simplesect>
        <simplesect>
            <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_hostname']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_keep_timestamp']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <title>log_fifo_size()</title>
                <indexterm type="parameter">
                    <primary>log_fifo_size()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>1000</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The number of lines fitting to the output queue. Note that it is not possible to set this option lower than 1000.</para>
        </simplesect>
        <simplesect>
            <title>log_msg_size()</title>
                <indexterm type="parameter">
                    <primary>log_msg_size()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>8192</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Maximum length of a message in bytes.</para>
        </simplesect>
        <simplesect id="logstore_option_journal_memory_limit">
            <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'logstore_journal_shmem_threshold']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <title>normalize_hostnames()</title>
                <indexterm type="parameter">
                    <primary>normalize_hostnames()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>yes</parameter> | <parameter>no</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>no</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Normalize hostnames, which currently translates to converting them to
                            lower case. (requires 1.9.9)</para>
        </simplesect>
        <simplesect>
            <title>owner()</title>
                <indexterm type="parameter">
                    <primary>owner()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>userid</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>root</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The default owner of output files. By default, syslog-ng changes the
                            privileges of accessed files (for example <parameter>/dev/null</parameter>) to
                                <parameter>root.root 0600</parameter>. To disable modifying
                            privileges, use this option with the <parameter>-1</parameter>
                        value.</para>
        </simplesect>
        <simplesect>
            <title>mark()</title>
                <indexterm type="parameter">
                    <primary>mark()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>1200</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> An alias for the obsolete <parameter>mark_freq()</parameter> option,
                            retained for compatibility with syslog-ng version 1.6.x.</para>
        </simplesect>
        <simplesect>
            <title>mark_freq()</title>
                <indexterm type="parameter">
                    <primary>mark_freq()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>1200</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The number of seconds between two <parameter>MARK</parameter>
                            messages. <parameter>MARK</parameter> messages are generated when there
                            was no message traffic to inform the receiver that the connection is
                            still alive. Note that only local messages postpone the sending of the
                                <parameter>MARK</parameter> message, relayed messages do not. If set
                            to zero (<parameter>0</parameter>), no <parameter>MARK</parameter>
                            messages are sent.</para>
        </simplesect>
        <simplesect>
            <title>perm()</title>
                <indexterm type="parameter">
                    <primary>perm()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>permission value</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0600</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The default permission for output files. By default, syslog-ng
                            changes the privileges of accessed files (for example
                            <parameter>/dev/null</parameter>) to <parameter>root.root
                            0600</parameter>. To disable modifying privileges, use this option with
                            the <parameter>-1</parameter> value.</para>
        </simplesect>
        <simplesect id="recv_time_zone">
            <title>recv_time_zone()</title>
                <indexterm type="parameter">
                    <primary>recv_time_zone()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>time offset (for example: <parameter>+03:00</parameter>)</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>local timezone</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the time zone associated with the incoming messages, if not
                            specified otherwise in the message or in the source driver. See also
                                <xref linkend="timezone_handling"/> and <xref linkend="example_timezones"/> for details.</para>
        </simplesect>
        <simplesect id="send_time_zone">
            <title>send_time_zone()</title>
                <indexterm type="parameter">
                    <primary>send_time_zone()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>time offset (for example: <parameter>+03:00</parameter>)</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>local timezone</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the time zone associated with the messages sent by
                            syslog-ng, if not specified otherwise in the message or in the
                            destination driver. See <xref linkend="timezone_handling"/> for
                        details.</para>
        </simplesect>
        <simplesect>
            <title>stats()</title>
                <indexterm type="parameter">
                    <primary>stats()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>600</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The period between two STATS messages in seconds. STATS are log
                            messages sent by syslog-ng, containing statistics about dropped log
                            messages. Set to <parameter>0</parameter> to disable the STATS
                        messages.</para>
        </simplesect>
        <simplesect id="global_option_stats_level">
            <title>stats_level()</title>
                <indexterm type="parameter">
                    <primary>stats_level()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>0</parameter> | <parameter>1</parameter> | <parameter>2</parameter> | <parameter>3</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>0</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the detail of statistics syslog-ng collects about the processed messages.</para>
            <itemizedlist>
                            <listitem>
                                <para>Level 0 collects only statistics about the sources
                            and destinations</para>
                            </listitem>
                            <listitem>
                                <para>Level 1 contains details about the different
                            connections and log files, but has a slight memory overhead</para>
                            </listitem>
                            <listitem>
                                <para>Level 2 contains detailed statistics based on the hostname.</para>
                            </listitem>
                            <listitem>
                                <para>Level 3 contains detailed statistics based on various message parameters like facility, severity, or tags.</para>
                            </listitem>
                        </itemizedlist>
                         <para>Note that level 2 and 3 increase the memory requirements and CPU load.</para>
        </simplesect>
        <simplesect id="global_option_stats_reset">
            <title>stats_reset()</title>
                <indexterm type="parameter">
                    <primary>stats_reset()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>yes</parameter> | <parameter>no</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>no</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> If enabled, the statistics of orphaned objects (object that were present earlier in the syslog-ng configuration file, but have been deleted) are automatically deleted when the configuration is reloaded.</para>
        </simplesect>
        <simplesect>
            <title>sync() or sync_freq() (DEPRECATED)</title>
                <indexterm type="parameter">
                    <primary>sync() or sync_freq() (DEPRECATED)</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Obsolete aliases for <parameter>flush_lines()</parameter></para>
        </simplesect>
        <simplesect>
            <title>time_reap()</title>
                <indexterm type="parameter">
                    <primary>time_reap()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>60</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The time to wait in seconds before an idle destination file is
                            closed.</para>
        </simplesect>
        <simplesect>
            <title>time_reopen()</title>
                <indexterm type="parameter">
                    <primary>time_reopen()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>60</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The time to wait in seconds before a dead connection is
                            reestablished.</para>
        </simplesect>
        <simplesect>
            <title>time_sleep()</title>
                <indexterm type="parameter">
                    <primary>time_sleep()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>0</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The time to wait in milliseconds between each invocation of the
                                <parameter>poll()</parameter> iteration.</para>
        </simplesect>
        <simplesect>
            <title>timestamp-url()</title>
                <indexterm type="parameter">
                    <primary>timestamp-url()</primary>
                </indexterm>
            <indexterm>
                <primary>timestamping</primary>
                <secondary>URL</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> The URL of the Timestamping Authority used to request timestamps
                                to sign logstore chunks. Note that &abbrev; currently supports
                                only Timestamping Authorities that conform to <emphasis>RFC3161
                                    Internet X.509 Public Key Infrastructure Time-Stamp
                                Protocol</emphasis>, other protocols like <emphasis>Microsoft
                                Authenticode Timestamping</emphasis> are not supported.</para>
            <indexterm>
                <primary>timestamping</primary>
                <secondary>Microsoft Authenticode Timestamping</secondary>
            </indexterm>
            <indexterm>
                <primary>timestamping</primary>
                <secondary>RFC3161</secondary>
            </indexterm>
        </simplesect>
        <simplesect>
            <title>timestamp-policy()</title>
                <indexterm type="parameter">
                    <primary>timestamp-policy()</primary>
                </indexterm>
            <indexterm>
                <primary>timestamping</primary>
                <secondary>OID</secondary>
            </indexterm>
            <indexterm>
                <primary>timestamping</primary>
                <secondary>policies</secondary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>string</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> If the Timestamping Server has timestamping policies configured, specify the OID of the policy to use into the Timestamping policy field. &abbrev; will include this ID in the timestamping requests sent to the TSA. This option is available in &abbrev; 3.1 and later.</para>
        </simplesect>
        <simplesect>
            <title>ts_format()</title>
                <indexterm type="parameter">
                    <primary>ts_format()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>rfc3164</parameter> | <parameter>bsd</parameter> | <parameter>rfc3339</parameter> | <parameter>iso</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>rfc3164</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Specifies the timestamp format used when syslog-ng itself formats a
                timestamp and nothing else specifies a format (for example:
                <parameter>STAMP</parameter> macros, internal messages, messages without
                original timestamps). See also <xref linkend="example_timezones"/>.</para>
        </simplesect>
        <simplesect>
            <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_use_dns']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>    
        <simplesect>
            <xi:include href="reference_common.xml" xpointer="xpointer(//simplesect[@id = 'source_commonoption_use_fqdn']/node() )" xmlns:xi="http://www.w3.org/2001/XInclude"/>
        </simplesect>
        <simplesect>
            <title>use_time_recvd() (DEPRECATED)</title>
                <indexterm type="parameter">
                    <primary>use_time_recvd() (DEPRECATED)</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>yes</parameter> | <parameter>no</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>no</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> This option controls how the time related macros are expanded in
                                filename and content templates. If set to yes, then the non-prefixed
                                versions of the time related macros (for example:
                                <parameter>HOUR</parameter> instead of <parameter>R_HOUR</parameter>
                                and <parameter>S_HOUR</parameter>) refer to the time when the
                                message was received, otherwise it refers to the timestamp which is
                                in the message.</para>
            <note>
                <para>The timestamps in the messages are generated by the
                originating host and might not be accurate.</para>
            </note>
            <para>This option is deprecated as many users assumed that it controls
                                the timestamp as it is written to logfiles/destinations, which is
                                not the case. To change how messages are formatted, specify a
                                content-template referring to the appropriate prefixed
                                    (<parameter>S_</parameter> or <parameter>R_</parameter>) time
                                macro. </para>
        </simplesect>
    </section>
    
    <section id="tlsoptions">
        <title>TLS options</title>
        <indexterm>
            <primary>TLS</primary>
            <secondary>reference</secondary>
        </indexterm>
        <para>The syslog-ng application is able to encrypt incoming and outgoing syslog message
            flows using SSL/TLS, if the TCP transport protocol (the <parameter>tcp()</parameter> or
            <parameter>tcp6()</parameter> sources or destination) is used. </para>
        <note>
            <para>The format of the TLS connections used by syslog-ng is similar to using syslog-ng
                and stunnel, but the source IP information is not lost. </para>
        </note>
        <para>To encrypt connections, use the <parameter>tls()</parameter> option in the source and
            destination statements. </para>
        <para>The tls() option can include the following settings: </para>
        <simplesect>
            <title>ca_dir()</title>
                <indexterm type="parameter">
                    <primary>ca_dir()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Directory name</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>none</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Name of a directory, that contains a set of trusted CA certificates
                in PEM format. The CA certificate files has to be named after the 32-bit
                hash of the subject's name. This naming can be created using the
                c_rehash utility in openssl.</para>
        </simplesect>
        <simplesect>
            <title>cert_file()</title>
                <indexterm type="parameter">
                    <primary>cert_file()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Filename</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>none</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Name of a file, that contains an X.509 certificate in PEM format,
                suitable as a TLS certificate, matching the private key.</para>
        </simplesect>
        <simplesect>
            <title>crl_dir()</title>
                <indexterm type="parameter">
                    <primary>crl_dir()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Directory name</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>none</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Name of a directory that contains the Certificate Revocation Lists
                for trusted CAs. Similarly to <parameter>ca_dir()</parameter> files, use
                the 32-bit hash of the name of the issuing CAs as filenames. The
                extension of the files must be <parameter>.r0</parameter>.</para>
        </simplesect>
        <simplesect>
            <title>key_file()</title>
                <indexterm type="parameter">
                    <primary>key_file()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>Filename</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>none</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Name of a file, that contains an unencrypted private key in PEM
                format, suitable as a TLS key.</para>
        </simplesect>
        <simplesect>
            <title>peer_verify()</title>
                <indexterm type="parameter">
                    <primary>peer_verify()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>optional-trusted</parameter> | <parameter>optional-untrusted</parameter> | <parameter>required-trusted</parameter> |
                                <parameter>required-untrusted</parameter></entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><parameter>required-trusted</parameter></entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> Verification method of the peer, the four possible values is a
                combination of two properties of validation: whether the peer is
                required to provide a certificate (required or optional prefix), and
                whether the certificate provided needs to be trusted or not. For
                untrusted certificates only the existence of the certificate is checked,
                but it does not have to be valid &mdash; syslog-ng accepts the
                certificate even if it is expired, signed by an unknown CA, or its CN
                and the name of the machine mismatch.</para>
        </simplesect>
        <simplesect>
            <title>trusted_dn()</title>
                <indexterm type="parameter">
                    <primary>trusted_dn()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>list of accepted distinguished names</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>none</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> To accept connections only from hosts using certain certificates
                signed by the trusted CAs, list the distinguished names of the accepted
                certificates in this parameter. For example using <parameter>trusted_dn("*,
                    O=Example Inc, ST=Some-State, C=*")</parameter> will accept only
                certificates issued for the <parameter>Example Inc</parameter>
                organization in <parameter>Some-State</parameter> state.</para>
        </simplesect>
        <simplesect>
            <title>trusted_keys()</title>
                <indexterm type="parameter">
                    <primary>trusted_keys()</primary>
                </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="80pt"/>
                    <tbody>
                        <row>
                            <entry>Accepted values:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>list of accepted SHA-1 fingerprints</entry>
                        </row>
                        <row>
                            <entry>Default:
                                <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>none</entry>
                        </row>
                    </tbody>
                </tgroup>  
            </informaltable>
            <para><guilabel>Description:</guilabel> To accept connections only from hosts using certain certificates
                having specific SHA-1 fingerprints, list the fingerprints of the
                accepted certificates in this parameter. For example
                <parameter>trusted_keys("SHA1:00:EF:ED:A4:CE:00:D1:14:A4:AB:43:00:EF:00:91:85:FF:89:28:8F",
                    "SHA1:0C:42:00:3E:B2:60:36:64:00:E2:83:F0:80:46:AD:00:A8:9D:00:15")</parameter>.</para>
        <note>
            <para>When using the <parameter>trusted_keys()</parameter> and
                <parameter>trusted_dn()</parameter> parameters, note the following:</para>
            <itemizedlist>
                <listitem>
                    <para>First, the <parameter>trusted_keys()</parameter> parameter is checked. If
                        the fingerprint of the peer is listed, the certificate validation is
                        performed.</para>
                </listitem>
                <listitem>
                    <para>If the fingerprint of the peer is not listed in the
                        <parameter>trusted_keys()</parameter> parameter, the
                        <parameter>trusted_dn()</parameter> parameter is checked. If the DN of
                        the peer is not listed in the <parameter>trusted_dn()</parameter> parameter,
                        the authentication of the peer fails and the connection is closed.</para>
                </listitem>
            </itemizedlist>
        </note>
        </simplesect>
    </section>
</chapter>
